"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/mysql2";
exports.ids = ["vendor-chunks/mysql2"];
exports.modules = {

/***/ "(rsc)/./node_modules/mysql2/index.js":
/*!**************************************!*\
  !*** ./node_modules/mysql2/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nconst SqlString = __webpack_require__(/*! sqlstring */ \"(rsc)/./node_modules/sqlstring/index.js\");\nconst Connection = __webpack_require__(/*! ./lib/connection.js */ \"(rsc)/./node_modules/mysql2/lib/connection.js\");\nconst ConnectionConfig = __webpack_require__(/*! ./lib/connection_config.js */ \"(rsc)/./node_modules/mysql2/lib/connection_config.js\");\nconst parserCache = __webpack_require__(/*! ./lib/parsers/parser_cache */ \"(rsc)/./node_modules/mysql2/lib/parsers/parser_cache.js\");\nexports.createConnection = function(opts) {\n    return new Connection({\n        config: new ConnectionConfig(opts)\n    });\n};\nexports.connect = exports.createConnection;\nexports.Connection = Connection;\nexports.ConnectionConfig = ConnectionConfig;\nconst Pool = __webpack_require__(/*! ./lib/pool.js */ \"(rsc)/./node_modules/mysql2/lib/pool.js\");\nconst PoolCluster = __webpack_require__(/*! ./lib/pool_cluster.js */ \"(rsc)/./node_modules/mysql2/lib/pool_cluster.js\");\nexports.createPool = function(config) {\n    const PoolConfig = __webpack_require__(/*! ./lib/pool_config.js */ \"(rsc)/./node_modules/mysql2/lib/pool_config.js\");\n    return new Pool({\n        config: new PoolConfig(config)\n    });\n};\nexports.createPoolCluster = function(config) {\n    const PoolCluster = __webpack_require__(/*! ./lib/pool_cluster.js */ \"(rsc)/./node_modules/mysql2/lib/pool_cluster.js\");\n    return new PoolCluster(config);\n};\nexports.createQuery = Connection.createQuery;\nexports.Pool = Pool;\nexports.PoolCluster = PoolCluster;\nexports.createServer = function(handler) {\n    const Server = __webpack_require__(/*! ./lib/server.js */ \"(rsc)/./node_modules/mysql2/lib/server.js\");\n    const s = new Server();\n    if (handler) {\n        s.on(\"connection\", handler);\n    }\n    return s;\n};\nexports.PoolConnection = __webpack_require__(/*! ./lib/pool_connection */ \"(rsc)/./node_modules/mysql2/lib/pool_connection.js\");\nexports.authPlugins = __webpack_require__(/*! ./lib/auth_plugins */ \"(rsc)/./node_modules/mysql2/lib/auth_plugins/index.js\");\nexports.escape = SqlString.escape;\nexports.escapeId = SqlString.escapeId;\nexports.format = SqlString.format;\nexports.raw = SqlString.raw;\nexports.__defineGetter__(\"createConnectionPromise\", ()=>(__webpack_require__(/*! ./promise.js */ \"(rsc)/./node_modules/mysql2/promise.js\").createConnection));\nexports.__defineGetter__(\"createPoolPromise\", ()=>(__webpack_require__(/*! ./promise.js */ \"(rsc)/./node_modules/mysql2/promise.js\").createPool));\nexports.__defineGetter__(\"createPoolClusterPromise\", ()=>(__webpack_require__(/*! ./promise.js */ \"(rsc)/./node_modules/mysql2/promise.js\").createPoolCluster));\nexports.__defineGetter__(\"Types\", ()=>__webpack_require__(/*! ./lib/constants/types.js */ \"(rsc)/./node_modules/mysql2/lib/constants/types.js\"));\nexports.__defineGetter__(\"Charsets\", ()=>__webpack_require__(/*! ./lib/constants/charsets.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charsets.js\"));\nexports.__defineGetter__(\"CharsetToEncoding\", ()=>__webpack_require__(/*! ./lib/constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\"));\nexports.setMaxParserCache = function(max) {\n    parserCache.setMaxCache(max);\n};\nexports.clearParserCache = function() {\n    parserCache.clearCache();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsWUFBWUMsbUJBQU9BLENBQUM7QUFFMUIsTUFBTUMsYUFBYUQsbUJBQU9BLENBQUM7QUFDM0IsTUFBTUUsbUJBQW1CRixtQkFBT0EsQ0FBQztBQUNqQyxNQUFNRyxjQUFjSCxtQkFBT0EsQ0FBQztBQUU1Qkksd0JBQXdCLEdBQUcsU0FBU0UsSUFBSTtJQUN0QyxPQUFPLElBQUlMLFdBQVc7UUFBRU0sUUFBUSxJQUFJTCxpQkFBaUJJO0lBQU07QUFDN0Q7QUFFQUYsZUFBZSxHQUFHQSxRQUFRQyxnQkFBZ0I7QUFDMUNELGtCQUFrQixHQUFHSDtBQUNyQkcsd0JBQXdCLEdBQUdGO0FBRTNCLE1BQU1PLE9BQU9ULG1CQUFPQSxDQUFDO0FBQ3JCLE1BQU1VLGNBQWNWLG1CQUFPQSxDQUFDO0FBRTVCSSxrQkFBa0IsR0FBRyxTQUFTRyxNQUFNO0lBQ2xDLE1BQU1LLGFBQWFaLG1CQUFPQSxDQUFDO0lBQzNCLE9BQU8sSUFBSVMsS0FBSztRQUFFRixRQUFRLElBQUlLLFdBQVdMO0lBQVE7QUFDbkQ7QUFFQUgseUJBQXlCLEdBQUcsU0FBU0csTUFBTTtJQUN6QyxNQUFNRyxjQUFjVixtQkFBT0EsQ0FBQztJQUM1QixPQUFPLElBQUlVLFlBQVlIO0FBQ3pCO0FBRUFILG1CQUFtQixHQUFHSCxXQUFXYSxXQUFXO0FBRTVDVixZQUFZLEdBQUdLO0FBRWZMLG1CQUFtQixHQUFHTTtBQUV0Qk4sb0JBQW9CLEdBQUcsU0FBU1ksT0FBTztJQUNyQyxNQUFNQyxTQUFTakIsbUJBQU9BLENBQUM7SUFDdkIsTUFBTWtCLElBQUksSUFBSUQ7SUFDZCxJQUFJRCxTQUFTO1FBQ1hFLEVBQUVDLEVBQUUsQ0FBQyxjQUFjSDtJQUNyQjtJQUNBLE9BQU9FO0FBQ1Q7QUFFQWQsK0hBQWlDO0FBQ2pDQSw0SEFBOEI7QUFDOUJBLGNBQWMsR0FBR0wsVUFBVXVCLE1BQU07QUFDakNsQixnQkFBZ0IsR0FBR0wsVUFBVXdCLFFBQVE7QUFDckNuQixjQUFjLEdBQUdMLFVBQVV5QixNQUFNO0FBQ2pDcEIsV0FBVyxHQUFHTCxVQUFVMEIsR0FBRztBQUUzQnJCLFFBQVFzQixnQkFBZ0IsQ0FDdEIsMkJBQ0EsSUFBTTFCLG9HQUF3QztBQUdoREksUUFBUXNCLGdCQUFnQixDQUN0QixxQkFDQSxJQUFNMUIsOEZBQWtDO0FBRzFDSSxRQUFRc0IsZ0JBQWdCLENBQ3RCLDRCQUNBLElBQU0xQixxR0FBeUM7QUFHakRJLFFBQVFzQixnQkFBZ0IsQ0FBQyxTQUFTLElBQU0xQixtQkFBT0EsQ0FBQztBQUVoREksUUFBUXNCLGdCQUFnQixDQUFDLFlBQVksSUFDbkMxQixtQkFBT0EsQ0FBQztBQUdWSSxRQUFRc0IsZ0JBQWdCLENBQUMscUJBQXFCLElBQzVDMUIsbUJBQU9BLENBQUM7QUFHVkkseUJBQXlCLEdBQUcsU0FBU3dCLEdBQUc7SUFDdEN6QixZQUFZMEIsV0FBVyxDQUFDRDtBQUMxQjtBQUVBeEIsd0JBQXdCLEdBQUc7SUFDekJELFlBQVk0QixVQUFVO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWNlZS1wcm90by1vbmUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2luZGV4LmpzP2JjZmYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBTcWxTdHJpbmcgPSByZXF1aXJlKCdzcWxzdHJpbmcnKTtcblxuY29uc3QgQ29ubmVjdGlvbiA9IHJlcXVpcmUoJy4vbGliL2Nvbm5lY3Rpb24uanMnKTtcbmNvbnN0IENvbm5lY3Rpb25Db25maWcgPSByZXF1aXJlKCcuL2xpYi9jb25uZWN0aW9uX2NvbmZpZy5qcycpO1xuY29uc3QgcGFyc2VyQ2FjaGUgPSByZXF1aXJlKCcuL2xpYi9wYXJzZXJzL3BhcnNlcl9jYWNoZScpO1xuXG5leHBvcnRzLmNyZWF0ZUNvbm5lY3Rpb24gPSBmdW5jdGlvbihvcHRzKSB7XG4gIHJldHVybiBuZXcgQ29ubmVjdGlvbih7IGNvbmZpZzogbmV3IENvbm5lY3Rpb25Db25maWcob3B0cykgfSk7XG59O1xuXG5leHBvcnRzLmNvbm5lY3QgPSBleHBvcnRzLmNyZWF0ZUNvbm5lY3Rpb247XG5leHBvcnRzLkNvbm5lY3Rpb24gPSBDb25uZWN0aW9uO1xuZXhwb3J0cy5Db25uZWN0aW9uQ29uZmlnID0gQ29ubmVjdGlvbkNvbmZpZztcblxuY29uc3QgUG9vbCA9IHJlcXVpcmUoJy4vbGliL3Bvb2wuanMnKTtcbmNvbnN0IFBvb2xDbHVzdGVyID0gcmVxdWlyZSgnLi9saWIvcG9vbF9jbHVzdGVyLmpzJyk7XG5cbmV4cG9ydHMuY3JlYXRlUG9vbCA9IGZ1bmN0aW9uKGNvbmZpZykge1xuICBjb25zdCBQb29sQ29uZmlnID0gcmVxdWlyZSgnLi9saWIvcG9vbF9jb25maWcuanMnKTtcbiAgcmV0dXJuIG5ldyBQb29sKHsgY29uZmlnOiBuZXcgUG9vbENvbmZpZyhjb25maWcpIH0pO1xufTtcblxuZXhwb3J0cy5jcmVhdGVQb29sQ2x1c3RlciA9IGZ1bmN0aW9uKGNvbmZpZykge1xuICBjb25zdCBQb29sQ2x1c3RlciA9IHJlcXVpcmUoJy4vbGliL3Bvb2xfY2x1c3Rlci5qcycpO1xuICByZXR1cm4gbmV3IFBvb2xDbHVzdGVyKGNvbmZpZyk7XG59O1xuXG5leHBvcnRzLmNyZWF0ZVF1ZXJ5ID0gQ29ubmVjdGlvbi5jcmVhdGVRdWVyeTtcblxuZXhwb3J0cy5Qb29sID0gUG9vbDtcblxuZXhwb3J0cy5Qb29sQ2x1c3RlciA9IFBvb2xDbHVzdGVyO1xuXG5leHBvcnRzLmNyZWF0ZVNlcnZlciA9IGZ1bmN0aW9uKGhhbmRsZXIpIHtcbiAgY29uc3QgU2VydmVyID0gcmVxdWlyZSgnLi9saWIvc2VydmVyLmpzJyk7XG4gIGNvbnN0IHMgPSBuZXcgU2VydmVyKCk7XG4gIGlmIChoYW5kbGVyKSB7XG4gICAgcy5vbignY29ubmVjdGlvbicsIGhhbmRsZXIpO1xuICB9XG4gIHJldHVybiBzO1xufTtcblxuZXhwb3J0cy5Qb29sQ29ubmVjdGlvbiA9IHJlcXVpcmUoJy4vbGliL3Bvb2xfY29ubmVjdGlvbicpO1xuZXhwb3J0cy5hdXRoUGx1Z2lucyA9IHJlcXVpcmUoJy4vbGliL2F1dGhfcGx1Z2lucycpO1xuZXhwb3J0cy5lc2NhcGUgPSBTcWxTdHJpbmcuZXNjYXBlO1xuZXhwb3J0cy5lc2NhcGVJZCA9IFNxbFN0cmluZy5lc2NhcGVJZDtcbmV4cG9ydHMuZm9ybWF0ID0gU3FsU3RyaW5nLmZvcm1hdDtcbmV4cG9ydHMucmF3ID0gU3FsU3RyaW5nLnJhdztcblxuZXhwb3J0cy5fX2RlZmluZUdldHRlcl9fKFxuICAnY3JlYXRlQ29ubmVjdGlvblByb21pc2UnLFxuICAoKSA9PiByZXF1aXJlKCcuL3Byb21pc2UuanMnKS5jcmVhdGVDb25uZWN0aW9uXG4pO1xuXG5leHBvcnRzLl9fZGVmaW5lR2V0dGVyX18oXG4gICdjcmVhdGVQb29sUHJvbWlzZScsXG4gICgpID0+IHJlcXVpcmUoJy4vcHJvbWlzZS5qcycpLmNyZWF0ZVBvb2xcbik7XG5cbmV4cG9ydHMuX19kZWZpbmVHZXR0ZXJfXyhcbiAgJ2NyZWF0ZVBvb2xDbHVzdGVyUHJvbWlzZScsXG4gICgpID0+IHJlcXVpcmUoJy4vcHJvbWlzZS5qcycpLmNyZWF0ZVBvb2xDbHVzdGVyXG4pO1xuXG5leHBvcnRzLl9fZGVmaW5lR2V0dGVyX18oJ1R5cGVzJywgKCkgPT4gcmVxdWlyZSgnLi9saWIvY29uc3RhbnRzL3R5cGVzLmpzJykpO1xuXG5leHBvcnRzLl9fZGVmaW5lR2V0dGVyX18oJ0NoYXJzZXRzJywgKCkgPT5cbiAgcmVxdWlyZSgnLi9saWIvY29uc3RhbnRzL2NoYXJzZXRzLmpzJylcbik7XG5cbmV4cG9ydHMuX19kZWZpbmVHZXR0ZXJfXygnQ2hhcnNldFRvRW5jb2RpbmcnLCAoKSA9PlxuICByZXF1aXJlKCcuL2xpYi9jb25zdGFudHMvY2hhcnNldF9lbmNvZGluZ3MuanMnKVxuKTtcblxuZXhwb3J0cy5zZXRNYXhQYXJzZXJDYWNoZSA9IGZ1bmN0aW9uKG1heCkge1xuICBwYXJzZXJDYWNoZS5zZXRNYXhDYWNoZShtYXgpO1xufTtcblxuZXhwb3J0cy5jbGVhclBhcnNlckNhY2hlID0gZnVuY3Rpb24oKSB7XG4gIHBhcnNlckNhY2hlLmNsZWFyQ2FjaGUoKTtcbn07XG4iXSwibmFtZXMiOlsiU3FsU3RyaW5nIiwicmVxdWlyZSIsIkNvbm5lY3Rpb24iLCJDb25uZWN0aW9uQ29uZmlnIiwicGFyc2VyQ2FjaGUiLCJleHBvcnRzIiwiY3JlYXRlQ29ubmVjdGlvbiIsIm9wdHMiLCJjb25maWciLCJjb25uZWN0IiwiUG9vbCIsIlBvb2xDbHVzdGVyIiwiY3JlYXRlUG9vbCIsIlBvb2xDb25maWciLCJjcmVhdGVQb29sQ2x1c3RlciIsImNyZWF0ZVF1ZXJ5IiwiY3JlYXRlU2VydmVyIiwiaGFuZGxlciIsIlNlcnZlciIsInMiLCJvbiIsIlBvb2xDb25uZWN0aW9uIiwiYXV0aFBsdWdpbnMiLCJlc2NhcGUiLCJlc2NhcGVJZCIsImZvcm1hdCIsInJhdyIsIl9fZGVmaW5lR2V0dGVyX18iLCJzZXRNYXhQYXJzZXJDYWNoZSIsIm1heCIsInNldE1heENhY2hlIiwiY2xlYXJQYXJzZXJDYWNoZSIsImNsZWFyQ2FjaGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/auth_41.js":
/*!********************************************!*\
  !*** ./node_modules/mysql2/lib/auth_41.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n4.1 authentication: (http://bazaar.launchpad.net/~mysql/mysql-server/5.5/view/head:/sql/password.c)\n\n  SERVER:  public_seed=create_random_string()\n           send(public_seed)\n\n  CLIENT:  recv(public_seed)\n           hash_stage1=sha1(\"password\")\n           hash_stage2=sha1(hash_stage1)\n           reply=xor(hash_stage1, sha1(public_seed,hash_stage2)\n\n           // this three steps are done in scramble()\n\n           send(reply)\n\n\n  SERVER:  recv(reply)\n           hash_stage1=xor(reply, sha1(public_seed,hash_stage2))\n           candidate_hash2=sha1(hash_stage1)\n           check(candidate_hash2==hash_stage2)\n\nserver stores sha1(sha1(password)) ( hash_stag2)\n*/ const crypto = __webpack_require__(/*! crypto */ \"crypto\");\nfunction sha1(msg, msg1, msg2) {\n    const hash = crypto.createHash(\"sha1\");\n    hash.update(msg);\n    if (msg1) {\n        hash.update(msg1);\n    }\n    if (msg2) {\n        hash.update(msg2);\n    }\n    return hash.digest();\n}\nfunction xor(a, b) {\n    const result = Buffer.allocUnsafe(a.length);\n    for(let i = 0; i < a.length; i++){\n        result[i] = a[i] ^ b[i];\n    }\n    return result;\n}\nexports.xor = xor;\nfunction token(password, scramble1, scramble2) {\n    if (!password) {\n        return Buffer.alloc(0);\n    }\n    const stage1 = sha1(password);\n    return exports.calculateTokenFromPasswordSha(stage1, scramble1, scramble2);\n}\nexports.calculateTokenFromPasswordSha = function(passwordSha, scramble1, scramble2) {\n    // we use AUTH 41 here, and we need only the bytes we just need.\n    const authPluginData1 = scramble1.slice(0, 8);\n    const authPluginData2 = scramble2.slice(0, 12);\n    const stage2 = sha1(passwordSha);\n    const stage3 = sha1(authPluginData1, authPluginData2, stage2);\n    return xor(stage3, passwordSha);\n};\nexports.calculateToken = token;\nexports.verifyToken = function(publicSeed1, publicSeed2, token, doubleSha) {\n    const hashStage1 = xor(token, sha1(publicSeed1, publicSeed2, doubleSha));\n    const candidateHash2 = sha1(hashStage1);\n    return candidateHash2.compare(doubleSha) === 0;\n};\nexports.doubleSha1 = function(password) {\n    return sha1(sha1(password));\n};\nfunction xorRotating(a, seed) {\n    const result = Buffer.allocUnsafe(a.length);\n    const seedLen = seed.length;\n    for(let i = 0; i < a.length; i++){\n        result[i] = a[i] ^ seed[i % seedLen];\n    }\n    return result;\n}\nexports.xorRotating = xorRotating;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9hdXRoXzQxLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQkEsR0FFQSxNQUFNQSxTQUFTQyxtQkFBT0EsQ0FBQztBQUV2QixTQUFTQyxLQUFLQyxHQUFHLEVBQUVDLElBQUksRUFBRUMsSUFBSTtJQUMzQixNQUFNQyxPQUFPTixPQUFPTyxVQUFVLENBQUM7SUFDL0JELEtBQUtFLE1BQU0sQ0FBQ0w7SUFDWixJQUFJQyxNQUFNO1FBQ1JFLEtBQUtFLE1BQU0sQ0FBQ0o7SUFDZDtJQUVBLElBQUlDLE1BQU07UUFDUkMsS0FBS0UsTUFBTSxDQUFDSDtJQUNkO0lBRUEsT0FBT0MsS0FBS0csTUFBTTtBQUNwQjtBQUVBLFNBQVNDLElBQUlDLENBQUMsRUFBRUMsQ0FBQztJQUNmLE1BQU1DLFNBQVNDLE9BQU9DLFdBQVcsQ0FBQ0osRUFBRUssTUFBTTtJQUMxQyxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSU4sRUFBRUssTUFBTSxFQUFFQyxJQUFLO1FBQ2pDSixNQUFNLENBQUNJLEVBQUUsR0FBR04sQ0FBQyxDQUFDTSxFQUFFLEdBQUdMLENBQUMsQ0FBQ0ssRUFBRTtJQUN6QjtJQUNBLE9BQU9KO0FBQ1Q7QUFFQUssV0FBVyxHQUFHUjtBQUVkLFNBQVNTLE1BQU1DLFFBQVEsRUFBRUMsU0FBUyxFQUFFQyxTQUFTO0lBQzNDLElBQUksQ0FBQ0YsVUFBVTtRQUNiLE9BQU9OLE9BQU9TLEtBQUssQ0FBQztJQUN0QjtJQUNBLE1BQU1DLFNBQVN0QixLQUFLa0I7SUFDcEIsT0FBT0YsUUFBUU8sNkJBQTZCLENBQUNELFFBQVFILFdBQVdDO0FBQ2xFO0FBRUFKLHFDQUFxQyxHQUFHLFNBQ3RDUSxXQUFXLEVBQ1hMLFNBQVMsRUFDVEMsU0FBUztJQUVULGdFQUFnRTtJQUNoRSxNQUFNSyxrQkFBa0JOLFVBQVVPLEtBQUssQ0FBQyxHQUFHO0lBQzNDLE1BQU1DLGtCQUFrQlAsVUFBVU0sS0FBSyxDQUFDLEdBQUc7SUFDM0MsTUFBTUUsU0FBUzVCLEtBQUt3QjtJQUNwQixNQUFNSyxTQUFTN0IsS0FBS3lCLGlCQUFpQkUsaUJBQWlCQztJQUN0RCxPQUFPcEIsSUFBSXFCLFFBQVFMO0FBQ3JCO0FBRUFSLHNCQUFzQixHQUFHQztBQUV6QkQsbUJBQW1CLEdBQUcsU0FBU2dCLFdBQVcsRUFBRUMsV0FBVyxFQUFFaEIsS0FBSyxFQUFFaUIsU0FBUztJQUN2RSxNQUFNQyxhQUFhM0IsSUFBSVMsT0FBT2pCLEtBQUtnQyxhQUFhQyxhQUFhQztJQUM3RCxNQUFNRSxpQkFBaUJwQyxLQUFLbUM7SUFDNUIsT0FBT0MsZUFBZUMsT0FBTyxDQUFDSCxlQUFlO0FBQy9DO0FBRUFsQixrQkFBa0IsR0FBRyxTQUFTRSxRQUFRO0lBQ3BDLE9BQU9sQixLQUFLQSxLQUFLa0I7QUFDbkI7QUFFQSxTQUFTcUIsWUFBWTlCLENBQUMsRUFBRStCLElBQUk7SUFDMUIsTUFBTTdCLFNBQVNDLE9BQU9DLFdBQVcsQ0FBQ0osRUFBRUssTUFBTTtJQUMxQyxNQUFNMkIsVUFBVUQsS0FBSzFCLE1BQU07SUFFM0IsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlOLEVBQUVLLE1BQU0sRUFBRUMsSUFBSztRQUNqQ0osTUFBTSxDQUFDSSxFQUFFLEdBQUdOLENBQUMsQ0FBQ00sRUFBRSxHQUFHeUIsSUFBSSxDQUFDekIsSUFBSTBCLFFBQVE7SUFDdEM7SUFDQSxPQUFPOUI7QUFDVDtBQUNBSyxtQkFBbUIsR0FBR3VCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWNlZS1wcm90by1vbmUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9hdXRoXzQxLmpzP2EwNGUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKlxuNC4xIGF1dGhlbnRpY2F0aW9uOiAoaHR0cDovL2JhemFhci5sYXVuY2hwYWQubmV0L35teXNxbC9teXNxbC1zZXJ2ZXIvNS41L3ZpZXcvaGVhZDovc3FsL3Bhc3N3b3JkLmMpXG5cbiAgU0VSVkVSOiAgcHVibGljX3NlZWQ9Y3JlYXRlX3JhbmRvbV9zdHJpbmcoKVxuICAgICAgICAgICBzZW5kKHB1YmxpY19zZWVkKVxuXG4gIENMSUVOVDogIHJlY3YocHVibGljX3NlZWQpXG4gICAgICAgICAgIGhhc2hfc3RhZ2UxPXNoYTEoXCJwYXNzd29yZFwiKVxuICAgICAgICAgICBoYXNoX3N0YWdlMj1zaGExKGhhc2hfc3RhZ2UxKVxuICAgICAgICAgICByZXBseT14b3IoaGFzaF9zdGFnZTEsIHNoYTEocHVibGljX3NlZWQsaGFzaF9zdGFnZTIpXG5cbiAgICAgICAgICAgLy8gdGhpcyB0aHJlZSBzdGVwcyBhcmUgZG9uZSBpbiBzY3JhbWJsZSgpXG5cbiAgICAgICAgICAgc2VuZChyZXBseSlcblxuXG4gIFNFUlZFUjogIHJlY3YocmVwbHkpXG4gICAgICAgICAgIGhhc2hfc3RhZ2UxPXhvcihyZXBseSwgc2hhMShwdWJsaWNfc2VlZCxoYXNoX3N0YWdlMikpXG4gICAgICAgICAgIGNhbmRpZGF0ZV9oYXNoMj1zaGExKGhhc2hfc3RhZ2UxKVxuICAgICAgICAgICBjaGVjayhjYW5kaWRhdGVfaGFzaDI9PWhhc2hfc3RhZ2UyKVxuXG5zZXJ2ZXIgc3RvcmVzIHNoYTEoc2hhMShwYXNzd29yZCkpICggaGFzaF9zdGFnMilcbiovXG5cbmNvbnN0IGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpO1xuXG5mdW5jdGlvbiBzaGExKG1zZywgbXNnMSwgbXNnMikge1xuICBjb25zdCBoYXNoID0gY3J5cHRvLmNyZWF0ZUhhc2goJ3NoYTEnKTtcbiAgaGFzaC51cGRhdGUobXNnKTtcbiAgaWYgKG1zZzEpIHtcbiAgICBoYXNoLnVwZGF0ZShtc2cxKTtcbiAgfVxuXG4gIGlmIChtc2cyKSB7XG4gICAgaGFzaC51cGRhdGUobXNnMik7XG4gIH1cblxuICByZXR1cm4gaGFzaC5kaWdlc3QoKTtcbn1cblxuZnVuY3Rpb24geG9yKGEsIGIpIHtcbiAgY29uc3QgcmVzdWx0ID0gQnVmZmVyLmFsbG9jVW5zYWZlKGEubGVuZ3RoKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG4gICAgcmVzdWx0W2ldID0gYVtpXSBeIGJbaV07XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0cy54b3IgPSB4b3I7XG5cbmZ1bmN0aW9uIHRva2VuKHBhc3N3b3JkLCBzY3JhbWJsZTEsIHNjcmFtYmxlMikge1xuICBpZiAoIXBhc3N3b3JkKSB7XG4gICAgcmV0dXJuIEJ1ZmZlci5hbGxvYygwKTtcbiAgfVxuICBjb25zdCBzdGFnZTEgPSBzaGExKHBhc3N3b3JkKTtcbiAgcmV0dXJuIGV4cG9ydHMuY2FsY3VsYXRlVG9rZW5Gcm9tUGFzc3dvcmRTaGEoc3RhZ2UxLCBzY3JhbWJsZTEsIHNjcmFtYmxlMik7XG59XG5cbmV4cG9ydHMuY2FsY3VsYXRlVG9rZW5Gcm9tUGFzc3dvcmRTaGEgPSBmdW5jdGlvbihcbiAgcGFzc3dvcmRTaGEsXG4gIHNjcmFtYmxlMSxcbiAgc2NyYW1ibGUyXG4pIHtcbiAgLy8gd2UgdXNlIEFVVEggNDEgaGVyZSwgYW5kIHdlIG5lZWQgb25seSB0aGUgYnl0ZXMgd2UganVzdCBuZWVkLlxuICBjb25zdCBhdXRoUGx1Z2luRGF0YTEgPSBzY3JhbWJsZTEuc2xpY2UoMCwgOCk7XG4gIGNvbnN0IGF1dGhQbHVnaW5EYXRhMiA9IHNjcmFtYmxlMi5zbGljZSgwLCAxMik7XG4gIGNvbnN0IHN0YWdlMiA9IHNoYTEocGFzc3dvcmRTaGEpO1xuICBjb25zdCBzdGFnZTMgPSBzaGExKGF1dGhQbHVnaW5EYXRhMSwgYXV0aFBsdWdpbkRhdGEyLCBzdGFnZTIpO1xuICByZXR1cm4geG9yKHN0YWdlMywgcGFzc3dvcmRTaGEpO1xufTtcblxuZXhwb3J0cy5jYWxjdWxhdGVUb2tlbiA9IHRva2VuO1xuXG5leHBvcnRzLnZlcmlmeVRva2VuID0gZnVuY3Rpb24ocHVibGljU2VlZDEsIHB1YmxpY1NlZWQyLCB0b2tlbiwgZG91YmxlU2hhKSB7XG4gIGNvbnN0IGhhc2hTdGFnZTEgPSB4b3IodG9rZW4sIHNoYTEocHVibGljU2VlZDEsIHB1YmxpY1NlZWQyLCBkb3VibGVTaGEpKTtcbiAgY29uc3QgY2FuZGlkYXRlSGFzaDIgPSBzaGExKGhhc2hTdGFnZTEpO1xuICByZXR1cm4gY2FuZGlkYXRlSGFzaDIuY29tcGFyZShkb3VibGVTaGEpID09PSAwO1xufTtcblxuZXhwb3J0cy5kb3VibGVTaGExID0gZnVuY3Rpb24ocGFzc3dvcmQpIHtcbiAgcmV0dXJuIHNoYTEoc2hhMShwYXNzd29yZCkpO1xufTtcblxuZnVuY3Rpb24geG9yUm90YXRpbmcoYSwgc2VlZCkge1xuICBjb25zdCByZXN1bHQgPSBCdWZmZXIuYWxsb2NVbnNhZmUoYS5sZW5ndGgpO1xuICBjb25zdCBzZWVkTGVuID0gc2VlZC5sZW5ndGg7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG4gICAgcmVzdWx0W2ldID0gYVtpXSBeIHNlZWRbaSAlIHNlZWRMZW5dO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnRzLnhvclJvdGF0aW5nID0geG9yUm90YXRpbmc7XG4iXSwibmFtZXMiOlsiY3J5cHRvIiwicmVxdWlyZSIsInNoYTEiLCJtc2ciLCJtc2cxIiwibXNnMiIsImhhc2giLCJjcmVhdGVIYXNoIiwidXBkYXRlIiwiZGlnZXN0IiwieG9yIiwiYSIsImIiLCJyZXN1bHQiLCJCdWZmZXIiLCJhbGxvY1Vuc2FmZSIsImxlbmd0aCIsImkiLCJleHBvcnRzIiwidG9rZW4iLCJwYXNzd29yZCIsInNjcmFtYmxlMSIsInNjcmFtYmxlMiIsImFsbG9jIiwic3RhZ2UxIiwiY2FsY3VsYXRlVG9rZW5Gcm9tUGFzc3dvcmRTaGEiLCJwYXNzd29yZFNoYSIsImF1dGhQbHVnaW5EYXRhMSIsInNsaWNlIiwiYXV0aFBsdWdpbkRhdGEyIiwic3RhZ2UyIiwic3RhZ2UzIiwiY2FsY3VsYXRlVG9rZW4iLCJ2ZXJpZnlUb2tlbiIsInB1YmxpY1NlZWQxIiwicHVibGljU2VlZDIiLCJkb3VibGVTaGEiLCJoYXNoU3RhZ2UxIiwiY2FuZGlkYXRlSGFzaDIiLCJjb21wYXJlIiwiZG91YmxlU2hhMSIsInhvclJvdGF0aW5nIiwic2VlZCIsInNlZWRMZW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/auth_41.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/auth_plugins/caching_sha2_password.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mysql2/lib/auth_plugins/caching_sha2_password.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// https://mysqlserverteam.com/mysql-8-0-4-new-default-authentication-plugin-caching_sha2_password/\nconst PLUGIN_NAME = \"caching_sha2_password\";\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nconst { xor, xorRotating } = __webpack_require__(/*! ../auth_41 */ \"(rsc)/./node_modules/mysql2/lib/auth_41.js\");\nconst REQUEST_SERVER_KEY_PACKET = Buffer.from([\n    2\n]);\nconst FAST_AUTH_SUCCESS_PACKET = Buffer.from([\n    3\n]);\nconst PERFORM_FULL_AUTHENTICATION_PACKET = Buffer.from([\n    4\n]);\nconst STATE_INITIAL = 0;\nconst STATE_TOKEN_SENT = 1;\nconst STATE_WAIT_SERVER_KEY = 2;\nconst STATE_FINAL = -1;\nfunction sha256(msg) {\n    const hash = crypto.createHash(\"sha256\");\n    hash.update(msg);\n    return hash.digest();\n}\nfunction calculateToken(password, scramble) {\n    if (!password) {\n        return Buffer.alloc(0);\n    }\n    const stage1 = sha256(Buffer.from(password));\n    const stage2 = sha256(stage1);\n    const stage3 = sha256(Buffer.concat([\n        stage2,\n        scramble\n    ]));\n    return xor(stage1, stage3);\n}\nfunction encrypt(password, scramble, key) {\n    const stage1 = xorRotating(Buffer.from(`${password}\\0`, \"utf8\"), scramble);\n    return crypto.publicEncrypt(key, stage1);\n}\nmodule.exports = (pluginOptions = {})=>({ connection })=>{\n        let state = 0;\n        let scramble = null;\n        const password = connection.config.password;\n        const authWithKey = (serverKey)=>{\n            const _password = encrypt(password, scramble, serverKey);\n            state = STATE_FINAL;\n            return _password;\n        };\n        return (data)=>{\n            switch(state){\n                case STATE_INITIAL:\n                    scramble = data.slice(0, 20);\n                    state = STATE_TOKEN_SENT;\n                    return calculateToken(password, scramble);\n                case STATE_TOKEN_SENT:\n                    if (FAST_AUTH_SUCCESS_PACKET.equals(data)) {\n                        state = STATE_FINAL;\n                        return null;\n                    }\n                    if (PERFORM_FULL_AUTHENTICATION_PACKET.equals(data)) {\n                        const isSecureConnection = typeof pluginOptions.overrideIsSecure === \"undefined\" ? connection.config.ssl || connection.config.socketPath : pluginOptions.overrideIsSecure;\n                        if (isSecureConnection) {\n                            state = STATE_FINAL;\n                            return Buffer.from(`${password}\\0`, \"utf8\");\n                        }\n                        // if client provides key we can save one extra roundrip on first connection\n                        if (pluginOptions.serverPublicKey) {\n                            return authWithKey(pluginOptions.serverPublicKey);\n                        }\n                        state = STATE_WAIT_SERVER_KEY;\n                        return REQUEST_SERVER_KEY_PACKET;\n                    }\n                    throw new Error(`Invalid AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_TOKEN_SENT state.`);\n                case STATE_WAIT_SERVER_KEY:\n                    if (pluginOptions.onServerPublicKey) {\n                        pluginOptions.onServerPublicKey(data);\n                    }\n                    return authWithKey(data);\n                case STATE_FINAL:\n                    throw new Error(`Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_FINAL state.`);\n            }\n            throw new Error(`Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in state ${state}`);\n        };\n    };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/auth_plugins/caching_sha2_password.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/auth_plugins/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/mysql2/lib/auth_plugins/index.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = {\n    caching_sha2_password: __webpack_require__(/*! ./caching_sha2_password */ \"(rsc)/./node_modules/mysql2/lib/auth_plugins/caching_sha2_password.js\"),\n    mysql_clear_password: __webpack_require__(/*! ./mysql_clear_password */ \"(rsc)/./node_modules/mysql2/lib/auth_plugins/mysql_clear_password.js\"),\n    mysql_native_password: __webpack_require__(/*! ./mysql_native_password */ \"(rsc)/./node_modules/mysql2/lib/auth_plugins/mysql_native_password.js\"),\n    sha256_password: __webpack_require__(/*! ./sha256_password */ \"(rsc)/./node_modules/mysql2/lib/auth_plugins/sha256_password.js\")\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9hdXRoX3BsdWdpbnMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHO0lBQ2ZDLHVCQUF1QkMsbUJBQU9BLENBQUM7SUFDL0JDLHNCQUFzQkQsbUJBQU9BLENBQUM7SUFDOUJFLHVCQUF1QkYsbUJBQU9BLENBQUM7SUFDL0JHLGlCQUFpQkgsbUJBQU9BLENBQUM7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hY2VlLXByb3RvLW9uZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2F1dGhfcGx1Z2lucy9pbmRleC5qcz83ZmMwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNhY2hpbmdfc2hhMl9wYXNzd29yZDogcmVxdWlyZSgnLi9jYWNoaW5nX3NoYTJfcGFzc3dvcmQnKSxcbiAgbXlzcWxfY2xlYXJfcGFzc3dvcmQ6IHJlcXVpcmUoJy4vbXlzcWxfY2xlYXJfcGFzc3dvcmQnKSxcbiAgbXlzcWxfbmF0aXZlX3Bhc3N3b3JkOiByZXF1aXJlKCcuL215c3FsX25hdGl2ZV9wYXNzd29yZCcpLFxuICBzaGEyNTZfcGFzc3dvcmQ6IHJlcXVpcmUoJy4vc2hhMjU2X3Bhc3N3b3JkJyksXG59O1xuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjYWNoaW5nX3NoYTJfcGFzc3dvcmQiLCJyZXF1aXJlIiwibXlzcWxfY2xlYXJfcGFzc3dvcmQiLCJteXNxbF9uYXRpdmVfcGFzc3dvcmQiLCJzaGEyNTZfcGFzc3dvcmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/auth_plugins/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/auth_plugins/mysql_clear_password.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mysql2/lib/auth_plugins/mysql_clear_password.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\nfunction bufferFromStr(str) {\n    return Buffer.from(`${str}\\0`);\n}\nconst create_mysql_clear_password_plugin = (pluginOptions)=>function mysql_clear_password_plugin({ connection, command }) {\n        const password = command.password || pluginOptions.password || connection.config.password;\n        return function() {\n            return bufferFromStr(password);\n        };\n    };\nmodule.exports = create_mysql_clear_password_plugin;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9hdXRoX3BsdWdpbnMvbXlzcWxfY2xlYXJfcGFzc3dvcmQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxTQUFTQSxjQUFjQyxHQUFHO0lBQ3hCLE9BQU9DLE9BQU9DLElBQUksQ0FBQyxDQUFDLEVBQUVGLElBQUksRUFBRSxDQUFDO0FBQy9CO0FBRUEsTUFBTUcscUNBQXFDQyxDQUFBQSxnQkFDekMsU0FBU0MsNEJBQTRCLEVBQUVDLFVBQVUsRUFBRUMsT0FBTyxFQUFFO1FBQzFELE1BQU1DLFdBQ0pELFFBQVFDLFFBQVEsSUFBSUosY0FBY0ksUUFBUSxJQUFJRixXQUFXRyxNQUFNLENBQUNELFFBQVE7UUFFMUUsT0FBTztZQUNMLE9BQU9ULGNBQWNTO1FBQ3ZCO0lBQ0Y7QUFFRkUsT0FBT0MsT0FBTyxHQUFHUiIsInNvdXJjZXMiOlsid2VicGFjazovL2FjZWUtcHJvdG8tb25lLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvYXV0aF9wbHVnaW5zL215c3FsX2NsZWFyX3Bhc3N3b3JkLmpzP2ZkZDIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBidWZmZXJGcm9tU3RyKHN0cikge1xuICByZXR1cm4gQnVmZmVyLmZyb20oYCR7c3RyfVxcMGApO1xufVxuXG5jb25zdCBjcmVhdGVfbXlzcWxfY2xlYXJfcGFzc3dvcmRfcGx1Z2luID0gcGx1Z2luT3B0aW9ucyA9PlxuICBmdW5jdGlvbiBteXNxbF9jbGVhcl9wYXNzd29yZF9wbHVnaW4oeyBjb25uZWN0aW9uLCBjb21tYW5kIH0pIHtcbiAgICBjb25zdCBwYXNzd29yZCA9XG4gICAgICBjb21tYW5kLnBhc3N3b3JkIHx8IHBsdWdpbk9wdGlvbnMucGFzc3dvcmQgfHwgY29ubmVjdGlvbi5jb25maWcucGFzc3dvcmQ7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKC8qIHBsdWdpbkRhdGEgKi8pIHtcbiAgICAgIHJldHVybiBidWZmZXJGcm9tU3RyKHBhc3N3b3JkKTtcbiAgICB9O1xuICB9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZV9teXNxbF9jbGVhcl9wYXNzd29yZF9wbHVnaW47XG4iXSwibmFtZXMiOlsiYnVmZmVyRnJvbVN0ciIsInN0ciIsIkJ1ZmZlciIsImZyb20iLCJjcmVhdGVfbXlzcWxfY2xlYXJfcGFzc3dvcmRfcGx1Z2luIiwicGx1Z2luT3B0aW9ucyIsIm15c3FsX2NsZWFyX3Bhc3N3b3JkX3BsdWdpbiIsImNvbm5lY3Rpb24iLCJjb21tYW5kIiwicGFzc3dvcmQiLCJjb25maWciLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/auth_plugins/mysql_clear_password.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/auth_plugins/mysql_native_password.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mysql2/lib/auth_plugins/mysql_native_password.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n//const PLUGIN_NAME = 'mysql_native_password';\nconst auth41 = __webpack_require__(/*! ../auth_41.js */ \"(rsc)/./node_modules/mysql2/lib/auth_41.js\");\nmodule.exports = (pluginOptions)=>({ connection, command })=>{\n        const password = command.password || pluginOptions.password || connection.config.password;\n        const passwordSha1 = command.passwordSha1 || pluginOptions.passwordSha1 || connection.config.passwordSha1;\n        return (data)=>{\n            const authPluginData1 = data.slice(0, 8);\n            const authPluginData2 = data.slice(8, 20);\n            let authToken;\n            if (passwordSha1) {\n                authToken = auth41.calculateTokenFromPasswordSha(passwordSha1, authPluginData1, authPluginData2);\n            } else {\n                authToken = auth41.calculateToken(password, authPluginData1, authPluginData2);\n            }\n            return authToken;\n        };\n    };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9hdXRoX3BsdWdpbnMvbXlzcWxfbmF0aXZlX3Bhc3N3b3JkLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsOENBQThDO0FBQzlDLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDO0FBRXZCQyxPQUFPQyxPQUFPLEdBQUdDLENBQUFBLGdCQUFpQixDQUFDLEVBQUVDLFVBQVUsRUFBRUMsT0FBTyxFQUFFO1FBQ3hELE1BQU1DLFdBQ0pELFFBQVFDLFFBQVEsSUFBSUgsY0FBY0csUUFBUSxJQUFJRixXQUFXRyxNQUFNLENBQUNELFFBQVE7UUFDMUUsTUFBTUUsZUFDSkgsUUFBUUcsWUFBWSxJQUNwQkwsY0FBY0ssWUFBWSxJQUMxQkosV0FBV0csTUFBTSxDQUFDQyxZQUFZO1FBQ2hDLE9BQU9DLENBQUFBO1lBQ0wsTUFBTUMsa0JBQWtCRCxLQUFLRSxLQUFLLENBQUMsR0FBRztZQUN0QyxNQUFNQyxrQkFBa0JILEtBQUtFLEtBQUssQ0FBQyxHQUFHO1lBQ3RDLElBQUlFO1lBQ0osSUFBSUwsY0FBYztnQkFDaEJLLFlBQVlkLE9BQU9lLDZCQUE2QixDQUM5Q04sY0FDQUUsaUJBQ0FFO1lBRUosT0FBTztnQkFDTEMsWUFBWWQsT0FBT2dCLGNBQWMsQ0FDL0JULFVBQ0FJLGlCQUNBRTtZQUVKO1lBQ0EsT0FBT0M7UUFDVDtJQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWNlZS1wcm90by1vbmUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9hdXRoX3BsdWdpbnMvbXlzcWxfbmF0aXZlX3Bhc3N3b3JkLmpzP2VkMGYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vL2NvbnN0IFBMVUdJTl9OQU1FID0gJ215c3FsX25hdGl2ZV9wYXNzd29yZCc7XG5jb25zdCBhdXRoNDEgPSByZXF1aXJlKCcuLi9hdXRoXzQxLmpzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gcGx1Z2luT3B0aW9ucyA9PiAoeyBjb25uZWN0aW9uLCBjb21tYW5kIH0pID0+IHtcbiAgY29uc3QgcGFzc3dvcmQgPVxuICAgIGNvbW1hbmQucGFzc3dvcmQgfHwgcGx1Z2luT3B0aW9ucy5wYXNzd29yZCB8fCBjb25uZWN0aW9uLmNvbmZpZy5wYXNzd29yZDtcbiAgY29uc3QgcGFzc3dvcmRTaGExID1cbiAgICBjb21tYW5kLnBhc3N3b3JkU2hhMSB8fFxuICAgIHBsdWdpbk9wdGlvbnMucGFzc3dvcmRTaGExIHx8XG4gICAgY29ubmVjdGlvbi5jb25maWcucGFzc3dvcmRTaGExO1xuICByZXR1cm4gZGF0YSA9PiB7XG4gICAgY29uc3QgYXV0aFBsdWdpbkRhdGExID0gZGF0YS5zbGljZSgwLCA4KTtcbiAgICBjb25zdCBhdXRoUGx1Z2luRGF0YTIgPSBkYXRhLnNsaWNlKDgsIDIwKTtcbiAgICBsZXQgYXV0aFRva2VuO1xuICAgIGlmIChwYXNzd29yZFNoYTEpIHtcbiAgICAgIGF1dGhUb2tlbiA9IGF1dGg0MS5jYWxjdWxhdGVUb2tlbkZyb21QYXNzd29yZFNoYShcbiAgICAgICAgcGFzc3dvcmRTaGExLFxuICAgICAgICBhdXRoUGx1Z2luRGF0YTEsXG4gICAgICAgIGF1dGhQbHVnaW5EYXRhMlxuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXV0aFRva2VuID0gYXV0aDQxLmNhbGN1bGF0ZVRva2VuKFxuICAgICAgICBwYXNzd29yZCxcbiAgICAgICAgYXV0aFBsdWdpbkRhdGExLFxuICAgICAgICBhdXRoUGx1Z2luRGF0YTJcbiAgICAgICk7XG4gICAgfVxuICAgIHJldHVybiBhdXRoVG9rZW47XG4gIH07XG59O1xuIl0sIm5hbWVzIjpbImF1dGg0MSIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwicGx1Z2luT3B0aW9ucyIsImNvbm5lY3Rpb24iLCJjb21tYW5kIiwicGFzc3dvcmQiLCJjb25maWciLCJwYXNzd29yZFNoYTEiLCJkYXRhIiwiYXV0aFBsdWdpbkRhdGExIiwic2xpY2UiLCJhdXRoUGx1Z2luRGF0YTIiLCJhdXRoVG9rZW4iLCJjYWxjdWxhdGVUb2tlbkZyb21QYXNzd29yZFNoYSIsImNhbGN1bGF0ZVRva2VuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/auth_plugins/mysql_native_password.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/auth_plugins/sha256_password.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mysql2/lib/auth_plugins/sha256_password.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst PLUGIN_NAME = \"sha256_password\";\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nconst { xorRotating } = __webpack_require__(/*! ../auth_41 */ \"(rsc)/./node_modules/mysql2/lib/auth_41.js\");\nconst REQUEST_SERVER_KEY_PACKET = Buffer.from([\n    1\n]);\nconst STATE_INITIAL = 0;\nconst STATE_WAIT_SERVER_KEY = 1;\nconst STATE_FINAL = -1;\nfunction encrypt(password, scramble, key) {\n    const stage1 = xorRotating(Buffer.from(`${password}\\0`, \"utf8\"), scramble);\n    return crypto.publicEncrypt(key, stage1);\n}\nmodule.exports = (pluginOptions = {})=>({ connection })=>{\n        let state = 0;\n        let scramble = null;\n        const password = connection.config.password;\n        const authWithKey = (serverKey)=>{\n            const _password = encrypt(password, scramble, serverKey);\n            state = STATE_FINAL;\n            return _password;\n        };\n        return (data)=>{\n            switch(state){\n                case STATE_INITIAL:\n                    scramble = data.slice(0, 20);\n                    // if client provides key we can save one extra roundrip on first connection\n                    if (pluginOptions.serverPublicKey) {\n                        return authWithKey(pluginOptions.serverPublicKey);\n                    }\n                    state = STATE_WAIT_SERVER_KEY;\n                    return REQUEST_SERVER_KEY_PACKET;\n                case STATE_WAIT_SERVER_KEY:\n                    if (pluginOptions.onServerPublicKey) {\n                        pluginOptions.onServerPublicKey(data);\n                    }\n                    return authWithKey(data);\n                case STATE_FINAL:\n                    throw new Error(`Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_FINAL state.`);\n            }\n            throw new Error(`Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in state ${state}`);\n        };\n    };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9hdXRoX3BsdWdpbnMvc2hhMjU2X3Bhc3N3b3JkLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsY0FBYztBQUNwQixNQUFNQyxTQUFTQyxtQkFBT0EsQ0FBQztBQUN2QixNQUFNLEVBQUVDLFdBQVcsRUFBRSxHQUFHRCxtQkFBT0EsQ0FBQztBQUVoQyxNQUFNRSw0QkFBNEJDLE9BQU9DLElBQUksQ0FBQztJQUFDO0NBQUU7QUFFakQsTUFBTUMsZ0JBQWdCO0FBQ3RCLE1BQU1DLHdCQUF3QjtBQUM5QixNQUFNQyxjQUFjLENBQUM7QUFFckIsU0FBU0MsUUFBUUMsUUFBUSxFQUFFQyxRQUFRLEVBQUVDLEdBQUc7SUFDdEMsTUFBTUMsU0FBU1gsWUFDYkUsT0FBT0MsSUFBSSxDQUFDLENBQUMsRUFBRUssU0FBUyxFQUFFLENBQUMsRUFBRSxTQUM3QkM7SUFFRixPQUFPWCxPQUFPYyxhQUFhLENBQUNGLEtBQUtDO0FBQ25DO0FBRUFFLE9BQU9DLE9BQU8sR0FBRyxDQUFDQyxnQkFBZ0IsQ0FBQyxDQUFDLEdBQUssQ0FBQyxFQUFFQyxVQUFVLEVBQUU7UUFDdEQsSUFBSUMsUUFBUTtRQUNaLElBQUlSLFdBQVc7UUFFZixNQUFNRCxXQUFXUSxXQUFXRSxNQUFNLENBQUNWLFFBQVE7UUFFM0MsTUFBTVcsY0FBY0MsQ0FBQUE7WUFDbEIsTUFBTUMsWUFBWWQsUUFBUUMsVUFBVUMsVUFBVVc7WUFDOUNILFFBQVFYO1lBQ1IsT0FBT2U7UUFDVDtRQUVBLE9BQU9DLENBQUFBO1lBQ0wsT0FBUUw7Z0JBQ04sS0FBS2I7b0JBQ0hLLFdBQVdhLEtBQUtDLEtBQUssQ0FBQyxHQUFHO29CQUN6Qiw0RUFBNEU7b0JBQzVFLElBQUlSLGNBQWNTLGVBQWUsRUFBRTt3QkFDakMsT0FBT0wsWUFBWUosY0FBY1MsZUFBZTtvQkFDbEQ7b0JBRUFQLFFBQVFaO29CQUNSLE9BQU9KO2dCQUVULEtBQUtJO29CQUNILElBQUlVLGNBQWNVLGlCQUFpQixFQUFFO3dCQUNuQ1YsY0FBY1UsaUJBQWlCLENBQUNIO29CQUNsQztvQkFDQSxPQUFPSCxZQUFZRztnQkFDckIsS0FBS2hCO29CQUNILE1BQU0sSUFBSW9CLE1BQ1IsQ0FBQyxtREFBbUQsRUFBRTdCLFlBQVksNkJBQTZCLENBQUM7WUFFdEc7WUFFQSxNQUFNLElBQUk2QixNQUNSLENBQUMsbURBQW1ELEVBQUU3QixZQUFZLGlCQUFpQixFQUFFb0IsTUFBTSxDQUFDO1FBRWhHO0lBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hY2VlLXByb3RvLW9uZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2F1dGhfcGx1Z2lucy9zaGEyNTZfcGFzc3dvcmQuanM/OTcxMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IFBMVUdJTl9OQU1FID0gJ3NoYTI1Nl9wYXNzd29yZCc7XG5jb25zdCBjcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKTtcbmNvbnN0IHsgeG9yUm90YXRpbmcgfSA9IHJlcXVpcmUoJy4uL2F1dGhfNDEnKTtcblxuY29uc3QgUkVRVUVTVF9TRVJWRVJfS0VZX1BBQ0tFVCA9IEJ1ZmZlci5mcm9tKFsxXSk7XG5cbmNvbnN0IFNUQVRFX0lOSVRJQUwgPSAwO1xuY29uc3QgU1RBVEVfV0FJVF9TRVJWRVJfS0VZID0gMTtcbmNvbnN0IFNUQVRFX0ZJTkFMID0gLTE7XG5cbmZ1bmN0aW9uIGVuY3J5cHQocGFzc3dvcmQsIHNjcmFtYmxlLCBrZXkpIHtcbiAgY29uc3Qgc3RhZ2UxID0geG9yUm90YXRpbmcoXG4gICAgQnVmZmVyLmZyb20oYCR7cGFzc3dvcmR9XFwwYCwgJ3V0ZjgnKSxcbiAgICBzY3JhbWJsZVxuICApO1xuICByZXR1cm4gY3J5cHRvLnB1YmxpY0VuY3J5cHQoa2V5LCBzdGFnZTEpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IChwbHVnaW5PcHRpb25zID0ge30pID0+ICh7IGNvbm5lY3Rpb24gfSkgPT4ge1xuICBsZXQgc3RhdGUgPSAwO1xuICBsZXQgc2NyYW1ibGUgPSBudWxsO1xuXG4gIGNvbnN0IHBhc3N3b3JkID0gY29ubmVjdGlvbi5jb25maWcucGFzc3dvcmQ7XG5cbiAgY29uc3QgYXV0aFdpdGhLZXkgPSBzZXJ2ZXJLZXkgPT4ge1xuICAgIGNvbnN0IF9wYXNzd29yZCA9IGVuY3J5cHQocGFzc3dvcmQsIHNjcmFtYmxlLCBzZXJ2ZXJLZXkpO1xuICAgIHN0YXRlID0gU1RBVEVfRklOQUw7XG4gICAgcmV0dXJuIF9wYXNzd29yZDtcbiAgfTtcblxuICByZXR1cm4gZGF0YSA9PiB7XG4gICAgc3dpdGNoIChzdGF0ZSkge1xuICAgICAgY2FzZSBTVEFURV9JTklUSUFMOlxuICAgICAgICBzY3JhbWJsZSA9IGRhdGEuc2xpY2UoMCwgMjApO1xuICAgICAgICAvLyBpZiBjbGllbnQgcHJvdmlkZXMga2V5IHdlIGNhbiBzYXZlIG9uZSBleHRyYSByb3VuZHJpcCBvbiBmaXJzdCBjb25uZWN0aW9uXG4gICAgICAgIGlmIChwbHVnaW5PcHRpb25zLnNlcnZlclB1YmxpY0tleSkge1xuICAgICAgICAgIHJldHVybiBhdXRoV2l0aEtleShwbHVnaW5PcHRpb25zLnNlcnZlclB1YmxpY0tleSk7XG4gICAgICAgIH1cblxuICAgICAgICBzdGF0ZSA9IFNUQVRFX1dBSVRfU0VSVkVSX0tFWTtcbiAgICAgICAgcmV0dXJuIFJFUVVFU1RfU0VSVkVSX0tFWV9QQUNLRVQ7XG5cbiAgICAgIGNhc2UgU1RBVEVfV0FJVF9TRVJWRVJfS0VZOlxuICAgICAgICBpZiAocGx1Z2luT3B0aW9ucy5vblNlcnZlclB1YmxpY0tleSkge1xuICAgICAgICAgIHBsdWdpbk9wdGlvbnMub25TZXJ2ZXJQdWJsaWNLZXkoZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGF1dGhXaXRoS2V5KGRhdGEpO1xuICAgICAgY2FzZSBTVEFURV9GSU5BTDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgIGBVbmV4cGVjdGVkIGRhdGEgaW4gQXV0aE1vcmVEYXRhIHBhY2tldCByZWNlaXZlZCBieSAke1BMVUdJTl9OQU1FfSBwbHVnaW4gaW4gU1RBVEVfRklOQUwgc3RhdGUuYFxuICAgICAgICApO1xuICAgIH1cblxuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBVbmV4cGVjdGVkIGRhdGEgaW4gQXV0aE1vcmVEYXRhIHBhY2tldCByZWNlaXZlZCBieSAke1BMVUdJTl9OQU1FfSBwbHVnaW4gaW4gc3RhdGUgJHtzdGF0ZX1gXG4gICAgKTtcbiAgfTtcbn07XG4iXSwibmFtZXMiOlsiUExVR0lOX05BTUUiLCJjcnlwdG8iLCJyZXF1aXJlIiwieG9yUm90YXRpbmciLCJSRVFVRVNUX1NFUlZFUl9LRVlfUEFDS0VUIiwiQnVmZmVyIiwiZnJvbSIsIlNUQVRFX0lOSVRJQUwiLCJTVEFURV9XQUlUX1NFUlZFUl9LRVkiLCJTVEFURV9GSU5BTCIsImVuY3J5cHQiLCJwYXNzd29yZCIsInNjcmFtYmxlIiwia2V5Iiwic3RhZ2UxIiwicHVibGljRW5jcnlwdCIsIm1vZHVsZSIsImV4cG9ydHMiLCJwbHVnaW5PcHRpb25zIiwiY29ubmVjdGlvbiIsInN0YXRlIiwiY29uZmlnIiwiYXV0aFdpdGhLZXkiLCJzZXJ2ZXJLZXkiLCJfcGFzc3dvcmQiLCJkYXRhIiwic2xpY2UiLCJzZXJ2ZXJQdWJsaWNLZXkiLCJvblNlcnZlclB1YmxpY0tleSIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/auth_plugins/sha256_password.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/auth_switch.js":
/*!*********************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/auth_switch.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// This file was modified by Oracle on July 5, 2021.\n// Errors generated by asynchronous authentication plugins are now being\n// handled and subsequently emitted at the command level.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\nconst sha256_password = __webpack_require__(/*! ../auth_plugins/sha256_password */ \"(rsc)/./node_modules/mysql2/lib/auth_plugins/sha256_password.js\");\nconst caching_sha2_password = __webpack_require__(/*! ../auth_plugins/caching_sha2_password.js */ \"(rsc)/./node_modules/mysql2/lib/auth_plugins/caching_sha2_password.js\");\nconst mysql_native_password = __webpack_require__(/*! ../auth_plugins/mysql_native_password.js */ \"(rsc)/./node_modules/mysql2/lib/auth_plugins/mysql_native_password.js\");\nconst mysql_clear_password = __webpack_require__(/*! ../auth_plugins/mysql_clear_password.js */ \"(rsc)/./node_modules/mysql2/lib/auth_plugins/mysql_clear_password.js\");\nconst standardAuthPlugins = {\n    sha256_password: sha256_password({}),\n    caching_sha2_password: caching_sha2_password({}),\n    mysql_native_password: mysql_native_password({}),\n    mysql_clear_password: mysql_clear_password({})\n};\nfunction warnLegacyAuthSwitch() {\n    console.warn(\"WARNING! authSwitchHandler api is deprecated, please use new authPlugins api\");\n}\nfunction authSwitchPluginError(error, command) {\n    // Authentication errors are fatal\n    error.code = \"AUTH_SWITCH_PLUGIN_ERROR\";\n    error.fatal = true;\n    command.emit(\"error\", error);\n}\nfunction authSwitchRequest(packet, connection, command) {\n    const { pluginName, pluginData } = Packets.AuthSwitchRequest.fromPacket(packet);\n    let authPlugin = connection.config.authPlugins && connection.config.authPlugins[pluginName];\n    // legacy plugin api don't allow to override mysql_native_password\n    // if pluginName is mysql_native_password it's using standard auth4.1 auth\n    if (connection.config.authSwitchHandler && pluginName !== \"mysql_native_password\") {\n        const legacySwitchHandler = connection.config.authSwitchHandler;\n        warnLegacyAuthSwitch();\n        legacySwitchHandler({\n            pluginName,\n            pluginData\n        }, (err, data)=>{\n            if (err) {\n                return authSwitchPluginError(err, command);\n            }\n            connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\n        });\n        return;\n    }\n    if (!authPlugin) {\n        authPlugin = standardAuthPlugins[pluginName];\n    }\n    if (!authPlugin) {\n        throw new Error(`Server requests authentication using unknown plugin ${pluginName}. See ${\"TODO: add plugins doco here\"} on how to configure or author authentication plugins.`);\n    }\n    connection._authPlugin = authPlugin({\n        connection,\n        command\n    });\n    Promise.resolve(connection._authPlugin(pluginData)).then((data)=>{\n        if (data) {\n            connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\n        }\n    }).catch((err)=>{\n        authSwitchPluginError(err, command);\n    });\n}\nfunction authSwitchRequestMoreData(packet, connection, command) {\n    const { data } = Packets.AuthSwitchRequestMoreData.fromPacket(packet);\n    if (connection.config.authSwitchHandler) {\n        const legacySwitchHandler = connection.config.authSwitchHandler;\n        warnLegacyAuthSwitch();\n        legacySwitchHandler({\n            pluginData: data\n        }, (err, data)=>{\n            if (err) {\n                return authSwitchPluginError(err, command);\n            }\n            connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\n        });\n        return;\n    }\n    if (!connection._authPlugin) {\n        throw new Error(\"AuthPluginMoreData received but no auth plugin instance found\");\n    }\n    Promise.resolve(connection._authPlugin(data)).then((data)=>{\n        if (data) {\n            connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\n        }\n    }).catch((err)=>{\n        authSwitchPluginError(err, command);\n    });\n}\nmodule.exports = {\n    authSwitchRequest,\n    authSwitchRequestMoreData\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/auth_switch.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/binlog_dump.js":
/*!*********************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/binlog_dump.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Command = __webpack_require__(/*! ./command */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst Packets = __webpack_require__(/*! ../packets */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\nconst eventParsers = [];\nclass BinlogEventHeader {\n    constructor(packet){\n        this.timestamp = packet.readInt32();\n        this.eventType = packet.readInt8();\n        this.serverId = packet.readInt32();\n        this.eventSize = packet.readInt32();\n        this.logPos = packet.readInt32();\n        this.flags = packet.readInt16();\n    }\n}\nclass BinlogDump extends Command {\n    constructor(opts){\n        super();\n        // this.onResult = callback;\n        this.opts = opts;\n    }\n    start(packet, connection) {\n        const newPacket = new Packets.BinlogDump(this.opts);\n        connection.writePacket(newPacket.toPacket(1));\n        return BinlogDump.prototype.binlogData;\n    }\n    binlogData(packet) {\n        // ok - continue consuming events\n        // error - error\n        // eof - end of binlog\n        if (packet.isEOF()) {\n            this.emit(\"eof\");\n            return null;\n        }\n        // binlog event header\n        packet.readInt8();\n        const header = new BinlogEventHeader(packet);\n        const EventParser = eventParsers[header.eventType];\n        let event;\n        if (EventParser) {\n            event = new EventParser(packet);\n        } else {\n            event = {\n                name: \"UNKNOWN\"\n            };\n        }\n        event.header = header;\n        this.emit(\"event\", event);\n        return BinlogDump.prototype.binlogData;\n    }\n}\nclass RotateEvent {\n    constructor(packet){\n        this.pposition = packet.readInt32();\n        // TODO: read uint64 here\n        packet.readInt32(); // positionDword2\n        this.nextBinlog = packet.readString();\n        this.name = \"RotateEvent\";\n    }\n}\nclass FormatDescriptionEvent {\n    constructor(packet){\n        this.binlogVersion = packet.readInt16();\n        this.serverVersion = packet.readString(50).replace(/\\u0000.*/, \"\"); // eslint-disable-line no-control-regex\n        this.createTimestamp = packet.readInt32();\n        this.eventHeaderLength = packet.readInt8(); // should be 19\n        this.eventsLength = packet.readBuffer();\n        this.name = \"FormatDescriptionEvent\";\n    }\n}\nclass QueryEvent {\n    constructor(packet){\n        const parseStatusVars = __webpack_require__(/*! ../packets/binlog_query_statusvars.js */ \"(rsc)/./node_modules/mysql2/lib/packets/binlog_query_statusvars.js\");\n        this.slaveProxyId = packet.readInt32();\n        this.executionTime = packet.readInt32();\n        const schemaLength = packet.readInt8();\n        this.errorCode = packet.readInt16();\n        const statusVarsLength = packet.readInt16();\n        const statusVars = packet.readBuffer(statusVarsLength);\n        this.schema = packet.readString(schemaLength);\n        packet.readInt8(); // should be zero\n        this.statusVars = parseStatusVars(statusVars);\n        this.query = packet.readString();\n        this.name = \"QueryEvent\";\n    }\n}\nclass XidEvent {\n    constructor(packet){\n        this.binlogVersion = packet.readInt16();\n        this.xid = packet.readInt64();\n        this.name = \"XidEvent\";\n    }\n}\neventParsers[2] = QueryEvent;\neventParsers[4] = RotateEvent;\neventParsers[15] = FormatDescriptionEvent;\neventParsers[16] = XidEvent;\nmodule.exports = BinlogDump;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/binlog_dump.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/change_user.js":
/*!*********************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/change_user.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// This file was modified by Oracle on September 21, 2021.\n// The changes involve saving additional authentication factor passwords\n// in the command scope and enabling multi-factor authentication in the\n// client-side when the server supports it.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\nconst Command = __webpack_require__(/*! ./command.js */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\nconst ClientConstants = __webpack_require__(/*! ../constants/client */ \"(rsc)/./node_modules/mysql2/lib/constants/client.js\");\nconst ClientHandshake = __webpack_require__(/*! ./client_handshake.js */ \"(rsc)/./node_modules/mysql2/lib/commands/client_handshake.js\");\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\nclass ChangeUser extends Command {\n    constructor(options, callback){\n        super();\n        this.onResult = callback;\n        this.user = options.user;\n        this.password = options.password;\n        // \"password1\" is an alias of \"password\"\n        this.password1 = options.password;\n        this.password2 = options.password2;\n        this.password3 = options.password3;\n        this.database = options.database;\n        this.passwordSha1 = options.passwordSha1;\n        this.charsetNumber = options.charsetNumber;\n        this.currentConfig = options.currentConfig;\n        this.authenticationFactor = 0;\n    }\n    start(packet, connection) {\n        const newPacket = new Packets.ChangeUser({\n            flags: connection.config.clientFlags,\n            user: this.user,\n            database: this.database,\n            charsetNumber: this.charsetNumber,\n            password: this.password,\n            passwordSha1: this.passwordSha1,\n            authPluginData1: connection._handshakePacket.authPluginData1,\n            authPluginData2: connection._handshakePacket.authPluginData2\n        });\n        this.currentConfig.user = this.user;\n        this.currentConfig.password = this.password;\n        this.currentConfig.database = this.database;\n        this.currentConfig.charsetNumber = this.charsetNumber;\n        connection.clientEncoding = CharsetToEncoding[this.charsetNumber];\n        // clear prepared statements cache as all statements become invalid after changeUser\n        connection._statements.clear();\n        connection.writePacket(newPacket.toPacket());\n        // check if the server supports multi-factor authentication\n        const multiFactorAuthentication = connection.serverCapabilityFlags & ClientConstants.MULTI_FACTOR_AUTHENTICATION;\n        if (multiFactorAuthentication) {\n            // if the server supports multi-factor authentication, we enable it in\n            // the client\n            this.authenticationFactor = 1;\n        }\n        return ChangeUser.prototype.handshakeResult;\n    }\n}\nChangeUser.prototype.handshakeResult = ClientHandshake.prototype.handshakeResult;\nChangeUser.prototype.calculateNativePasswordAuthToken = ClientHandshake.prototype.calculateNativePasswordAuthToken;\nmodule.exports = ChangeUser;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9jaGFuZ2VfdXNlci5qcyIsIm1hcHBpbmdzIjoiQUFBQSwwREFBMEQ7QUFDMUQsd0VBQXdFO0FBQ3hFLHVFQUF1RTtBQUN2RSwyQ0FBMkM7QUFDM0Msa0VBQWtFO0FBRWxFO0FBRUEsTUFBTUEsVUFBVUMsbUJBQU9BLENBQUM7QUFDeEIsTUFBTUMsVUFBVUQsbUJBQU9BLENBQUM7QUFDeEIsTUFBTUUsa0JBQWtCRixtQkFBT0EsQ0FBQztBQUNoQyxNQUFNRyxrQkFBa0JILG1CQUFPQSxDQUFDO0FBQ2hDLE1BQU1JLG9CQUFvQkosbUJBQU9BLENBQUM7QUFFbEMsTUFBTUssbUJBQW1CTjtJQUN2Qk8sWUFBWUMsT0FBTyxFQUFFQyxRQUFRLENBQUU7UUFDN0IsS0FBSztRQUNMLElBQUksQ0FBQ0MsUUFBUSxHQUFHRDtRQUNoQixJQUFJLENBQUNFLElBQUksR0FBR0gsUUFBUUcsSUFBSTtRQUN4QixJQUFJLENBQUNDLFFBQVEsR0FBR0osUUFBUUksUUFBUTtRQUNoQyx3Q0FBd0M7UUFDeEMsSUFBSSxDQUFDQyxTQUFTLEdBQUdMLFFBQVFJLFFBQVE7UUFDakMsSUFBSSxDQUFDRSxTQUFTLEdBQUdOLFFBQVFNLFNBQVM7UUFDbEMsSUFBSSxDQUFDQyxTQUFTLEdBQUdQLFFBQVFPLFNBQVM7UUFDbEMsSUFBSSxDQUFDQyxRQUFRLEdBQUdSLFFBQVFRLFFBQVE7UUFDaEMsSUFBSSxDQUFDQyxZQUFZLEdBQUdULFFBQVFTLFlBQVk7UUFDeEMsSUFBSSxDQUFDQyxhQUFhLEdBQUdWLFFBQVFVLGFBQWE7UUFDMUMsSUFBSSxDQUFDQyxhQUFhLEdBQUdYLFFBQVFXLGFBQWE7UUFDMUMsSUFBSSxDQUFDQyxvQkFBb0IsR0FBRztJQUM5QjtJQUNBQyxNQUFNQyxNQUFNLEVBQUVDLFVBQVUsRUFBRTtRQUN4QixNQUFNQyxZQUFZLElBQUl0QixRQUFRSSxVQUFVLENBQUM7WUFDdkNtQixPQUFPRixXQUFXRyxNQUFNLENBQUNDLFdBQVc7WUFDcENoQixNQUFNLElBQUksQ0FBQ0EsSUFBSTtZQUNmSyxVQUFVLElBQUksQ0FBQ0EsUUFBUTtZQUN2QkUsZUFBZSxJQUFJLENBQUNBLGFBQWE7WUFDakNOLFVBQVUsSUFBSSxDQUFDQSxRQUFRO1lBQ3ZCSyxjQUFjLElBQUksQ0FBQ0EsWUFBWTtZQUMvQlcsaUJBQWlCTCxXQUFXTSxnQkFBZ0IsQ0FBQ0QsZUFBZTtZQUM1REUsaUJBQWlCUCxXQUFXTSxnQkFBZ0IsQ0FBQ0MsZUFBZTtRQUM5RDtRQUNBLElBQUksQ0FBQ1gsYUFBYSxDQUFDUixJQUFJLEdBQUcsSUFBSSxDQUFDQSxJQUFJO1FBQ25DLElBQUksQ0FBQ1EsYUFBYSxDQUFDUCxRQUFRLEdBQUcsSUFBSSxDQUFDQSxRQUFRO1FBQzNDLElBQUksQ0FBQ08sYUFBYSxDQUFDSCxRQUFRLEdBQUcsSUFBSSxDQUFDQSxRQUFRO1FBQzNDLElBQUksQ0FBQ0csYUFBYSxDQUFDRCxhQUFhLEdBQUcsSUFBSSxDQUFDQSxhQUFhO1FBQ3JESyxXQUFXUSxjQUFjLEdBQUcxQixpQkFBaUIsQ0FBQyxJQUFJLENBQUNhLGFBQWEsQ0FBQztRQUNqRSxvRkFBb0Y7UUFDcEZLLFdBQVdTLFdBQVcsQ0FBQ0MsS0FBSztRQUM1QlYsV0FBV1csV0FBVyxDQUFDVixVQUFVVyxRQUFRO1FBQ3pDLDJEQUEyRDtRQUMzRCxNQUFNQyw0QkFBNEJiLFdBQVdjLHFCQUFxQixHQUFHbEMsZ0JBQWdCbUMsMkJBQTJCO1FBQ2hILElBQUlGLDJCQUEyQjtZQUM3QixzRUFBc0U7WUFDdEUsYUFBYTtZQUNiLElBQUksQ0FBQ2hCLG9CQUFvQixHQUFHO1FBQzlCO1FBQ0EsT0FBT2QsV0FBV2lDLFNBQVMsQ0FBQ0MsZUFBZTtJQUM3QztBQUNGO0FBRUFsQyxXQUFXaUMsU0FBUyxDQUFDQyxlQUFlLEdBQ2xDcEMsZ0JBQWdCbUMsU0FBUyxDQUFDQyxlQUFlO0FBQzNDbEMsV0FBV2lDLFNBQVMsQ0FBQ0UsZ0NBQWdDLEdBQ25EckMsZ0JBQWdCbUMsU0FBUyxDQUFDRSxnQ0FBZ0M7QUFFNURDLE9BQU9DLE9BQU8sR0FBR3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWNlZS1wcm90by1vbmUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9jaGFuZ2VfdXNlci5qcz85ZWU4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgZmlsZSB3YXMgbW9kaWZpZWQgYnkgT3JhY2xlIG9uIFNlcHRlbWJlciAyMSwgMjAyMS5cbi8vIFRoZSBjaGFuZ2VzIGludm9sdmUgc2F2aW5nIGFkZGl0aW9uYWwgYXV0aGVudGljYXRpb24gZmFjdG9yIHBhc3N3b3Jkc1xuLy8gaW4gdGhlIGNvbW1hbmQgc2NvcGUgYW5kIGVuYWJsaW5nIG11bHRpLWZhY3RvciBhdXRoZW50aWNhdGlvbiBpbiB0aGVcbi8vIGNsaWVudC1zaWRlIHdoZW4gdGhlIHNlcnZlciBzdXBwb3J0cyBpdC5cbi8vIE1vZGlmaWNhdGlvbnMgY29weXJpZ2h0IChjKSAyMDIxLCBPcmFjbGUgYW5kL29yIGl0cyBhZmZpbGlhdGVzLlxuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IENvbW1hbmQgPSByZXF1aXJlKCcuL2NvbW1hbmQuanMnKTtcbmNvbnN0IFBhY2tldHMgPSByZXF1aXJlKCcuLi9wYWNrZXRzL2luZGV4LmpzJyk7XG5jb25zdCBDbGllbnRDb25zdGFudHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvY2xpZW50Jyk7XG5jb25zdCBDbGllbnRIYW5kc2hha2UgPSByZXF1aXJlKCcuL2NsaWVudF9oYW5kc2hha2UuanMnKTtcbmNvbnN0IENoYXJzZXRUb0VuY29kaW5nID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL2NoYXJzZXRfZW5jb2RpbmdzLmpzJyk7XG5cbmNsYXNzIENoYW5nZVVzZXIgZXh0ZW5kcyBDb21tYW5kIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucywgY2FsbGJhY2spIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMub25SZXN1bHQgPSBjYWxsYmFjaztcbiAgICB0aGlzLnVzZXIgPSBvcHRpb25zLnVzZXI7XG4gICAgdGhpcy5wYXNzd29yZCA9IG9wdGlvbnMucGFzc3dvcmQ7XG4gICAgLy8gXCJwYXNzd29yZDFcIiBpcyBhbiBhbGlhcyBvZiBcInBhc3N3b3JkXCJcbiAgICB0aGlzLnBhc3N3b3JkMSA9IG9wdGlvbnMucGFzc3dvcmQ7XG4gICAgdGhpcy5wYXNzd29yZDIgPSBvcHRpb25zLnBhc3N3b3JkMjtcbiAgICB0aGlzLnBhc3N3b3JkMyA9IG9wdGlvbnMucGFzc3dvcmQzO1xuICAgIHRoaXMuZGF0YWJhc2UgPSBvcHRpb25zLmRhdGFiYXNlO1xuICAgIHRoaXMucGFzc3dvcmRTaGExID0gb3B0aW9ucy5wYXNzd29yZFNoYTE7XG4gICAgdGhpcy5jaGFyc2V0TnVtYmVyID0gb3B0aW9ucy5jaGFyc2V0TnVtYmVyO1xuICAgIHRoaXMuY3VycmVudENvbmZpZyA9IG9wdGlvbnMuY3VycmVudENvbmZpZztcbiAgICB0aGlzLmF1dGhlbnRpY2F0aW9uRmFjdG9yID0gMDtcbiAgfVxuICBzdGFydChwYWNrZXQsIGNvbm5lY3Rpb24pIHtcbiAgICBjb25zdCBuZXdQYWNrZXQgPSBuZXcgUGFja2V0cy5DaGFuZ2VVc2VyKHtcbiAgICAgIGZsYWdzOiBjb25uZWN0aW9uLmNvbmZpZy5jbGllbnRGbGFncyxcbiAgICAgIHVzZXI6IHRoaXMudXNlcixcbiAgICAgIGRhdGFiYXNlOiB0aGlzLmRhdGFiYXNlLFxuICAgICAgY2hhcnNldE51bWJlcjogdGhpcy5jaGFyc2V0TnVtYmVyLFxuICAgICAgcGFzc3dvcmQ6IHRoaXMucGFzc3dvcmQsXG4gICAgICBwYXNzd29yZFNoYTE6IHRoaXMucGFzc3dvcmRTaGExLFxuICAgICAgYXV0aFBsdWdpbkRhdGExOiBjb25uZWN0aW9uLl9oYW5kc2hha2VQYWNrZXQuYXV0aFBsdWdpbkRhdGExLFxuICAgICAgYXV0aFBsdWdpbkRhdGEyOiBjb25uZWN0aW9uLl9oYW5kc2hha2VQYWNrZXQuYXV0aFBsdWdpbkRhdGEyXG4gICAgfSk7XG4gICAgdGhpcy5jdXJyZW50Q29uZmlnLnVzZXIgPSB0aGlzLnVzZXI7XG4gICAgdGhpcy5jdXJyZW50Q29uZmlnLnBhc3N3b3JkID0gdGhpcy5wYXNzd29yZDtcbiAgICB0aGlzLmN1cnJlbnRDb25maWcuZGF0YWJhc2UgPSB0aGlzLmRhdGFiYXNlO1xuICAgIHRoaXMuY3VycmVudENvbmZpZy5jaGFyc2V0TnVtYmVyID0gdGhpcy5jaGFyc2V0TnVtYmVyO1xuICAgIGNvbm5lY3Rpb24uY2xpZW50RW5jb2RpbmcgPSBDaGFyc2V0VG9FbmNvZGluZ1t0aGlzLmNoYXJzZXROdW1iZXJdO1xuICAgIC8vIGNsZWFyIHByZXBhcmVkIHN0YXRlbWVudHMgY2FjaGUgYXMgYWxsIHN0YXRlbWVudHMgYmVjb21lIGludmFsaWQgYWZ0ZXIgY2hhbmdlVXNlclxuICAgIGNvbm5lY3Rpb24uX3N0YXRlbWVudHMuY2xlYXIoKTtcbiAgICBjb25uZWN0aW9uLndyaXRlUGFja2V0KG5ld1BhY2tldC50b1BhY2tldCgpKTtcbiAgICAvLyBjaGVjayBpZiB0aGUgc2VydmVyIHN1cHBvcnRzIG11bHRpLWZhY3RvciBhdXRoZW50aWNhdGlvblxuICAgIGNvbnN0IG11bHRpRmFjdG9yQXV0aGVudGljYXRpb24gPSBjb25uZWN0aW9uLnNlcnZlckNhcGFiaWxpdHlGbGFncyAmIENsaWVudENvbnN0YW50cy5NVUxUSV9GQUNUT1JfQVVUSEVOVElDQVRJT047XG4gICAgaWYgKG11bHRpRmFjdG9yQXV0aGVudGljYXRpb24pIHtcbiAgICAgIC8vIGlmIHRoZSBzZXJ2ZXIgc3VwcG9ydHMgbXVsdGktZmFjdG9yIGF1dGhlbnRpY2F0aW9uLCB3ZSBlbmFibGUgaXQgaW5cbiAgICAgIC8vIHRoZSBjbGllbnRcbiAgICAgIHRoaXMuYXV0aGVudGljYXRpb25GYWN0b3IgPSAxO1xuICAgIH1cbiAgICByZXR1cm4gQ2hhbmdlVXNlci5wcm90b3R5cGUuaGFuZHNoYWtlUmVzdWx0O1xuICB9XG59XG5cbkNoYW5nZVVzZXIucHJvdG90eXBlLmhhbmRzaGFrZVJlc3VsdCA9XG4gIENsaWVudEhhbmRzaGFrZS5wcm90b3R5cGUuaGFuZHNoYWtlUmVzdWx0O1xuQ2hhbmdlVXNlci5wcm90b3R5cGUuY2FsY3VsYXRlTmF0aXZlUGFzc3dvcmRBdXRoVG9rZW4gPVxuICBDbGllbnRIYW5kc2hha2UucHJvdG90eXBlLmNhbGN1bGF0ZU5hdGl2ZVBhc3N3b3JkQXV0aFRva2VuO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENoYW5nZVVzZXI7XG4iXSwibmFtZXMiOlsiQ29tbWFuZCIsInJlcXVpcmUiLCJQYWNrZXRzIiwiQ2xpZW50Q29uc3RhbnRzIiwiQ2xpZW50SGFuZHNoYWtlIiwiQ2hhcnNldFRvRW5jb2RpbmciLCJDaGFuZ2VVc2VyIiwiY29uc3RydWN0b3IiLCJvcHRpb25zIiwiY2FsbGJhY2siLCJvblJlc3VsdCIsInVzZXIiLCJwYXNzd29yZCIsInBhc3N3b3JkMSIsInBhc3N3b3JkMiIsInBhc3N3b3JkMyIsImRhdGFiYXNlIiwicGFzc3dvcmRTaGExIiwiY2hhcnNldE51bWJlciIsImN1cnJlbnRDb25maWciLCJhdXRoZW50aWNhdGlvbkZhY3RvciIsInN0YXJ0IiwicGFja2V0IiwiY29ubmVjdGlvbiIsIm5ld1BhY2tldCIsImZsYWdzIiwiY29uZmlnIiwiY2xpZW50RmxhZ3MiLCJhdXRoUGx1Z2luRGF0YTEiLCJfaGFuZHNoYWtlUGFja2V0IiwiYXV0aFBsdWdpbkRhdGEyIiwiY2xpZW50RW5jb2RpbmciLCJfc3RhdGVtZW50cyIsImNsZWFyIiwid3JpdGVQYWNrZXQiLCJ0b1BhY2tldCIsIm11bHRpRmFjdG9yQXV0aGVudGljYXRpb24iLCJzZXJ2ZXJDYXBhYmlsaXR5RmxhZ3MiLCJNVUxUSV9GQUNUT1JfQVVUSEVOVElDQVRJT04iLCJwcm90b3R5cGUiLCJoYW5kc2hha2VSZXN1bHQiLCJjYWxjdWxhdGVOYXRpdmVQYXNzd29yZEF1dGhUb2tlbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/change_user.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/client_handshake.js":
/*!**************************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/client_handshake.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// This file was modified by Oracle on June 17, 2021.\n// Handshake errors are now maked as fatal and the corresponding events are\n// emitted in the command instance itself.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n// This file was modified by Oracle on September 21, 2021.\n// Handshake workflow now supports additional authentication factors requested\n// by the server.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\nconst Command = __webpack_require__(/*! ./command.js */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\nconst ClientConstants = __webpack_require__(/*! ../constants/client.js */ \"(rsc)/./node_modules/mysql2/lib/constants/client.js\");\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\nconst auth41 = __webpack_require__(/*! ../auth_41.js */ \"(rsc)/./node_modules/mysql2/lib/auth_41.js\");\nfunction flagNames(flags) {\n    const res = [];\n    for(const c in ClientConstants){\n        if (flags & ClientConstants[c]) {\n            res.push(c.replace(/_/g, \" \").toLowerCase());\n        }\n    }\n    return res;\n}\nclass ClientHandshake extends Command {\n    constructor(clientFlags){\n        super();\n        this.handshake = null;\n        this.clientFlags = clientFlags;\n        this.authenticationFactor = 0;\n    }\n    start() {\n        return ClientHandshake.prototype.handshakeInit;\n    }\n    sendSSLRequest(connection) {\n        const sslRequest = new Packets.SSLRequest(this.clientFlags, connection.config.charsetNumber);\n        connection.writePacket(sslRequest.toPacket());\n    }\n    sendCredentials(connection) {\n        if (connection.config.debug) {\n            // eslint-disable-next-line\n            console.log(\"Sending handshake packet: flags:%d=(%s)\", this.clientFlags, flagNames(this.clientFlags).join(\", \"));\n        }\n        this.user = connection.config.user;\n        this.password = connection.config.password;\n        // \"password1\" is an alias to the original \"password\" value\n        // to make it easier to integrate multi-factor authentication\n        this.password1 = connection.config.password;\n        // \"password2\" and \"password3\" are the 2nd and 3rd factor authentication\n        // passwords, which can be undefined depending on the authentication\n        // plugin being used\n        this.password2 = connection.config.password2;\n        this.password3 = connection.config.password3;\n        this.passwordSha1 = connection.config.passwordSha1;\n        this.database = connection.config.database;\n        this.autPluginName = this.handshake.autPluginName;\n        const handshakeResponse = new Packets.HandshakeResponse({\n            flags: this.clientFlags,\n            user: this.user,\n            database: this.database,\n            password: this.password,\n            passwordSha1: this.passwordSha1,\n            charsetNumber: connection.config.charsetNumber,\n            authPluginData1: this.handshake.authPluginData1,\n            authPluginData2: this.handshake.authPluginData2,\n            compress: connection.config.compress,\n            connectAttributes: connection.config.connectAttributes\n        });\n        connection.writePacket(handshakeResponse.toPacket());\n    }\n    calculateNativePasswordAuthToken(authPluginData) {\n        // TODO: dont split into authPluginData1 and authPluginData2, instead join when 1 & 2 received\n        const authPluginData1 = authPluginData.slice(0, 8);\n        const authPluginData2 = authPluginData.slice(8, 20);\n        let authToken;\n        if (this.passwordSha1) {\n            authToken = auth41.calculateTokenFromPasswordSha(this.passwordSha1, authPluginData1, authPluginData2);\n        } else {\n            authToken = auth41.calculateToken(this.password, authPluginData1, authPluginData2);\n        }\n        return authToken;\n    }\n    handshakeInit(helloPacket, connection) {\n        this.on(\"error\", (e)=>{\n            connection._fatalError = e;\n            connection._protocolError = e;\n        });\n        this.handshake = Packets.Handshake.fromPacket(helloPacket);\n        if (connection.config.debug) {\n            // eslint-disable-next-line\n            console.log(\"Server hello packet: capability flags:%d=(%s)\", this.handshake.capabilityFlags, flagNames(this.handshake.capabilityFlags).join(\", \"));\n        }\n        connection.serverCapabilityFlags = this.handshake.capabilityFlags;\n        connection.serverEncoding = CharsetToEncoding[this.handshake.characterSet];\n        connection.connectionId = this.handshake.connectionId;\n        const serverSSLSupport = this.handshake.capabilityFlags & ClientConstants.SSL;\n        // multi factor authentication is enabled with the\n        // \"MULTI_FACTOR_AUTHENTICATION\" capability and should only be used if it\n        // is supported by the server\n        const multiFactorAuthentication = this.handshake.capabilityFlags & ClientConstants.MULTI_FACTOR_AUTHENTICATION;\n        this.clientFlags = this.clientFlags | multiFactorAuthentication;\n        // use compression only if requested by client and supported by server\n        connection.config.compress = connection.config.compress && this.handshake.capabilityFlags & ClientConstants.COMPRESS;\n        this.clientFlags = this.clientFlags | connection.config.compress;\n        if (connection.config.ssl) {\n            // client requires SSL but server does not support it\n            if (!serverSSLSupport) {\n                const err = new Error(\"Server does not support secure connection\");\n                err.code = \"HANDSHAKE_NO_SSL_SUPPORT\";\n                err.fatal = true;\n                this.emit(\"error\", err);\n                return false;\n            }\n            // send ssl upgrade request and immediately upgrade connection to secure\n            this.clientFlags |= ClientConstants.SSL;\n            this.sendSSLRequest(connection);\n            connection.startTLS((err)=>{\n                // after connection is secure\n                if (err) {\n                    // SSL negotiation error are fatal\n                    err.code = \"HANDSHAKE_SSL_ERROR\";\n                    err.fatal = true;\n                    this.emit(\"error\", err);\n                    return;\n                }\n                // rest of communication is encrypted\n                this.sendCredentials(connection);\n            });\n        } else {\n            this.sendCredentials(connection);\n        }\n        if (multiFactorAuthentication) {\n            // if the server supports multi-factor authentication, we enable it in\n            // the client\n            this.authenticationFactor = 1;\n        }\n        return ClientHandshake.prototype.handshakeResult;\n    }\n    handshakeResult(packet, connection) {\n        const marker = packet.peekByte();\n        // packet can be OK_Packet, ERR_Packet, AuthSwitchRequest, AuthNextFactor\n        // or AuthMoreData\n        if (marker === 0xfe || marker === 1 || marker === 0x02) {\n            const authSwitch = __webpack_require__(/*! ./auth_switch */ \"(rsc)/./node_modules/mysql2/lib/commands/auth_switch.js\");\n            try {\n                if (marker === 1) {\n                    authSwitch.authSwitchRequestMoreData(packet, connection, this);\n                } else {\n                    // if authenticationFactor === 0, it means the server does not support\n                    // the multi-factor authentication capability\n                    if (this.authenticationFactor !== 0) {\n                        // if we are past the first authentication factor, we should use the\n                        // corresponding password (if there is one)\n                        connection.config.password = this[`password${this.authenticationFactor}`];\n                        // update the current authentication factor\n                        this.authenticationFactor += 1;\n                    }\n                    // if marker === 0x02, it means it is an AuthNextFactor packet,\n                    // which is similar in structure to an AuthSwitchRequest packet,\n                    // so, we can use it directly\n                    authSwitch.authSwitchRequest(packet, connection, this);\n                }\n                return ClientHandshake.prototype.handshakeResult;\n            } catch (err) {\n                // Authentication errors are fatal\n                err.code = \"AUTH_SWITCH_PLUGIN_ERROR\";\n                err.fatal = true;\n                if (this.onResult) {\n                    this.onResult(err);\n                } else {\n                    this.emit(\"error\", err);\n                }\n                return null;\n            }\n        }\n        if (marker !== 0) {\n            const err = new Error(\"Unexpected packet during handshake phase\");\n            // Unknown handshake errors are fatal\n            err.code = \"HANDSHAKE_UNKNOWN_ERROR\";\n            err.fatal = true;\n            if (this.onResult) {\n                this.onResult(err);\n            } else {\n                this.emit(\"error\", err);\n            }\n            return null;\n        }\n        // this should be called from ClientHandshake command only\n        // and skipped when called from ChangeUser command\n        if (!connection.authorized) {\n            connection.authorized = true;\n            if (connection.config.compress) {\n                const enableCompression = (__webpack_require__(/*! ../compressed_protocol.js */ \"(rsc)/./node_modules/mysql2/lib/compressed_protocol.js\").enableCompression);\n                enableCompression(connection);\n            }\n        }\n        if (this.onResult) {\n            this.onResult(null);\n        }\n        return null;\n    }\n}\nmodule.exports = ClientHandshake;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/client_handshake.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/close_statement.js":
/*!*************************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/close_statement.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Command = __webpack_require__(/*! ./command */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\nclass CloseStatement extends Command {\n    constructor(id){\n        super();\n        this.id = id;\n    }\n    start(packet, connection) {\n        connection.writePacket(new Packets.CloseStatement(this.id).toPacket(1));\n        return null;\n    }\n}\nmodule.exports = CloseStatement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9jbG9zZV9zdGF0ZW1lbnQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxVQUFVQyxtQkFBT0EsQ0FBQztBQUN4QixNQUFNQyxVQUFVRCxtQkFBT0EsQ0FBQztBQUV4QixNQUFNRSx1QkFBdUJIO0lBQzNCSSxZQUFZQyxFQUFFLENBQUU7UUFDZCxLQUFLO1FBQ0wsSUFBSSxDQUFDQSxFQUFFLEdBQUdBO0lBQ1o7SUFFQUMsTUFBTUMsTUFBTSxFQUFFQyxVQUFVLEVBQUU7UUFDeEJBLFdBQVdDLFdBQVcsQ0FBQyxJQUFJUCxRQUFRQyxjQUFjLENBQUMsSUFBSSxDQUFDRSxFQUFFLEVBQUVLLFFBQVEsQ0FBQztRQUNwRSxPQUFPO0lBQ1Q7QUFDRjtBQUVBQyxPQUFPQyxPQUFPLEdBQUdUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWNlZS1wcm90by1vbmUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9jbG9zZV9zdGF0ZW1lbnQuanM/NzcwMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IENvbW1hbmQgPSByZXF1aXJlKCcuL2NvbW1hbmQnKTtcbmNvbnN0IFBhY2tldHMgPSByZXF1aXJlKCcuLi9wYWNrZXRzL2luZGV4LmpzJyk7XG5cbmNsYXNzIENsb3NlU3RhdGVtZW50IGV4dGVuZHMgQ29tbWFuZCB7XG4gIGNvbnN0cnVjdG9yKGlkKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmlkID0gaWQ7XG4gIH1cblxuICBzdGFydChwYWNrZXQsIGNvbm5lY3Rpb24pIHtcbiAgICBjb25uZWN0aW9uLndyaXRlUGFja2V0KG5ldyBQYWNrZXRzLkNsb3NlU3RhdGVtZW50KHRoaXMuaWQpLnRvUGFja2V0KDEpKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IENsb3NlU3RhdGVtZW50O1xuIl0sIm5hbWVzIjpbIkNvbW1hbmQiLCJyZXF1aXJlIiwiUGFja2V0cyIsIkNsb3NlU3RhdGVtZW50IiwiY29uc3RydWN0b3IiLCJpZCIsInN0YXJ0IiwicGFja2V0IiwiY29ubmVjdGlvbiIsIndyaXRlUGFja2V0IiwidG9QYWNrZXQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/close_statement.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/command.js":
/*!*****************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/command.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter);\nconst Timers = __webpack_require__(/*! timers */ \"timers\");\nclass Command extends EventEmitter {\n    constructor(){\n        super();\n        this.next = null;\n    }\n    // slow. debug only\n    stateName() {\n        const state = this.next;\n        for(const i in this){\n            if (this[i] === state && i !== \"next\") {\n                return i;\n            }\n        }\n        return \"unknown name\";\n    }\n    execute(packet, connection) {\n        if (!this.next) {\n            this.next = this.start;\n            connection._resetSequenceId();\n        }\n        if (packet && packet.isError()) {\n            const err = packet.asError(connection.clientEncoding);\n            err.sql = this.sql || this.query;\n            if (this.queryTimeout) {\n                Timers.clearTimeout(this.queryTimeout);\n                this.queryTimeout = null;\n            }\n            if (this.onResult) {\n                this.onResult(err);\n                this.emit(\"end\");\n            } else {\n                this.emit(\"error\", err);\n                this.emit(\"end\");\n            }\n            return true;\n        }\n        // TODO: don't return anything from execute, it's ugly and error-prone. Listen for 'end' event in connection\n        this.next = this.next(packet, connection);\n        if (this.next) {\n            return false;\n        }\n        this.emit(\"end\");\n        return true;\n    }\n}\nmodule.exports = Command;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9jb21tYW5kLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsZUFBZUMsMERBQThCO0FBQ25ELE1BQU1DLFNBQVNELG1CQUFPQSxDQUFDO0FBRXZCLE1BQU1FLGdCQUFnQkg7SUFDcEJJLGFBQWM7UUFDWixLQUFLO1FBQ0wsSUFBSSxDQUFDQyxJQUFJLEdBQUc7SUFDZDtJQUVBLG1CQUFtQjtJQUNuQkMsWUFBWTtRQUNWLE1BQU1DLFFBQVEsSUFBSSxDQUFDRixJQUFJO1FBQ3ZCLElBQUssTUFBTUcsS0FBSyxJQUFJLENBQUU7WUFDcEIsSUFBSSxJQUFJLENBQUNBLEVBQUUsS0FBS0QsU0FBU0MsTUFBTSxRQUFRO2dCQUNyQyxPQUFPQTtZQUNUO1FBQ0Y7UUFDQSxPQUFPO0lBQ1Q7SUFFQUMsUUFBUUMsTUFBTSxFQUFFQyxVQUFVLEVBQUU7UUFDMUIsSUFBSSxDQUFDLElBQUksQ0FBQ04sSUFBSSxFQUFFO1lBQ2QsSUFBSSxDQUFDQSxJQUFJLEdBQUcsSUFBSSxDQUFDTyxLQUFLO1lBQ3RCRCxXQUFXRSxnQkFBZ0I7UUFDN0I7UUFDQSxJQUFJSCxVQUFVQSxPQUFPSSxPQUFPLElBQUk7WUFDOUIsTUFBTUMsTUFBTUwsT0FBT00sT0FBTyxDQUFDTCxXQUFXTSxjQUFjO1lBQ3BERixJQUFJRyxHQUFHLEdBQUcsSUFBSSxDQUFDQSxHQUFHLElBQUksSUFBSSxDQUFDQyxLQUFLO1lBQ2hDLElBQUksSUFBSSxDQUFDQyxZQUFZLEVBQUU7Z0JBQ3JCbEIsT0FBT21CLFlBQVksQ0FBQyxJQUFJLENBQUNELFlBQVk7Z0JBQ3JDLElBQUksQ0FBQ0EsWUFBWSxHQUFHO1lBQ3RCO1lBQ0EsSUFBSSxJQUFJLENBQUNFLFFBQVEsRUFBRTtnQkFDakIsSUFBSSxDQUFDQSxRQUFRLENBQUNQO2dCQUNkLElBQUksQ0FBQ1EsSUFBSSxDQUFDO1lBQ1osT0FBTztnQkFDTCxJQUFJLENBQUNBLElBQUksQ0FBQyxTQUFTUjtnQkFDbkIsSUFBSSxDQUFDUSxJQUFJLENBQUM7WUFDWjtZQUNBLE9BQU87UUFDVDtRQUNBLDRHQUE0RztRQUM1RyxJQUFJLENBQUNsQixJQUFJLEdBQUcsSUFBSSxDQUFDQSxJQUFJLENBQUNLLFFBQVFDO1FBQzlCLElBQUksSUFBSSxDQUFDTixJQUFJLEVBQUU7WUFDYixPQUFPO1FBQ1Q7UUFDQSxJQUFJLENBQUNrQixJQUFJLENBQUM7UUFDVixPQUFPO0lBRVQ7QUFDRjtBQUVBQyxPQUFPQyxPQUFPLEdBQUd0QiIsInNvdXJjZXMiOlsid2VicGFjazovL2FjZWUtcHJvdG8tb25lLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29tbWFuZHMvY29tbWFuZC5qcz83YWQwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyO1xuY29uc3QgVGltZXJzID0gcmVxdWlyZSgndGltZXJzJyk7XG5cbmNsYXNzIENvbW1hbmQgZXh0ZW5kcyBFdmVudEVtaXR0ZXIge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMubmV4dCA9IG51bGw7XG4gIH1cblxuICAvLyBzbG93LiBkZWJ1ZyBvbmx5XG4gIHN0YXRlTmFtZSgpIHtcbiAgICBjb25zdCBzdGF0ZSA9IHRoaXMubmV4dDtcbiAgICBmb3IgKGNvbnN0IGkgaW4gdGhpcykge1xuICAgICAgaWYgKHRoaXNbaV0gPT09IHN0YXRlICYmIGkgIT09ICduZXh0Jykge1xuICAgICAgICByZXR1cm4gaTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuICd1bmtub3duIG5hbWUnO1xuICB9XG5cbiAgZXhlY3V0ZShwYWNrZXQsIGNvbm5lY3Rpb24pIHtcbiAgICBpZiAoIXRoaXMubmV4dCkge1xuICAgICAgdGhpcy5uZXh0ID0gdGhpcy5zdGFydDtcbiAgICAgIGNvbm5lY3Rpb24uX3Jlc2V0U2VxdWVuY2VJZCgpO1xuICAgIH1cbiAgICBpZiAocGFja2V0ICYmIHBhY2tldC5pc0Vycm9yKCkpIHtcbiAgICAgIGNvbnN0IGVyciA9IHBhY2tldC5hc0Vycm9yKGNvbm5lY3Rpb24uY2xpZW50RW5jb2RpbmcpO1xuICAgICAgZXJyLnNxbCA9IHRoaXMuc3FsIHx8IHRoaXMucXVlcnk7XG4gICAgICBpZiAodGhpcy5xdWVyeVRpbWVvdXQpIHtcbiAgICAgICAgVGltZXJzLmNsZWFyVGltZW91dCh0aGlzLnF1ZXJ5VGltZW91dCk7XG4gICAgICAgIHRoaXMucXVlcnlUaW1lb3V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLm9uUmVzdWx0KSB7XG4gICAgICAgIHRoaXMub25SZXN1bHQoZXJyKTtcbiAgICAgICAgdGhpcy5lbWl0KCdlbmQnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuZW1pdCgnZXJyb3InLCBlcnIpO1xuICAgICAgICB0aGlzLmVtaXQoJ2VuZCcpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIC8vIFRPRE86IGRvbid0IHJldHVybiBhbnl0aGluZyBmcm9tIGV4ZWN1dGUsIGl0J3MgdWdseSBhbmQgZXJyb3ItcHJvbmUuIExpc3RlbiBmb3IgJ2VuZCcgZXZlbnQgaW4gY29ubmVjdGlvblxuICAgIHRoaXMubmV4dCA9IHRoaXMubmV4dChwYWNrZXQsIGNvbm5lY3Rpb24pO1xuICAgIGlmICh0aGlzLm5leHQpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9IFxuICAgIHRoaXMuZW1pdCgnZW5kJyk7XG4gICAgcmV0dXJuIHRydWU7XG4gICAgXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBDb21tYW5kO1xuIl0sIm5hbWVzIjpbIkV2ZW50RW1pdHRlciIsInJlcXVpcmUiLCJUaW1lcnMiLCJDb21tYW5kIiwiY29uc3RydWN0b3IiLCJuZXh0Iiwic3RhdGVOYW1lIiwic3RhdGUiLCJpIiwiZXhlY3V0ZSIsInBhY2tldCIsImNvbm5lY3Rpb24iLCJzdGFydCIsIl9yZXNldFNlcXVlbmNlSWQiLCJpc0Vycm9yIiwiZXJyIiwiYXNFcnJvciIsImNsaWVudEVuY29kaW5nIiwic3FsIiwicXVlcnkiLCJxdWVyeVRpbWVvdXQiLCJjbGVhclRpbWVvdXQiLCJvblJlc3VsdCIsImVtaXQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/command.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/execute.js":
/*!*****************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/execute.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Command = __webpack_require__(/*! ./command.js */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst Query = __webpack_require__(/*! ./query.js */ \"(rsc)/./node_modules/mysql2/lib/commands/query.js\");\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\nconst getBinaryParser = __webpack_require__(/*! ../parsers/binary_parser.js */ \"(rsc)/./node_modules/mysql2/lib/parsers/binary_parser.js\");\nclass Execute extends Command {\n    constructor(options, callback){\n        super();\n        this.statement = options.statement;\n        this.sql = options.sql;\n        this.values = options.values;\n        this.onResult = callback;\n        this.parameters = options.values;\n        this.insertId = 0;\n        this.timeout = options.timeout;\n        this.queryTimeout = null;\n        this._rows = [];\n        this._fields = [];\n        this._result = [];\n        this._fieldCount = 0;\n        this._rowParser = null;\n        this._executeOptions = options;\n        this._resultIndex = 0;\n        this._localStream = null;\n        this._unpipeStream = function() {};\n        this._streamFactory = options.infileStreamFactory;\n        this._connection = null;\n    }\n    buildParserFromFields(fields, connection) {\n        return getBinaryParser(fields, this.options, connection.config);\n    }\n    start(packet, connection) {\n        this._connection = connection;\n        this.options = Object.assign({}, connection.config, this._executeOptions);\n        this._setTimeout();\n        const executePacket = new Packets.Execute(this.statement.id, this.parameters, connection.config.charsetNumber, connection.config.timezone);\n        //For reasons why this try-catch is here, please see\n        // https://github.com/sidorares/node-mysql2/pull/689\n        //For additional discussion, see\n        // 1. https://github.com/sidorares/node-mysql2/issues/493\n        // 2. https://github.com/sidorares/node-mysql2/issues/187\n        // 3. https://github.com/sidorares/node-mysql2/issues/480\n        try {\n            connection.writePacket(executePacket.toPacket(1));\n        } catch (error) {\n            this.onResult(error);\n        }\n        return Execute.prototype.resultsetHeader;\n    }\n    readField(packet, connection) {\n        let fields;\n        // disabling for now, but would be great to find reliable way to parse fields only once\n        // fields reported by prepare can be empty at all or just incorrect - see #169\n        //\n        // perfomance optimisation: if we already have this field parsed in statement header, use one from header\n        // const field = this.statement.columns.length == this._fieldCount ?\n        //  this.statement.columns[this._receivedFieldsCount] : new Packets.ColumnDefinition(packet);\n        const field = new Packets.ColumnDefinition(packet, connection.clientEncoding);\n        this._receivedFieldsCount++;\n        this._fields[this._resultIndex].push(field);\n        if (this._receivedFieldsCount === this._fieldCount) {\n            fields = this._fields[this._resultIndex];\n            this.emit(\"fields\", fields, this._resultIndex);\n            return Execute.prototype.fieldsEOF;\n        }\n        return Execute.prototype.readField;\n    }\n    fieldsEOF(packet, connection) {\n        // check EOF\n        if (!packet.isEOF()) {\n            return connection.protocolError(\"Expected EOF packet\");\n        }\n        this._rowParser = new (this.buildParserFromFields(this._fields[this._resultIndex], connection))();\n        return Execute.prototype.row;\n    }\n}\nExecute.prototype.done = Query.prototype.done;\nExecute.prototype.doneInsert = Query.prototype.doneInsert;\nExecute.prototype.resultsetHeader = Query.prototype.resultsetHeader;\nExecute.prototype._findOrCreateReadStream = Query.prototype._findOrCreateReadStream;\nExecute.prototype._streamLocalInfile = Query.prototype._streamLocalInfile;\nExecute.prototype._setTimeout = Query.prototype._setTimeout;\nExecute.prototype._handleTimeoutError = Query.prototype._handleTimeoutError;\nExecute.prototype.row = Query.prototype.row;\nExecute.prototype.stream = Query.prototype.stream;\nmodule.exports = Execute;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/execute.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/index.js":
/*!***************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/index.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst ClientHandshake = __webpack_require__(/*! ./client_handshake.js */ \"(rsc)/./node_modules/mysql2/lib/commands/client_handshake.js\");\nconst ServerHandshake = __webpack_require__(/*! ./server_handshake.js */ \"(rsc)/./node_modules/mysql2/lib/commands/server_handshake.js\");\nconst Query = __webpack_require__(/*! ./query.js */ \"(rsc)/./node_modules/mysql2/lib/commands/query.js\");\nconst Prepare = __webpack_require__(/*! ./prepare.js */ \"(rsc)/./node_modules/mysql2/lib/commands/prepare.js\");\nconst CloseStatement = __webpack_require__(/*! ./close_statement.js */ \"(rsc)/./node_modules/mysql2/lib/commands/close_statement.js\");\nconst Execute = __webpack_require__(/*! ./execute.js */ \"(rsc)/./node_modules/mysql2/lib/commands/execute.js\");\nconst Ping = __webpack_require__(/*! ./ping.js */ \"(rsc)/./node_modules/mysql2/lib/commands/ping.js\");\nconst RegisterSlave = __webpack_require__(/*! ./register_slave.js */ \"(rsc)/./node_modules/mysql2/lib/commands/register_slave.js\");\nconst BinlogDump = __webpack_require__(/*! ./binlog_dump.js */ \"(rsc)/./node_modules/mysql2/lib/commands/binlog_dump.js\");\nconst ChangeUser = __webpack_require__(/*! ./change_user.js */ \"(rsc)/./node_modules/mysql2/lib/commands/change_user.js\");\nconst Quit = __webpack_require__(/*! ./quit.js */ \"(rsc)/./node_modules/mysql2/lib/commands/quit.js\");\nmodule.exports = {\n    ClientHandshake,\n    ServerHandshake,\n    Query,\n    Prepare,\n    CloseStatement,\n    Execute,\n    Ping,\n    RegisterSlave,\n    BinlogDump,\n    ChangeUser,\n    Quit\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU1BLGtCQUFrQkMsbUJBQU9BLENBQUM7QUFDaEMsTUFBTUMsa0JBQWtCRCxtQkFBT0EsQ0FBQztBQUNoQyxNQUFNRSxRQUFRRixtQkFBT0EsQ0FBQztBQUN0QixNQUFNRyxVQUFVSCxtQkFBT0EsQ0FBQztBQUN4QixNQUFNSSxpQkFBaUJKLG1CQUFPQSxDQUFDO0FBQy9CLE1BQU1LLFVBQVVMLG1CQUFPQSxDQUFDO0FBQ3hCLE1BQU1NLE9BQU9OLG1CQUFPQSxDQUFDO0FBQ3JCLE1BQU1PLGdCQUFnQlAsbUJBQU9BLENBQUM7QUFDOUIsTUFBTVEsYUFBYVIsbUJBQU9BLENBQUM7QUFDM0IsTUFBTVMsYUFBYVQsbUJBQU9BLENBQUM7QUFDM0IsTUFBTVUsT0FBT1YsbUJBQU9BLENBQUM7QUFFckJXLE9BQU9DLE9BQU8sR0FBRztJQUNmYjtJQUNBRTtJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWNlZS1wcm90by1vbmUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9pbmRleC5qcz9mYWFlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgQ2xpZW50SGFuZHNoYWtlID0gcmVxdWlyZSgnLi9jbGllbnRfaGFuZHNoYWtlLmpzJyk7XG5jb25zdCBTZXJ2ZXJIYW5kc2hha2UgPSByZXF1aXJlKCcuL3NlcnZlcl9oYW5kc2hha2UuanMnKTtcbmNvbnN0IFF1ZXJ5ID0gcmVxdWlyZSgnLi9xdWVyeS5qcycpO1xuY29uc3QgUHJlcGFyZSA9IHJlcXVpcmUoJy4vcHJlcGFyZS5qcycpO1xuY29uc3QgQ2xvc2VTdGF0ZW1lbnQgPSByZXF1aXJlKCcuL2Nsb3NlX3N0YXRlbWVudC5qcycpO1xuY29uc3QgRXhlY3V0ZSA9IHJlcXVpcmUoJy4vZXhlY3V0ZS5qcycpO1xuY29uc3QgUGluZyA9IHJlcXVpcmUoJy4vcGluZy5qcycpO1xuY29uc3QgUmVnaXN0ZXJTbGF2ZSA9IHJlcXVpcmUoJy4vcmVnaXN0ZXJfc2xhdmUuanMnKTtcbmNvbnN0IEJpbmxvZ0R1bXAgPSByZXF1aXJlKCcuL2JpbmxvZ19kdW1wLmpzJyk7XG5jb25zdCBDaGFuZ2VVc2VyID0gcmVxdWlyZSgnLi9jaGFuZ2VfdXNlci5qcycpO1xuY29uc3QgUXVpdCA9IHJlcXVpcmUoJy4vcXVpdC5qcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgQ2xpZW50SGFuZHNoYWtlLFxuICBTZXJ2ZXJIYW5kc2hha2UsXG4gIFF1ZXJ5LFxuICBQcmVwYXJlLFxuICBDbG9zZVN0YXRlbWVudCxcbiAgRXhlY3V0ZSxcbiAgUGluZyxcbiAgUmVnaXN0ZXJTbGF2ZSxcbiAgQmlubG9nRHVtcCxcbiAgQ2hhbmdlVXNlcixcbiAgUXVpdFxufTtcbiJdLCJuYW1lcyI6WyJDbGllbnRIYW5kc2hha2UiLCJyZXF1aXJlIiwiU2VydmVySGFuZHNoYWtlIiwiUXVlcnkiLCJQcmVwYXJlIiwiQ2xvc2VTdGF0ZW1lbnQiLCJFeGVjdXRlIiwiUGluZyIsIlJlZ2lzdGVyU2xhdmUiLCJCaW5sb2dEdW1wIiwiQ2hhbmdlVXNlciIsIlF1aXQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/ping.js":
/*!**************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/ping.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Command = __webpack_require__(/*! ./command */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst CommandCode = __webpack_require__(/*! ../constants/commands */ \"(rsc)/./node_modules/mysql2/lib/constants/commands.js\");\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\n// TODO: time statistics?\n// usefull for queue size and network latency monitoring\n// store created,sent,reply timestamps\nclass Ping extends Command {\n    constructor(callback){\n        super();\n        this.onResult = callback;\n    }\n    start(packet, connection) {\n        const ping = new Packet(0, Buffer.from([\n            1,\n            0,\n            0,\n            0,\n            CommandCode.PING\n        ]), 0, 5);\n        connection.writePacket(ping);\n        return Ping.prototype.pingResponse;\n    }\n    pingResponse() {\n        // TODO: check it's OK packet. error check already done in caller\n        if (this.onResult) {\n            process.nextTick(this.onResult.bind(this));\n        }\n        return null;\n    }\n}\nmodule.exports = Ping;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9waW5nLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsVUFBVUMsbUJBQU9BLENBQUM7QUFDeEIsTUFBTUMsY0FBY0QsbUJBQU9BLENBQUM7QUFDNUIsTUFBTUUsU0FBU0YsbUJBQU9BLENBQUM7QUFFdkIseUJBQXlCO0FBQ3pCLHdEQUF3RDtBQUN4RCxzQ0FBc0M7QUFDdEMsTUFBTUcsYUFBYUo7SUFDakJLLFlBQVlDLFFBQVEsQ0FBRTtRQUNwQixLQUFLO1FBQ0wsSUFBSSxDQUFDQyxRQUFRLEdBQUdEO0lBQ2xCO0lBRUFFLE1BQU1DLE1BQU0sRUFBRUMsVUFBVSxFQUFFO1FBQ3hCLE1BQU1DLE9BQU8sSUFBSVIsT0FDZixHQUNBUyxPQUFPQyxJQUFJLENBQUM7WUFBQztZQUFHO1lBQUc7WUFBRztZQUFHWCxZQUFZWSxJQUFJO1NBQUMsR0FDMUMsR0FDQTtRQUVGSixXQUFXSyxXQUFXLENBQUNKO1FBQ3ZCLE9BQU9QLEtBQUtZLFNBQVMsQ0FBQ0MsWUFBWTtJQUNwQztJQUVBQSxlQUFlO1FBQ2IsaUVBQWlFO1FBQ2pFLElBQUksSUFBSSxDQUFDVixRQUFRLEVBQUU7WUFDakJXLFFBQVFDLFFBQVEsQ0FBQyxJQUFJLENBQUNaLFFBQVEsQ0FBQ2EsSUFBSSxDQUFDLElBQUk7UUFDMUM7UUFDQSxPQUFPO0lBQ1Q7QUFDRjtBQUVBQyxPQUFPQyxPQUFPLEdBQUdsQiIsInNvdXJjZXMiOlsid2VicGFjazovL2FjZWUtcHJvdG8tb25lLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29tbWFuZHMvcGluZy5qcz84NGUxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgQ29tbWFuZCA9IHJlcXVpcmUoJy4vY29tbWFuZCcpO1xuY29uc3QgQ29tbWFuZENvZGUgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvY29tbWFuZHMnKTtcbmNvbnN0IFBhY2tldCA9IHJlcXVpcmUoJy4uL3BhY2tldHMvcGFja2V0Jyk7XG5cbi8vIFRPRE86IHRpbWUgc3RhdGlzdGljcz9cbi8vIHVzZWZ1bGwgZm9yIHF1ZXVlIHNpemUgYW5kIG5ldHdvcmsgbGF0ZW5jeSBtb25pdG9yaW5nXG4vLyBzdG9yZSBjcmVhdGVkLHNlbnQscmVwbHkgdGltZXN0YW1wc1xuY2xhc3MgUGluZyBleHRlbmRzIENvbW1hbmQge1xuICBjb25zdHJ1Y3RvcihjYWxsYmFjaykge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5vblJlc3VsdCA9IGNhbGxiYWNrO1xuICB9XG5cbiAgc3RhcnQocGFja2V0LCBjb25uZWN0aW9uKSB7XG4gICAgY29uc3QgcGluZyA9IG5ldyBQYWNrZXQoXG4gICAgICAwLFxuICAgICAgQnVmZmVyLmZyb20oWzEsIDAsIDAsIDAsIENvbW1hbmRDb2RlLlBJTkddKSxcbiAgICAgIDAsXG4gICAgICA1XG4gICAgKTtcbiAgICBjb25uZWN0aW9uLndyaXRlUGFja2V0KHBpbmcpO1xuICAgIHJldHVybiBQaW5nLnByb3RvdHlwZS5waW5nUmVzcG9uc2U7XG4gIH1cblxuICBwaW5nUmVzcG9uc2UoKSB7XG4gICAgLy8gVE9ETzogY2hlY2sgaXQncyBPSyBwYWNrZXQuIGVycm9yIGNoZWNrIGFscmVhZHkgZG9uZSBpbiBjYWxsZXJcbiAgICBpZiAodGhpcy5vblJlc3VsdCkge1xuICAgICAgcHJvY2Vzcy5uZXh0VGljayh0aGlzLm9uUmVzdWx0LmJpbmQodGhpcykpO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFBpbmc7XG4iXSwibmFtZXMiOlsiQ29tbWFuZCIsInJlcXVpcmUiLCJDb21tYW5kQ29kZSIsIlBhY2tldCIsIlBpbmciLCJjb25zdHJ1Y3RvciIsImNhbGxiYWNrIiwib25SZXN1bHQiLCJzdGFydCIsInBhY2tldCIsImNvbm5lY3Rpb24iLCJwaW5nIiwiQnVmZmVyIiwiZnJvbSIsIlBJTkciLCJ3cml0ZVBhY2tldCIsInByb3RvdHlwZSIsInBpbmdSZXNwb25zZSIsInByb2Nlc3MiLCJuZXh0VGljayIsImJpbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/ping.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/prepare.js":
/*!*****************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/prepare.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\nconst Command = __webpack_require__(/*! ./command.js */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst CloseStatement = __webpack_require__(/*! ./close_statement.js */ \"(rsc)/./node_modules/mysql2/lib/commands/close_statement.js\");\nconst Execute = __webpack_require__(/*! ./execute.js */ \"(rsc)/./node_modules/mysql2/lib/commands/execute.js\");\nclass PreparedStatementInfo {\n    constructor(query, id, columns, parameters, connection){\n        this.query = query;\n        this.id = id;\n        this.columns = columns;\n        this.parameters = parameters;\n        this.rowParser = null;\n        this._connection = connection;\n    }\n    close() {\n        return this._connection.addCommand(new CloseStatement(this.id));\n    }\n    execute(parameters, callback) {\n        if (typeof parameters === \"function\") {\n            callback = parameters;\n            parameters = [];\n        }\n        return this._connection.addCommand(new Execute({\n            statement: this,\n            values: parameters\n        }, callback));\n    }\n}\nclass Prepare extends Command {\n    constructor(options, callback){\n        super();\n        this.query = options.sql;\n        this.onResult = callback;\n        this.id = 0;\n        this.fieldCount = 0;\n        this.parameterCount = 0;\n        this.fields = [];\n        this.parameterDefinitions = [];\n        this.options = options;\n    }\n    start(packet, connection) {\n        const Connection = connection.constructor;\n        this.key = Connection.statementKey(this.options);\n        const statement = connection._statements.get(this.key);\n        if (statement) {\n            if (this.onResult) {\n                this.onResult(null, statement);\n            }\n            return null;\n        }\n        const cmdPacket = new Packets.PrepareStatement(this.query, connection.config.charsetNumber, this.options.values);\n        connection.writePacket(cmdPacket.toPacket(1));\n        return Prepare.prototype.prepareHeader;\n    }\n    prepareHeader(packet, connection) {\n        const header = new Packets.PreparedStatementHeader(packet);\n        this.id = header.id;\n        this.fieldCount = header.fieldCount;\n        this.parameterCount = header.parameterCount;\n        if (this.parameterCount > 0) {\n            return Prepare.prototype.readParameter;\n        }\n        if (this.fieldCount > 0) {\n            return Prepare.prototype.readField;\n        }\n        return this.prepareDone(connection);\n    }\n    readParameter(packet, connection) {\n        // there might be scenarios when mysql server reports more parameters than\n        // are actually present in the array of parameter definitions.\n        // if EOF packet is received we switch to \"read fields\" state if there are\n        // any fields reported by the server, otherwise we finish the command.\n        if (packet.isEOF()) {\n            if (this.fieldCount > 0) {\n                return Prepare.prototype.readField;\n            }\n            return this.prepareDone(connection);\n        }\n        const def = new Packets.ColumnDefinition(packet, connection.clientEncoding);\n        this.parameterDefinitions.push(def);\n        if (this.parameterDefinitions.length === this.parameterCount) {\n            return Prepare.prototype.parametersEOF;\n        }\n        return this.readParameter;\n    }\n    readField(packet, connection) {\n        if (packet.isEOF()) {\n            return this.prepareDone(connection);\n        }\n        const def = new Packets.ColumnDefinition(packet, connection.clientEncoding);\n        this.fields.push(def);\n        if (this.fields.length === this.fieldCount) {\n            return Prepare.prototype.fieldsEOF;\n        }\n        return Prepare.prototype.readField;\n    }\n    parametersEOF(packet, connection) {\n        if (!packet.isEOF()) {\n            return connection.protocolError(\"Expected EOF packet after parameters\");\n        }\n        if (this.fieldCount > 0) {\n            return Prepare.prototype.readField;\n        }\n        return this.prepareDone(connection);\n    }\n    fieldsEOF(packet, connection) {\n        if (!packet.isEOF()) {\n            return connection.protocolError(\"Expected EOF packet after fields\");\n        }\n        return this.prepareDone(connection);\n    }\n    prepareDone(connection) {\n        const statement = new PreparedStatementInfo(this.query, this.id, this.fields, this.parameterDefinitions, connection);\n        connection._statements.set(this.key, statement);\n        if (this.onResult) {\n            this.onResult(null, statement);\n        }\n        return null;\n    }\n}\nmodule.exports = Prepare;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/prepare.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/query.js":
/*!***************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/query.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst process = __webpack_require__(/*! process */ \"process\");\nconst Timers = __webpack_require__(/*! timers */ \"timers\");\nconst Readable = (__webpack_require__(/*! stream */ \"stream\").Readable);\nconst Command = __webpack_require__(/*! ./command.js */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\nconst getTextParser = __webpack_require__(/*! ../parsers/text_parser.js */ \"(rsc)/./node_modules/mysql2/lib/parsers/text_parser.js\");\nconst ServerStatus = __webpack_require__(/*! ../constants/server_status.js */ \"(rsc)/./node_modules/mysql2/lib/constants/server_status.js\");\nconst EmptyPacket = new Packets.Packet(0, Buffer.allocUnsafe(4), 0, 4);\n// http://dev.mysql.com/doc/internals/en/com-query.html\nclass Query extends Command {\n    constructor(options, callback){\n        super();\n        this.sql = options.sql;\n        this.values = options.values;\n        this._queryOptions = options;\n        this.namedPlaceholders = options.namedPlaceholders || false;\n        this.onResult = callback;\n        this.timeout = options.timeout;\n        this.queryTimeout = null;\n        this._fieldCount = 0;\n        this._rowParser = null;\n        this._fields = [];\n        this._rows = [];\n        this._receivedFieldsCount = 0;\n        this._resultIndex = 0;\n        this._localStream = null;\n        this._unpipeStream = function() {};\n        this._streamFactory = options.infileStreamFactory;\n        this._connection = null;\n    }\n    then() {\n        const err = \"You have tried to call .then(), .catch(), or invoked await on the result of query that is not a promise, which is a programming error. Try calling con.promise().query(), or require('mysql2/promise') instead of 'mysql2' for a promise-compatible version of the query interface. To learn how to use async/await or Promises check out documentation at https://sidorares.github.io/node-mysql2/docs#using-promise-wrapper, or the mysql2 documentation at https://sidorares.github.io/node-mysql2/docs/documentation/promise-wrapper\";\n        // eslint-disable-next-line\n        console.log(err);\n        throw new Error(err);\n    }\n    /* eslint no-unused-vars: [\"error\", { \"argsIgnorePattern\": \"^_\" }] */ start(_packet, connection) {\n        if (connection.config.debug) {\n            // eslint-disable-next-line\n            console.log(\"        Sending query command: %s\", this.sql);\n        }\n        this._connection = connection;\n        this.options = Object.assign({}, connection.config, this._queryOptions);\n        this._setTimeout();\n        const cmdPacket = new Packets.Query(this.sql, connection.config.charsetNumber);\n        connection.writePacket(cmdPacket.toPacket(1));\n        return Query.prototype.resultsetHeader;\n    }\n    done() {\n        this._unpipeStream();\n        // if all ready timeout, return null directly\n        if (this.timeout && !this.queryTimeout) {\n            return null;\n        }\n        // else clear timer\n        if (this.queryTimeout) {\n            Timers.clearTimeout(this.queryTimeout);\n            this.queryTimeout = null;\n        }\n        if (this.onResult) {\n            let rows, fields;\n            if (this._resultIndex === 0) {\n                rows = this._rows[0];\n                fields = this._fields[0];\n            } else {\n                rows = this._rows;\n                fields = this._fields;\n            }\n            if (fields) {\n                process.nextTick(()=>{\n                    this.onResult(null, rows, fields);\n                });\n            } else {\n                process.nextTick(()=>{\n                    this.onResult(null, rows);\n                });\n            }\n        }\n        return null;\n    }\n    doneInsert(rs) {\n        if (this._localStreamError) {\n            if (this.onResult) {\n                this.onResult(this._localStreamError, rs);\n            } else {\n                this.emit(\"error\", this._localStreamError);\n            }\n            return null;\n        }\n        this._rows.push(rs);\n        this._fields.push(void 0);\n        this.emit(\"fields\", void 0);\n        this.emit(\"result\", rs);\n        if (rs.serverStatus & ServerStatus.SERVER_MORE_RESULTS_EXISTS) {\n            this._resultIndex++;\n            return this.resultsetHeader;\n        }\n        return this.done();\n    }\n    resultsetHeader(packet, connection) {\n        const rs = new Packets.ResultSetHeader(packet, connection);\n        this._fieldCount = rs.fieldCount;\n        if (connection.config.debug) {\n            // eslint-disable-next-line\n            console.log(`        Resultset header received, expecting ${rs.fieldCount} column definition packets`);\n        }\n        if (this._fieldCount === 0) {\n            return this.doneInsert(rs);\n        }\n        if (this._fieldCount === null) {\n            return this._streamLocalInfile(connection, rs.infileName);\n        }\n        this._receivedFieldsCount = 0;\n        this._rows.push([]);\n        this._fields.push([]);\n        return this.readField;\n    }\n    _streamLocalInfile(connection, path) {\n        if (this._streamFactory) {\n            this._localStream = this._streamFactory(path);\n        } else {\n            this._localStreamError = new Error(`As a result of LOCAL INFILE command server wants to read ${path} file, but as of v2.0 you must provide streamFactory option returning ReadStream.`);\n            connection.writePacket(EmptyPacket);\n            return this.infileOk;\n        }\n        const onConnectionError = ()=>{\n            this._unpipeStream();\n        };\n        const onDrain = ()=>{\n            this._localStream.resume();\n        };\n        const onPause = ()=>{\n            this._localStream.pause();\n        };\n        const onData = function(data) {\n            const dataWithHeader = Buffer.allocUnsafe(data.length + 4);\n            data.copy(dataWithHeader, 4);\n            connection.writePacket(new Packets.Packet(0, dataWithHeader, 0, dataWithHeader.length));\n        };\n        const onEnd = ()=>{\n            connection.removeListener(\"error\", onConnectionError);\n            connection.writePacket(EmptyPacket);\n        };\n        const onError = (err)=>{\n            this._localStreamError = err;\n            connection.removeListener(\"error\", onConnectionError);\n            connection.writePacket(EmptyPacket);\n        };\n        this._unpipeStream = ()=>{\n            connection.stream.removeListener(\"pause\", onPause);\n            connection.stream.removeListener(\"drain\", onDrain);\n            this._localStream.removeListener(\"data\", onData);\n            this._localStream.removeListener(\"end\", onEnd);\n            this._localStream.removeListener(\"error\", onError);\n        };\n        connection.stream.on(\"pause\", onPause);\n        connection.stream.on(\"drain\", onDrain);\n        this._localStream.on(\"data\", onData);\n        this._localStream.on(\"end\", onEnd);\n        this._localStream.on(\"error\", onError);\n        connection.once(\"error\", onConnectionError);\n        return this.infileOk;\n    }\n    readField(packet, connection) {\n        this._receivedFieldsCount++;\n        // Often there is much more data in the column definition than in the row itself\n        // If you set manually _fields[0] to array of ColumnDefinition's (from previous call)\n        // you can 'cache' result of parsing. Field packets still received, but ignored in that case\n        // this is the reason _receivedFieldsCount exist (otherwise we could just use current length of fields array)\n        if (this._fields[this._resultIndex].length !== this._fieldCount) {\n            const field = new Packets.ColumnDefinition(packet, connection.clientEncoding);\n            this._fields[this._resultIndex].push(field);\n            if (connection.config.debug) {\n                /* eslint-disable no-console */ console.log(\"        Column definition:\");\n                console.log(`          name: ${field.name}`);\n                console.log(`          type: ${field.columnType}`);\n                console.log(`         flags: ${field.flags}`);\n            /* eslint-enable no-console */ }\n        }\n        // last field received\n        if (this._receivedFieldsCount === this._fieldCount) {\n            const fields = this._fields[this._resultIndex];\n            this.emit(\"fields\", fields);\n            this._rowParser = new (getTextParser(fields, this.options, connection.config))(fields);\n            return Query.prototype.fieldsEOF;\n        }\n        return Query.prototype.readField;\n    }\n    fieldsEOF(packet, connection) {\n        // check EOF\n        if (!packet.isEOF()) {\n            return connection.protocolError(\"Expected EOF packet\");\n        }\n        return this.row;\n    }\n    /* eslint no-unused-vars: [\"error\", { \"argsIgnorePattern\": \"^_\" }] */ row(packet, _connection) {\n        if (packet.isEOF()) {\n            const status = packet.eofStatusFlags();\n            const moreResults = status & ServerStatus.SERVER_MORE_RESULTS_EXISTS;\n            if (moreResults) {\n                this._resultIndex++;\n                return Query.prototype.resultsetHeader;\n            }\n            return this.done();\n        }\n        let row;\n        try {\n            row = this._rowParser.next(packet, this._fields[this._resultIndex], this.options);\n        } catch (err) {\n            this._localStreamError = err;\n            return this.doneInsert(null);\n        }\n        if (this.onResult) {\n            this._rows[this._resultIndex].push(row);\n        } else {\n            this.emit(\"result\", row);\n        }\n        return Query.prototype.row;\n    }\n    infileOk(packet, connection) {\n        const rs = new Packets.ResultSetHeader(packet, connection);\n        return this.doneInsert(rs);\n    }\n    stream(options) {\n        options = options || {};\n        options.objectMode = true;\n        const stream = new Readable(options);\n        stream._read = ()=>{\n            this._connection && this._connection.resume();\n        };\n        this.on(\"result\", (row)=>{\n            if (!stream.push(row)) {\n                this._connection.pause();\n            }\n            stream.emit(\"result\", row); // replicate old emitter\n        });\n        this.on(\"error\", (err)=>{\n            stream.emit(\"error\", err); // Pass on any errors\n        });\n        this.on(\"end\", ()=>{\n            stream.push(null); // pushing null, indicating EOF\n            stream.emit(\"close\"); // notify readers that query has completed\n        });\n        this.on(\"fields\", (fields)=>{\n            stream.emit(\"fields\", fields); // replicate old emitter\n        });\n        return stream;\n    }\n    _setTimeout() {\n        if (this.timeout) {\n            const timeoutHandler = this._handleTimeoutError.bind(this);\n            this.queryTimeout = Timers.setTimeout(timeoutHandler, this.timeout);\n        }\n    }\n    _handleTimeoutError() {\n        if (this.queryTimeout) {\n            Timers.clearTimeout(this.queryTimeout);\n            this.queryTimeout = null;\n        }\n        const err = new Error(\"Query inactivity timeout\");\n        err.errorno = \"PROTOCOL_SEQUENCE_TIMEOUT\";\n        err.code = \"PROTOCOL_SEQUENCE_TIMEOUT\";\n        err.syscall = \"query\";\n        if (this.onResult) {\n            this.onResult(err);\n        } else {\n            this.emit(\"error\", err);\n        }\n    }\n}\nQuery.prototype.catch = Query.prototype.then;\nmodule.exports = Query;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/query.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/quit.js":
/*!**************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/quit.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Command = __webpack_require__(/*! ./command.js */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst CommandCode = __webpack_require__(/*! ../constants/commands.js */ \"(rsc)/./node_modules/mysql2/lib/constants/commands.js\");\nconst Packet = __webpack_require__(/*! ../packets/packet.js */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nclass Quit extends Command {\n    constructor(callback){\n        super();\n        this.onResult = callback;\n    }\n    start(packet, connection) {\n        connection._closing = true;\n        const quit = new Packet(0, Buffer.from([\n            1,\n            0,\n            0,\n            0,\n            CommandCode.QUIT\n        ]), 0, 5);\n        if (this.onResult) {\n            this.onResult();\n        }\n        connection.writePacket(quit);\n        return null;\n    }\n}\nmodule.exports = Quit;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9xdWl0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsVUFBVUMsbUJBQU9BLENBQUM7QUFDeEIsTUFBTUMsY0FBY0QsbUJBQU9BLENBQUM7QUFDNUIsTUFBTUUsU0FBU0YsbUJBQU9BLENBQUM7QUFFdkIsTUFBTUcsYUFBYUo7SUFDakJLLFlBQVlDLFFBQVEsQ0FBRTtRQUNwQixLQUFLO1FBQ0wsSUFBSSxDQUFDQyxRQUFRLEdBQUdEO0lBQ2xCO0lBRUFFLE1BQU1DLE1BQU0sRUFBRUMsVUFBVSxFQUFFO1FBQ3hCQSxXQUFXQyxRQUFRLEdBQUc7UUFDdEIsTUFBTUMsT0FBTyxJQUFJVCxPQUNmLEdBQ0FVLE9BQU9DLElBQUksQ0FBQztZQUFDO1lBQUc7WUFBRztZQUFHO1lBQUdaLFlBQVlhLElBQUk7U0FBQyxHQUMxQyxHQUNBO1FBRUYsSUFBSSxJQUFJLENBQUNSLFFBQVEsRUFBRTtZQUNqQixJQUFJLENBQUNBLFFBQVE7UUFDZjtRQUNBRyxXQUFXTSxXQUFXLENBQUNKO1FBQ3ZCLE9BQU87SUFDVDtBQUNGO0FBRUFLLE9BQU9DLE9BQU8sR0FBR2QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hY2VlLXByb3RvLW9uZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NvbW1hbmRzL3F1aXQuanM/NjNhZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IENvbW1hbmQgPSByZXF1aXJlKCcuL2NvbW1hbmQuanMnKTtcbmNvbnN0IENvbW1hbmRDb2RlID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL2NvbW1hbmRzLmpzJyk7XG5jb25zdCBQYWNrZXQgPSByZXF1aXJlKCcuLi9wYWNrZXRzL3BhY2tldC5qcycpO1xuXG5jbGFzcyBRdWl0IGV4dGVuZHMgQ29tbWFuZCB7XG4gIGNvbnN0cnVjdG9yKGNhbGxiYWNrKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLm9uUmVzdWx0ID0gY2FsbGJhY2s7XG4gIH1cblxuICBzdGFydChwYWNrZXQsIGNvbm5lY3Rpb24pIHtcbiAgICBjb25uZWN0aW9uLl9jbG9zaW5nID0gdHJ1ZTtcbiAgICBjb25zdCBxdWl0ID0gbmV3IFBhY2tldChcbiAgICAgIDAsXG4gICAgICBCdWZmZXIuZnJvbShbMSwgMCwgMCwgMCwgQ29tbWFuZENvZGUuUVVJVF0pLFxuICAgICAgMCxcbiAgICAgIDVcbiAgICApO1xuICAgIGlmICh0aGlzLm9uUmVzdWx0KSB7XG4gICAgICB0aGlzLm9uUmVzdWx0KCk7XG4gICAgfVxuICAgIGNvbm5lY3Rpb24ud3JpdGVQYWNrZXQocXVpdCk7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBRdWl0O1xuIl0sIm5hbWVzIjpbIkNvbW1hbmQiLCJyZXF1aXJlIiwiQ29tbWFuZENvZGUiLCJQYWNrZXQiLCJRdWl0IiwiY29uc3RydWN0b3IiLCJjYWxsYmFjayIsIm9uUmVzdWx0Iiwic3RhcnQiLCJwYWNrZXQiLCJjb25uZWN0aW9uIiwiX2Nsb3NpbmciLCJxdWl0IiwiQnVmZmVyIiwiZnJvbSIsIlFVSVQiLCJ3cml0ZVBhY2tldCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/quit.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/register_slave.js":
/*!************************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/register_slave.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Command = __webpack_require__(/*! ./command */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst Packets = __webpack_require__(/*! ../packets */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\nclass RegisterSlave extends Command {\n    constructor(opts, callback){\n        super();\n        this.onResult = callback;\n        this.opts = opts;\n    }\n    start(packet, connection) {\n        const newPacket = new Packets.RegisterSlave(this.opts);\n        connection.writePacket(newPacket.toPacket(1));\n        return RegisterSlave.prototype.registerResponse;\n    }\n    registerResponse() {\n        if (this.onResult) {\n            process.nextTick(this.onResult.bind(this));\n        }\n        return null;\n    }\n}\nmodule.exports = RegisterSlave;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9yZWdpc3Rlcl9zbGF2ZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU1BLFVBQVVDLG1CQUFPQSxDQUFDO0FBQ3hCLE1BQU1DLFVBQVVELG1CQUFPQSxDQUFDO0FBRXhCLE1BQU1FLHNCQUFzQkg7SUFDMUJJLFlBQVlDLElBQUksRUFBRUMsUUFBUSxDQUFFO1FBQzFCLEtBQUs7UUFDTCxJQUFJLENBQUNDLFFBQVEsR0FBR0Q7UUFDaEIsSUFBSSxDQUFDRCxJQUFJLEdBQUdBO0lBQ2Q7SUFFQUcsTUFBTUMsTUFBTSxFQUFFQyxVQUFVLEVBQUU7UUFDeEIsTUFBTUMsWUFBWSxJQUFJVCxRQUFRQyxhQUFhLENBQUMsSUFBSSxDQUFDRSxJQUFJO1FBQ3JESyxXQUFXRSxXQUFXLENBQUNELFVBQVVFLFFBQVEsQ0FBQztRQUMxQyxPQUFPVixjQUFjVyxTQUFTLENBQUNDLGdCQUFnQjtJQUNqRDtJQUVBQSxtQkFBbUI7UUFDakIsSUFBSSxJQUFJLENBQUNSLFFBQVEsRUFBRTtZQUNqQlMsUUFBUUMsUUFBUSxDQUFDLElBQUksQ0FBQ1YsUUFBUSxDQUFDVyxJQUFJLENBQUMsSUFBSTtRQUMxQztRQUNBLE9BQU87SUFDVDtBQUNGO0FBRUFDLE9BQU9DLE9BQU8sR0FBR2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWNlZS1wcm90by1vbmUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9yZWdpc3Rlcl9zbGF2ZS5qcz8zNjU0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgQ29tbWFuZCA9IHJlcXVpcmUoJy4vY29tbWFuZCcpO1xuY29uc3QgUGFja2V0cyA9IHJlcXVpcmUoJy4uL3BhY2tldHMnKTtcblxuY2xhc3MgUmVnaXN0ZXJTbGF2ZSBleHRlbmRzIENvbW1hbmQge1xuICBjb25zdHJ1Y3RvcihvcHRzLCBjYWxsYmFjaykge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5vblJlc3VsdCA9IGNhbGxiYWNrO1xuICAgIHRoaXMub3B0cyA9IG9wdHM7XG4gIH1cblxuICBzdGFydChwYWNrZXQsIGNvbm5lY3Rpb24pIHtcbiAgICBjb25zdCBuZXdQYWNrZXQgPSBuZXcgUGFja2V0cy5SZWdpc3RlclNsYXZlKHRoaXMub3B0cyk7XG4gICAgY29ubmVjdGlvbi53cml0ZVBhY2tldChuZXdQYWNrZXQudG9QYWNrZXQoMSkpO1xuICAgIHJldHVybiBSZWdpc3RlclNsYXZlLnByb3RvdHlwZS5yZWdpc3RlclJlc3BvbnNlO1xuICB9XG5cbiAgcmVnaXN0ZXJSZXNwb25zZSgpIHtcbiAgICBpZiAodGhpcy5vblJlc3VsdCkge1xuICAgICAgcHJvY2Vzcy5uZXh0VGljayh0aGlzLm9uUmVzdWx0LmJpbmQodGhpcykpO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFJlZ2lzdGVyU2xhdmU7XG4iXSwibmFtZXMiOlsiQ29tbWFuZCIsInJlcXVpcmUiLCJQYWNrZXRzIiwiUmVnaXN0ZXJTbGF2ZSIsImNvbnN0cnVjdG9yIiwib3B0cyIsImNhbGxiYWNrIiwib25SZXN1bHQiLCJzdGFydCIsInBhY2tldCIsImNvbm5lY3Rpb24iLCJuZXdQYWNrZXQiLCJ3cml0ZVBhY2tldCIsInRvUGFja2V0IiwicHJvdG90eXBlIiwicmVnaXN0ZXJSZXNwb25zZSIsInByb2Nlc3MiLCJuZXh0VGljayIsImJpbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/register_slave.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/server_handshake.js":
/*!**************************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/server_handshake.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst CommandCode = __webpack_require__(/*! ../constants/commands.js */ \"(rsc)/./node_modules/mysql2/lib/constants/commands.js\");\nconst Errors = __webpack_require__(/*! ../constants/errors.js */ \"(rsc)/./node_modules/mysql2/lib/constants/errors.js\");\nconst Command = __webpack_require__(/*! ./command.js */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\nclass ServerHandshake extends Command {\n    constructor(args){\n        super();\n        this.args = args;\n    /*\n    this.protocolVersion = args.protocolVersion || 10;\n    this.serverVersion   = args.serverVersion;\n    this.connectionId    = args.connectionId,\n    this.statusFlags     = args.statusFlags,\n    this.characterSet    = args.characterSet,\n    this.capabilityFlags = args.capabilityFlags || 512;\n    */ }\n    start(packet, connection) {\n        const serverHelloPacket = new Packets.Handshake(this.args);\n        this.serverHello = serverHelloPacket;\n        serverHelloPacket.setScrambleData((err)=>{\n            if (err) {\n                connection.emit(\"error\", new Error(\"Error generating random bytes\"));\n                return;\n            }\n            connection.writePacket(serverHelloPacket.toPacket(0));\n        });\n        return ServerHandshake.prototype.readClientReply;\n    }\n    readClientReply(packet, connection) {\n        // check auth here\n        const clientHelloReply = Packets.HandshakeResponse.fromPacket(packet);\n        // TODO check we don't have something similar already\n        connection.clientHelloReply = clientHelloReply;\n        if (this.args.authCallback) {\n            this.args.authCallback({\n                user: clientHelloReply.user,\n                database: clientHelloReply.database,\n                address: connection.stream.remoteAddress,\n                authPluginData1: this.serverHello.authPluginData1,\n                authPluginData2: this.serverHello.authPluginData2,\n                authToken: clientHelloReply.authToken\n            }, (err, mysqlError)=>{\n                // if (err)\n                if (!mysqlError) {\n                    connection.writeOk();\n                } else {\n                    // TODO create constants / errorToCode\n                    // 1045 = ER_ACCESS_DENIED_ERROR\n                    connection.writeError({\n                        message: mysqlError.message || \"\",\n                        code: mysqlError.code || 1045\n                    });\n                    connection.close();\n                }\n            });\n        } else {\n            connection.writeOk();\n        }\n        return ServerHandshake.prototype.dispatchCommands;\n    }\n    _isStatement(query, name) {\n        const firstWord = query.split(\" \")[0].toUpperCase();\n        return firstWord === name;\n    }\n    dispatchCommands(packet, connection) {\n        // command from client to server\n        let knownCommand = true;\n        const encoding = connection.clientHelloReply.encoding;\n        const commandCode = packet.readInt8();\n        switch(commandCode){\n            case CommandCode.STMT_PREPARE:\n                if (connection.listeners(\"stmt_prepare\").length) {\n                    const query = packet.readString(undefined, encoding);\n                    connection.emit(\"stmt_prepare\", query);\n                } else {\n                    connection.writeError({\n                        code: Errors.HA_ERR_INTERNAL_ERROR,\n                        message: \"No query handler for prepared statements.\"\n                    });\n                }\n                break;\n            case CommandCode.STMT_EXECUTE:\n                if (connection.listeners(\"stmt_execute\").length) {\n                    const { stmtId, flags, iterationCount, values } = Packets.Execute.fromPacket(packet, encoding);\n                    connection.emit(\"stmt_execute\", stmtId, flags, iterationCount, values);\n                } else {\n                    connection.writeError({\n                        code: Errors.HA_ERR_INTERNAL_ERROR,\n                        message: \"No query handler for execute statements.\"\n                    });\n                }\n                break;\n            case CommandCode.QUIT:\n                if (connection.listeners(\"quit\").length) {\n                    connection.emit(\"quit\");\n                } else {\n                    connection.stream.end();\n                }\n                break;\n            case CommandCode.INIT_DB:\n                if (connection.listeners(\"init_db\").length) {\n                    const schemaName = packet.readString(undefined, encoding);\n                    connection.emit(\"init_db\", schemaName);\n                } else {\n                    connection.writeOk();\n                }\n                break;\n            case CommandCode.QUERY:\n                if (connection.listeners(\"query\").length) {\n                    const query = packet.readString(undefined, encoding);\n                    if (this._isStatement(query, \"PREPARE\") || this._isStatement(query, \"SET\")) {\n                        connection.emit(\"stmt_prepare\", query);\n                    } else if (this._isStatement(query, \"EXECUTE\")) {\n                        connection.emit(\"stmt_execute\", null, null, null, null, query);\n                    } else connection.emit(\"query\", query);\n                } else {\n                    connection.writeError({\n                        code: Errors.HA_ERR_INTERNAL_ERROR,\n                        message: \"No query handler\"\n                    });\n                }\n                break;\n            case CommandCode.FIELD_LIST:\n                if (connection.listeners(\"field_list\").length) {\n                    const table = packet.readNullTerminatedString(encoding);\n                    const fields = packet.readString(undefined, encoding);\n                    connection.emit(\"field_list\", table, fields);\n                } else {\n                    connection.writeError({\n                        code: Errors.ER_WARN_DEPRECATED_SYNTAX,\n                        message: \"As of MySQL 5.7.11, COM_FIELD_LIST is deprecated and will be removed in a future version of MySQL.\"\n                    });\n                }\n                break;\n            case CommandCode.PING:\n                if (connection.listeners(\"ping\").length) {\n                    connection.emit(\"ping\");\n                } else {\n                    connection.writeOk();\n                }\n                break;\n            default:\n                knownCommand = false;\n        }\n        if (connection.listeners(\"packet\").length) {\n            connection.emit(\"packet\", packet.clone(), knownCommand, commandCode);\n        } else if (!knownCommand) {\n            // eslint-disable-next-line no-console\n            console.log(\"Unknown command:\", commandCode);\n        }\n        return ServerHandshake.prototype.dispatchCommands;\n    }\n}\nmodule.exports = ServerHandshake; // TODO: implement server-side 4.1 authentication\n /*\n4.1 authentication: (http://bazaar.launchpad.net/~mysql/mysql-server/5.5/view/head:/sql/password.c)\n\n  SERVER:  public_seed=create_random_string()\n           send(public_seed)\n\n  CLIENT:  recv(public_seed)\n           hash_stage1=sha1(\"password\")\n           hash_stage2=sha1(hash_stage1)\n           reply=xor(hash_stage1, sha1(public_seed,hash_stage2)\n\n           // this three steps are done in scramble()\n\n           send(reply)\n\n\n  SERVER:  recv(reply)\n           hash_stage1=xor(reply, sha1(public_seed,hash_stage2))\n           candidate_hash2=sha1(hash_stage1)\n           check(candidate_hash2==hash_stage2)\n\nserver stores sha1(sha1(password)) ( hash_stag2)\n*/ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/server_handshake.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/compressed_protocol.js":
/*!********************************************************!*\
  !*** ./node_modules/mysql2/lib/compressed_protocol.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// connection mixins\n// implementation of http://dev.mysql.com/doc/internals/en/compression.html\nconst zlib = __webpack_require__(/*! zlib */ \"zlib\");\nconst PacketParser = __webpack_require__(/*! ./packet_parser.js */ \"(rsc)/./node_modules/mysql2/lib/packet_parser.js\");\nfunction handleCompressedPacket(packet) {\n    // eslint-disable-next-line consistent-this, no-invalid-this\n    const connection = this;\n    const deflatedLength = packet.readInt24();\n    const body = packet.readBuffer();\n    if (deflatedLength !== 0) {\n        connection.inflateQueue.push((task)=>{\n            zlib.inflate(body, (err, data)=>{\n                if (err) {\n                    connection._handleNetworkError(err);\n                    return;\n                }\n                connection._bumpCompressedSequenceId(packet.numPackets);\n                connection._inflatedPacketsParser.execute(data);\n                task.done();\n            });\n        });\n    } else {\n        connection.inflateQueue.push((task)=>{\n            connection._bumpCompressedSequenceId(packet.numPackets);\n            connection._inflatedPacketsParser.execute(body);\n            task.done();\n        });\n    }\n}\nfunction writeCompressed(buffer) {\n    // http://dev.mysql.com/doc/internals/en/example-several-mysql-packets.html\n    // note: sending a MySQL Packet of the size 2^24−5 to 2^24−1 via compression\n    // leads to at least one extra compressed packet.\n    // (this is because \"length of the packet before compression\" need to fit\n    // into 3 byte unsigned int. \"length of the packet before compression\" includes\n    // 4 byte packet header, hence 2^24−5)\n    const MAX_COMPRESSED_LENGTH = 16777210;\n    let start;\n    if (buffer.length > MAX_COMPRESSED_LENGTH) {\n        for(start = 0; start < buffer.length; start += MAX_COMPRESSED_LENGTH){\n            writeCompressed.call(// eslint-disable-next-line no-invalid-this\n            this, buffer.slice(start, start + MAX_COMPRESSED_LENGTH));\n        }\n        return;\n    }\n    // eslint-disable-next-line no-invalid-this, consistent-this\n    const connection = this;\n    let packetLen = buffer.length;\n    const compressHeader = Buffer.allocUnsafe(7);\n    // seqqueue is used here because zlib async execution is routed via thread pool\n    // internally and when we have multiple compressed packets arriving we need\n    // to assemble uncompressed result sequentially\n    (function(seqId) {\n        connection.deflateQueue.push((task)=>{\n            zlib.deflate(buffer, (err, compressed)=>{\n                if (err) {\n                    connection._handleFatalError(err);\n                    return;\n                }\n                let compressedLength = compressed.length;\n                if (compressedLength < packetLen) {\n                    compressHeader.writeUInt8(compressedLength & 0xff, 0);\n                    compressHeader.writeUInt16LE(compressedLength >> 8, 1);\n                    compressHeader.writeUInt8(seqId, 3);\n                    compressHeader.writeUInt8(packetLen & 0xff, 4);\n                    compressHeader.writeUInt16LE(packetLen >> 8, 5);\n                    connection.writeUncompressed(compressHeader);\n                    connection.writeUncompressed(compressed);\n                } else {\n                    // http://dev.mysql.com/doc/internals/en/uncompressed-payload.html\n                    // To send an uncompressed payload:\n                    //   - set length of payload before compression to 0\n                    //   - the compressed payload contains the uncompressed payload instead.\n                    compressedLength = packetLen;\n                    packetLen = 0;\n                    compressHeader.writeUInt8(compressedLength & 0xff, 0);\n                    compressHeader.writeUInt16LE(compressedLength >> 8, 1);\n                    compressHeader.writeUInt8(seqId, 3);\n                    compressHeader.writeUInt8(packetLen & 0xff, 4);\n                    compressHeader.writeUInt16LE(packetLen >> 8, 5);\n                    connection.writeUncompressed(compressHeader);\n                    connection.writeUncompressed(buffer);\n                }\n                task.done();\n            });\n        });\n    })(connection.compressedSequenceId);\n    connection._bumpCompressedSequenceId(1);\n}\nfunction enableCompression(connection) {\n    connection._lastWrittenPacketId = 0;\n    connection._lastReceivedPacketId = 0;\n    connection._handleCompressedPacket = handleCompressedPacket;\n    connection._inflatedPacketsParser = new PacketParser((p)=>{\n        connection.handlePacket(p);\n    }, 4);\n    connection._inflatedPacketsParser._lastPacket = 0;\n    connection.packetParser = new PacketParser((packet)=>{\n        connection._handleCompressedPacket(packet);\n    }, 7);\n    connection.writeUncompressed = connection.write;\n    connection.write = writeCompressed;\n    const seqqueue = __webpack_require__(/*! seq-queue */ \"(rsc)/./node_modules/seq-queue/index.js\");\n    connection.inflateQueue = seqqueue.createQueue();\n    connection.deflateQueue = seqqueue.createQueue();\n}\nmodule.exports = {\n    enableCompression: enableCompression\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21wcmVzc2VkX3Byb3RvY29sLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsb0JBQW9CO0FBQ3BCLDJFQUEyRTtBQUUzRSxNQUFNQSxPQUFPQyxtQkFBT0EsQ0FBQztBQUNyQixNQUFNQyxlQUFlRCxtQkFBT0EsQ0FBQztBQUU3QixTQUFTRSx1QkFBdUJDLE1BQU07SUFDcEMsNERBQTREO0lBQzVELE1BQU1DLGFBQWEsSUFBSTtJQUN2QixNQUFNQyxpQkFBaUJGLE9BQU9HLFNBQVM7SUFDdkMsTUFBTUMsT0FBT0osT0FBT0ssVUFBVTtJQUU5QixJQUFJSCxtQkFBbUIsR0FBRztRQUN4QkQsV0FBV0ssWUFBWSxDQUFDQyxJQUFJLENBQUNDLENBQUFBO1lBQzNCWixLQUFLYSxPQUFPLENBQUNMLE1BQU0sQ0FBQ00sS0FBS0M7Z0JBQ3ZCLElBQUlELEtBQUs7b0JBQ1BULFdBQVdXLG1CQUFtQixDQUFDRjtvQkFDL0I7Z0JBQ0Y7Z0JBQ0FULFdBQVdZLHlCQUF5QixDQUFDYixPQUFPYyxVQUFVO2dCQUN0RGIsV0FBV2Msc0JBQXNCLENBQUNDLE9BQU8sQ0FBQ0w7Z0JBQzFDSCxLQUFLUyxJQUFJO1lBQ1g7UUFDRjtJQUNGLE9BQU87UUFDTGhCLFdBQVdLLFlBQVksQ0FBQ0MsSUFBSSxDQUFDQyxDQUFBQTtZQUMzQlAsV0FBV1kseUJBQXlCLENBQUNiLE9BQU9jLFVBQVU7WUFDdERiLFdBQVdjLHNCQUFzQixDQUFDQyxPQUFPLENBQUNaO1lBQzFDSSxLQUFLUyxJQUFJO1FBQ1g7SUFDRjtBQUNGO0FBRUEsU0FBU0MsZ0JBQWdCQyxNQUFNO0lBQzdCLDJFQUEyRTtJQUMzRSw0RUFBNEU7SUFDNUUsaURBQWlEO0lBQ2pELHlFQUF5RTtJQUN6RSwrRUFBK0U7SUFDL0Usc0NBQXNDO0lBQ3RDLE1BQU1DLHdCQUF3QjtJQUM5QixJQUFJQztJQUNKLElBQUlGLE9BQU9HLE1BQU0sR0FBR0YsdUJBQXVCO1FBQ3pDLElBQUtDLFFBQVEsR0FBR0EsUUFBUUYsT0FBT0csTUFBTSxFQUFFRCxTQUFTRCxzQkFBdUI7WUFDckVGLGdCQUFnQkssSUFBSSxDQUNsQiwyQ0FBMkM7WUFDM0MsSUFBSSxFQUNKSixPQUFPSyxLQUFLLENBQUNILE9BQU9BLFFBQVFEO1FBRWhDO1FBQ0E7SUFDRjtJQUVBLDREQUE0RDtJQUM1RCxNQUFNbkIsYUFBYSxJQUFJO0lBRXZCLElBQUl3QixZQUFZTixPQUFPRyxNQUFNO0lBQzdCLE1BQU1JLGlCQUFpQkMsT0FBT0MsV0FBVyxDQUFDO0lBRTFDLCtFQUErRTtJQUMvRSwyRUFBMkU7SUFDM0UsK0NBQStDO0lBQzlDLFVBQVNDLEtBQUs7UUFDYjVCLFdBQVc2QixZQUFZLENBQUN2QixJQUFJLENBQUNDLENBQUFBO1lBQzNCWixLQUFLbUMsT0FBTyxDQUFDWixRQUFRLENBQUNULEtBQUtzQjtnQkFDekIsSUFBSXRCLEtBQUs7b0JBQ1BULFdBQVdnQyxpQkFBaUIsQ0FBQ3ZCO29CQUM3QjtnQkFDRjtnQkFDQSxJQUFJd0IsbUJBQW1CRixXQUFXVixNQUFNO2dCQUV4QyxJQUFJWSxtQkFBbUJULFdBQVc7b0JBQ2hDQyxlQUFlUyxVQUFVLENBQUNELG1CQUFtQixNQUFNO29CQUNuRFIsZUFBZVUsYUFBYSxDQUFDRixvQkFBb0IsR0FBRztvQkFDcERSLGVBQWVTLFVBQVUsQ0FBQ04sT0FBTztvQkFDakNILGVBQWVTLFVBQVUsQ0FBQ1YsWUFBWSxNQUFNO29CQUM1Q0MsZUFBZVUsYUFBYSxDQUFDWCxhQUFhLEdBQUc7b0JBQzdDeEIsV0FBV29DLGlCQUFpQixDQUFDWDtvQkFDN0J6QixXQUFXb0MsaUJBQWlCLENBQUNMO2dCQUMvQixPQUFPO29CQUNMLGtFQUFrRTtvQkFDbEUsbUNBQW1DO29CQUNuQyxvREFBb0Q7b0JBQ3BELHdFQUF3RTtvQkFDeEVFLG1CQUFtQlQ7b0JBQ25CQSxZQUFZO29CQUNaQyxlQUFlUyxVQUFVLENBQUNELG1CQUFtQixNQUFNO29CQUNuRFIsZUFBZVUsYUFBYSxDQUFDRixvQkFBb0IsR0FBRztvQkFDcERSLGVBQWVTLFVBQVUsQ0FBQ04sT0FBTztvQkFDakNILGVBQWVTLFVBQVUsQ0FBQ1YsWUFBWSxNQUFNO29CQUM1Q0MsZUFBZVUsYUFBYSxDQUFDWCxhQUFhLEdBQUc7b0JBQzdDeEIsV0FBV29DLGlCQUFpQixDQUFDWDtvQkFDN0J6QixXQUFXb0MsaUJBQWlCLENBQUNsQjtnQkFDL0I7Z0JBQ0FYLEtBQUtTLElBQUk7WUFDWDtRQUNGO0lBQ0YsR0FBR2hCLFdBQVdxQyxvQkFBb0I7SUFDbENyQyxXQUFXWSx5QkFBeUIsQ0FBQztBQUN2QztBQUVBLFNBQVMwQixrQkFBa0J0QyxVQUFVO0lBQ25DQSxXQUFXdUMsb0JBQW9CLEdBQUc7SUFDbEN2QyxXQUFXd0MscUJBQXFCLEdBQUc7SUFFbkN4QyxXQUFXeUMsdUJBQXVCLEdBQUczQztJQUNyQ0UsV0FBV2Msc0JBQXNCLEdBQUcsSUFBSWpCLGFBQWE2QyxDQUFBQTtRQUNuRDFDLFdBQVcyQyxZQUFZLENBQUNEO0lBQzFCLEdBQUc7SUFDSDFDLFdBQVdjLHNCQUFzQixDQUFDOEIsV0FBVyxHQUFHO0lBQ2hENUMsV0FBVzZDLFlBQVksR0FBRyxJQUFJaEQsYUFBYUUsQ0FBQUE7UUFDekNDLFdBQVd5Qyx1QkFBdUIsQ0FBQzFDO0lBQ3JDLEdBQUc7SUFFSEMsV0FBV29DLGlCQUFpQixHQUFHcEMsV0FBVzhDLEtBQUs7SUFDL0M5QyxXQUFXOEMsS0FBSyxHQUFHN0I7SUFFbkIsTUFBTThCLFdBQVduRCxtQkFBT0EsQ0FBQztJQUN6QkksV0FBV0ssWUFBWSxHQUFHMEMsU0FBU0MsV0FBVztJQUM5Q2hELFdBQVc2QixZQUFZLEdBQUdrQixTQUFTQyxXQUFXO0FBQ2hEO0FBRUFDLE9BQU9DLE9BQU8sR0FBRztJQUNmWixtQkFBbUJBO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWNlZS1wcm90by1vbmUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21wcmVzc2VkX3Byb3RvY29sLmpzPzI0YTIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyBjb25uZWN0aW9uIG1peGluc1xuLy8gaW1wbGVtZW50YXRpb24gb2YgaHR0cDovL2Rldi5teXNxbC5jb20vZG9jL2ludGVybmFscy9lbi9jb21wcmVzc2lvbi5odG1sXG5cbmNvbnN0IHpsaWIgPSByZXF1aXJlKCd6bGliJyk7XG5jb25zdCBQYWNrZXRQYXJzZXIgPSByZXF1aXJlKCcuL3BhY2tldF9wYXJzZXIuanMnKTtcblxuZnVuY3Rpb24gaGFuZGxlQ29tcHJlc3NlZFBhY2tldChwYWNrZXQpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtdGhpcywgbm8taW52YWxpZC10aGlzXG4gIGNvbnN0IGNvbm5lY3Rpb24gPSB0aGlzO1xuICBjb25zdCBkZWZsYXRlZExlbmd0aCA9IHBhY2tldC5yZWFkSW50MjQoKTtcbiAgY29uc3QgYm9keSA9IHBhY2tldC5yZWFkQnVmZmVyKCk7XG5cbiAgaWYgKGRlZmxhdGVkTGVuZ3RoICE9PSAwKSB7XG4gICAgY29ubmVjdGlvbi5pbmZsYXRlUXVldWUucHVzaCh0YXNrID0+IHtcbiAgICAgIHpsaWIuaW5mbGF0ZShib2R5LCAoZXJyLCBkYXRhKSA9PiB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICBjb25uZWN0aW9uLl9oYW5kbGVOZXR3b3JrRXJyb3IoZXJyKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29ubmVjdGlvbi5fYnVtcENvbXByZXNzZWRTZXF1ZW5jZUlkKHBhY2tldC5udW1QYWNrZXRzKTtcbiAgICAgICAgY29ubmVjdGlvbi5faW5mbGF0ZWRQYWNrZXRzUGFyc2VyLmV4ZWN1dGUoZGF0YSk7XG4gICAgICAgIHRhc2suZG9uZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgY29ubmVjdGlvbi5pbmZsYXRlUXVldWUucHVzaCh0YXNrID0+IHtcbiAgICAgIGNvbm5lY3Rpb24uX2J1bXBDb21wcmVzc2VkU2VxdWVuY2VJZChwYWNrZXQubnVtUGFja2V0cyk7XG4gICAgICBjb25uZWN0aW9uLl9pbmZsYXRlZFBhY2tldHNQYXJzZXIuZXhlY3V0ZShib2R5KTtcbiAgICAgIHRhc2suZG9uZSgpO1xuICAgIH0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIHdyaXRlQ29tcHJlc3NlZChidWZmZXIpIHtcbiAgLy8gaHR0cDovL2Rldi5teXNxbC5jb20vZG9jL2ludGVybmFscy9lbi9leGFtcGxlLXNldmVyYWwtbXlzcWwtcGFja2V0cy5odG1sXG4gIC8vIG5vdGU6IHNlbmRpbmcgYSBNeVNRTCBQYWNrZXQgb2YgdGhlIHNpemUgMl4yNOKIkjUgdG8gMl4yNOKIkjEgdmlhIGNvbXByZXNzaW9uXG4gIC8vIGxlYWRzIHRvIGF0IGxlYXN0IG9uZSBleHRyYSBjb21wcmVzc2VkIHBhY2tldC5cbiAgLy8gKHRoaXMgaXMgYmVjYXVzZSBcImxlbmd0aCBvZiB0aGUgcGFja2V0IGJlZm9yZSBjb21wcmVzc2lvblwiIG5lZWQgdG8gZml0XG4gIC8vIGludG8gMyBieXRlIHVuc2lnbmVkIGludC4gXCJsZW5ndGggb2YgdGhlIHBhY2tldCBiZWZvcmUgY29tcHJlc3Npb25cIiBpbmNsdWRlc1xuICAvLyA0IGJ5dGUgcGFja2V0IGhlYWRlciwgaGVuY2UgMl4yNOKIkjUpXG4gIGNvbnN0IE1BWF9DT01QUkVTU0VEX0xFTkdUSCA9IDE2Nzc3MjEwO1xuICBsZXQgc3RhcnQ7XG4gIGlmIChidWZmZXIubGVuZ3RoID4gTUFYX0NPTVBSRVNTRURfTEVOR1RIKSB7XG4gICAgZm9yIChzdGFydCA9IDA7IHN0YXJ0IDwgYnVmZmVyLmxlbmd0aDsgc3RhcnQgKz0gTUFYX0NPTVBSRVNTRURfTEVOR1RIKSB7XG4gICAgICB3cml0ZUNvbXByZXNzZWQuY2FsbChcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWludmFsaWQtdGhpc1xuICAgICAgICB0aGlzLFxuICAgICAgICBidWZmZXIuc2xpY2Uoc3RhcnQsIHN0YXJ0ICsgTUFYX0NPTVBSRVNTRURfTEVOR1RIKVxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWludmFsaWQtdGhpcywgY29uc2lzdGVudC10aGlzXG4gIGNvbnN0IGNvbm5lY3Rpb24gPSB0aGlzO1xuXG4gIGxldCBwYWNrZXRMZW4gPSBidWZmZXIubGVuZ3RoO1xuICBjb25zdCBjb21wcmVzc0hlYWRlciA9IEJ1ZmZlci5hbGxvY1Vuc2FmZSg3KTtcblxuICAvLyBzZXFxdWV1ZSBpcyB1c2VkIGhlcmUgYmVjYXVzZSB6bGliIGFzeW5jIGV4ZWN1dGlvbiBpcyByb3V0ZWQgdmlhIHRocmVhZCBwb29sXG4gIC8vIGludGVybmFsbHkgYW5kIHdoZW4gd2UgaGF2ZSBtdWx0aXBsZSBjb21wcmVzc2VkIHBhY2tldHMgYXJyaXZpbmcgd2UgbmVlZFxuICAvLyB0byBhc3NlbWJsZSB1bmNvbXByZXNzZWQgcmVzdWx0IHNlcXVlbnRpYWxseVxuICAoZnVuY3Rpb24oc2VxSWQpIHtcbiAgICBjb25uZWN0aW9uLmRlZmxhdGVRdWV1ZS5wdXNoKHRhc2sgPT4ge1xuICAgICAgemxpYi5kZWZsYXRlKGJ1ZmZlciwgKGVyciwgY29tcHJlc3NlZCkgPT4ge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgY29ubmVjdGlvbi5faGFuZGxlRmF0YWxFcnJvcihlcnIpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBsZXQgY29tcHJlc3NlZExlbmd0aCA9IGNvbXByZXNzZWQubGVuZ3RoO1xuXG4gICAgICAgIGlmIChjb21wcmVzc2VkTGVuZ3RoIDwgcGFja2V0TGVuKSB7XG4gICAgICAgICAgY29tcHJlc3NIZWFkZXIud3JpdGVVSW50OChjb21wcmVzc2VkTGVuZ3RoICYgMHhmZiwgMCk7XG4gICAgICAgICAgY29tcHJlc3NIZWFkZXIud3JpdGVVSW50MTZMRShjb21wcmVzc2VkTGVuZ3RoID4+IDgsIDEpO1xuICAgICAgICAgIGNvbXByZXNzSGVhZGVyLndyaXRlVUludDgoc2VxSWQsIDMpO1xuICAgICAgICAgIGNvbXByZXNzSGVhZGVyLndyaXRlVUludDgocGFja2V0TGVuICYgMHhmZiwgNCk7XG4gICAgICAgICAgY29tcHJlc3NIZWFkZXIud3JpdGVVSW50MTZMRShwYWNrZXRMZW4gPj4gOCwgNSk7XG4gICAgICAgICAgY29ubmVjdGlvbi53cml0ZVVuY29tcHJlc3NlZChjb21wcmVzc0hlYWRlcik7XG4gICAgICAgICAgY29ubmVjdGlvbi53cml0ZVVuY29tcHJlc3NlZChjb21wcmVzc2VkKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBodHRwOi8vZGV2Lm15c3FsLmNvbS9kb2MvaW50ZXJuYWxzL2VuL3VuY29tcHJlc3NlZC1wYXlsb2FkLmh0bWxcbiAgICAgICAgICAvLyBUbyBzZW5kIGFuIHVuY29tcHJlc3NlZCBwYXlsb2FkOlxuICAgICAgICAgIC8vICAgLSBzZXQgbGVuZ3RoIG9mIHBheWxvYWQgYmVmb3JlIGNvbXByZXNzaW9uIHRvIDBcbiAgICAgICAgICAvLyAgIC0gdGhlIGNvbXByZXNzZWQgcGF5bG9hZCBjb250YWlucyB0aGUgdW5jb21wcmVzc2VkIHBheWxvYWQgaW5zdGVhZC5cbiAgICAgICAgICBjb21wcmVzc2VkTGVuZ3RoID0gcGFja2V0TGVuO1xuICAgICAgICAgIHBhY2tldExlbiA9IDA7XG4gICAgICAgICAgY29tcHJlc3NIZWFkZXIud3JpdGVVSW50OChjb21wcmVzc2VkTGVuZ3RoICYgMHhmZiwgMCk7XG4gICAgICAgICAgY29tcHJlc3NIZWFkZXIud3JpdGVVSW50MTZMRShjb21wcmVzc2VkTGVuZ3RoID4+IDgsIDEpO1xuICAgICAgICAgIGNvbXByZXNzSGVhZGVyLndyaXRlVUludDgoc2VxSWQsIDMpO1xuICAgICAgICAgIGNvbXByZXNzSGVhZGVyLndyaXRlVUludDgocGFja2V0TGVuICYgMHhmZiwgNCk7XG4gICAgICAgICAgY29tcHJlc3NIZWFkZXIud3JpdGVVSW50MTZMRShwYWNrZXRMZW4gPj4gOCwgNSk7XG4gICAgICAgICAgY29ubmVjdGlvbi53cml0ZVVuY29tcHJlc3NlZChjb21wcmVzc0hlYWRlcik7XG4gICAgICAgICAgY29ubmVjdGlvbi53cml0ZVVuY29tcHJlc3NlZChidWZmZXIpO1xuICAgICAgICB9XG4gICAgICAgIHRhc2suZG9uZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pKGNvbm5lY3Rpb24uY29tcHJlc3NlZFNlcXVlbmNlSWQpO1xuICBjb25uZWN0aW9uLl9idW1wQ29tcHJlc3NlZFNlcXVlbmNlSWQoMSk7XG59XG5cbmZ1bmN0aW9uIGVuYWJsZUNvbXByZXNzaW9uKGNvbm5lY3Rpb24pIHtcbiAgY29ubmVjdGlvbi5fbGFzdFdyaXR0ZW5QYWNrZXRJZCA9IDA7XG4gIGNvbm5lY3Rpb24uX2xhc3RSZWNlaXZlZFBhY2tldElkID0gMDtcblxuICBjb25uZWN0aW9uLl9oYW5kbGVDb21wcmVzc2VkUGFja2V0ID0gaGFuZGxlQ29tcHJlc3NlZFBhY2tldDtcbiAgY29ubmVjdGlvbi5faW5mbGF0ZWRQYWNrZXRzUGFyc2VyID0gbmV3IFBhY2tldFBhcnNlcihwID0+IHtcbiAgICBjb25uZWN0aW9uLmhhbmRsZVBhY2tldChwKTtcbiAgfSwgNCk7XG4gIGNvbm5lY3Rpb24uX2luZmxhdGVkUGFja2V0c1BhcnNlci5fbGFzdFBhY2tldCA9IDA7XG4gIGNvbm5lY3Rpb24ucGFja2V0UGFyc2VyID0gbmV3IFBhY2tldFBhcnNlcihwYWNrZXQgPT4ge1xuICAgIGNvbm5lY3Rpb24uX2hhbmRsZUNvbXByZXNzZWRQYWNrZXQocGFja2V0KTtcbiAgfSwgNyk7XG5cbiAgY29ubmVjdGlvbi53cml0ZVVuY29tcHJlc3NlZCA9IGNvbm5lY3Rpb24ud3JpdGU7XG4gIGNvbm5lY3Rpb24ud3JpdGUgPSB3cml0ZUNvbXByZXNzZWQ7XG5cbiAgY29uc3Qgc2VxcXVldWUgPSByZXF1aXJlKCdzZXEtcXVldWUnKTtcbiAgY29ubmVjdGlvbi5pbmZsYXRlUXVldWUgPSBzZXFxdWV1ZS5jcmVhdGVRdWV1ZSgpO1xuICBjb25uZWN0aW9uLmRlZmxhdGVRdWV1ZSA9IHNlcXF1ZXVlLmNyZWF0ZVF1ZXVlKCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBlbmFibGVDb21wcmVzc2lvbjogZW5hYmxlQ29tcHJlc3Npb25cbn07XG4iXSwibmFtZXMiOlsiemxpYiIsInJlcXVpcmUiLCJQYWNrZXRQYXJzZXIiLCJoYW5kbGVDb21wcmVzc2VkUGFja2V0IiwicGFja2V0IiwiY29ubmVjdGlvbiIsImRlZmxhdGVkTGVuZ3RoIiwicmVhZEludDI0IiwiYm9keSIsInJlYWRCdWZmZXIiLCJpbmZsYXRlUXVldWUiLCJwdXNoIiwidGFzayIsImluZmxhdGUiLCJlcnIiLCJkYXRhIiwiX2hhbmRsZU5ldHdvcmtFcnJvciIsIl9idW1wQ29tcHJlc3NlZFNlcXVlbmNlSWQiLCJudW1QYWNrZXRzIiwiX2luZmxhdGVkUGFja2V0c1BhcnNlciIsImV4ZWN1dGUiLCJkb25lIiwid3JpdGVDb21wcmVzc2VkIiwiYnVmZmVyIiwiTUFYX0NPTVBSRVNTRURfTEVOR1RIIiwic3RhcnQiLCJsZW5ndGgiLCJjYWxsIiwic2xpY2UiLCJwYWNrZXRMZW4iLCJjb21wcmVzc0hlYWRlciIsIkJ1ZmZlciIsImFsbG9jVW5zYWZlIiwic2VxSWQiLCJkZWZsYXRlUXVldWUiLCJkZWZsYXRlIiwiY29tcHJlc3NlZCIsIl9oYW5kbGVGYXRhbEVycm9yIiwiY29tcHJlc3NlZExlbmd0aCIsIndyaXRlVUludDgiLCJ3cml0ZVVJbnQxNkxFIiwid3JpdGVVbmNvbXByZXNzZWQiLCJjb21wcmVzc2VkU2VxdWVuY2VJZCIsImVuYWJsZUNvbXByZXNzaW9uIiwiX2xhc3RXcml0dGVuUGFja2V0SWQiLCJfbGFzdFJlY2VpdmVkUGFja2V0SWQiLCJfaGFuZGxlQ29tcHJlc3NlZFBhY2tldCIsInAiLCJoYW5kbGVQYWNrZXQiLCJfbGFzdFBhY2tldCIsInBhY2tldFBhcnNlciIsIndyaXRlIiwic2VxcXVldWUiLCJjcmVhdGVRdWV1ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/compressed_protocol.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/connection.js":
/*!***********************************************!*\
  !*** ./node_modules/mysql2/lib/connection.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// This file was modified by Oracle on June 1, 2021.\n// The changes involve new logic to handle an additional ERR Packet sent by\n// the MySQL server when the connection is closed unexpectedly.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n// This file was modified by Oracle on June 17, 2021.\n// The changes involve logic to ensure the socket connection is closed when\n// there is a fatal error.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n// This file was modified by Oracle on September 21, 2021.\n// The changes involve passing additional authentication factor passwords\n// to the ChangeUser Command instance.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\nconst Net = __webpack_require__(/*! net */ \"net\");\nconst Tls = __webpack_require__(/*! tls */ \"tls\");\nconst Timers = __webpack_require__(/*! timers */ \"timers\");\nconst EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter);\nconst Readable = (__webpack_require__(/*! stream */ \"stream\").Readable);\nconst Queue = __webpack_require__(/*! denque */ \"(rsc)/./node_modules/denque/index.js\");\nconst SqlString = __webpack_require__(/*! sqlstring */ \"(rsc)/./node_modules/sqlstring/index.js\");\nconst LRU = (__webpack_require__(/*! lru-cache */ \"(rsc)/./node_modules/mysql2/node_modules/lru-cache/dist/cjs/index-cjs.js\")[\"default\"]);\nconst PacketParser = __webpack_require__(/*! ./packet_parser.js */ \"(rsc)/./node_modules/mysql2/lib/packet_parser.js\");\nconst Packets = __webpack_require__(/*! ./packets/index.js */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\nconst Commands = __webpack_require__(/*! ./commands/index.js */ \"(rsc)/./node_modules/mysql2/lib/commands/index.js\");\nconst ConnectionConfig = __webpack_require__(/*! ./connection_config.js */ \"(rsc)/./node_modules/mysql2/lib/connection_config.js\");\nconst CharsetToEncoding = __webpack_require__(/*! ./constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\nlet _connectionId = 0;\nlet convertNamedPlaceholders = null;\nclass Connection extends EventEmitter {\n    constructor(opts){\n        super();\n        this.config = opts.config;\n        // TODO: fill defaults\n        // if no params, connect to /var/lib/mysql/mysql.sock ( /tmp/mysql.sock on OSX )\n        // if host is given, connect to host:3306\n        // TODO: use `/usr/local/mysql/bin/mysql_config --socket` output? as default socketPath\n        // if there is no host/port and no socketPath parameters?\n        if (!opts.config.stream) {\n            if (opts.config.socketPath) {\n                this.stream = Net.connect(opts.config.socketPath);\n            } else {\n                this.stream = Net.connect(opts.config.port, opts.config.host);\n                // Optionally enable keep-alive on the socket.\n                if (this.config.enableKeepAlive) {\n                    this.stream.on(\"connect\", ()=>{\n                        this.stream.setKeepAlive(true, this.config.keepAliveInitialDelay);\n                    });\n                }\n                // Enable TCP_NODELAY flag. This is needed so that the network packets\n                // are sent immediately to the server\n                this.stream.setNoDelay(true);\n            }\n        // if stream is a function, treat it as \"stream agent / factory\"\n        } else if (typeof opts.config.stream === \"function\") {\n            this.stream = opts.config.stream(opts);\n        } else {\n            this.stream = opts.config.stream;\n        }\n        this._internalId = _connectionId++;\n        this._commands = new Queue();\n        this._command = null;\n        this._paused = false;\n        this._paused_packets = new Queue();\n        this._statements = new LRU({\n            max: this.config.maxPreparedStatements,\n            dispose: function(statement) {\n                statement.close();\n            }\n        });\n        this.serverCapabilityFlags = 0;\n        this.authorized = false;\n        this.sequenceId = 0;\n        this.compressedSequenceId = 0;\n        this.threadId = null;\n        this._handshakePacket = null;\n        this._fatalError = null;\n        this._protocolError = null;\n        this._outOfOrderPackets = [];\n        this.clientEncoding = CharsetToEncoding[this.config.charsetNumber];\n        this.stream.on(\"error\", this._handleNetworkError.bind(this));\n        // see https://gist.github.com/khoomeister/4985691#use-that-instead-of-bind\n        this.packetParser = new PacketParser((p)=>{\n            this.handlePacket(p);\n        });\n        this.stream.on(\"data\", (data)=>{\n            if (this.connectTimeout) {\n                Timers.clearTimeout(this.connectTimeout);\n                this.connectTimeout = null;\n            }\n            this.packetParser.execute(data);\n        });\n        this.stream.on(\"end\", ()=>{\n            // emit the end event so that the pooled connection can close the connection\n            this.emit(\"end\");\n        });\n        this.stream.on(\"close\", ()=>{\n            // we need to set this flag everywhere where we want connection to close\n            if (this._closing) {\n                return;\n            }\n            if (!this._protocolError) {\n                // no particular error message before disconnect\n                this._protocolError = new Error(\"Connection lost: The server closed the connection.\");\n                this._protocolError.fatal = true;\n                this._protocolError.code = \"PROTOCOL_CONNECTION_LOST\";\n            }\n            this._notifyError(this._protocolError);\n        });\n        let handshakeCommand;\n        if (!this.config.isServer) {\n            handshakeCommand = new Commands.ClientHandshake(this.config.clientFlags);\n            handshakeCommand.on(\"end\", ()=>{\n                // this happens when handshake finishes early either because there was\n                // some fatal error or the server sent an error packet instead of\n                // an hello packet (for example, 'Too many connections' error)\n                if (!handshakeCommand.handshake || this._fatalError || this._protocolError) {\n                    return;\n                }\n                this._handshakePacket = handshakeCommand.handshake;\n                this.threadId = handshakeCommand.handshake.connectionId;\n                this.emit(\"connect\", handshakeCommand.handshake);\n            });\n            handshakeCommand.on(\"error\", (err)=>{\n                this._closing = true;\n                this._notifyError(err);\n            });\n            this.addCommand(handshakeCommand);\n        }\n        // in case there was no initial handshake but we need to read sting, assume it utf-8\n        // most common example: \"Too many connections\" error ( packet is sent immediately on connection attempt, we don't know server encoding yet)\n        // will be overwritten with actual encoding value as soon as server handshake packet is received\n        this.serverEncoding = \"utf8\";\n        if (this.config.connectTimeout) {\n            const timeoutHandler = this._handleTimeoutError.bind(this);\n            this.connectTimeout = Timers.setTimeout(timeoutHandler, this.config.connectTimeout);\n        }\n    }\n    promise(promiseImpl) {\n        const PromiseConnection = (__webpack_require__(/*! ../promise */ \"(rsc)/./node_modules/mysql2/promise.js\").PromiseConnection);\n        return new PromiseConnection(this, promiseImpl);\n    }\n    _addCommandClosedState(cmd) {\n        const err = new Error(\"Can't add new command when connection is in closed state\");\n        err.fatal = true;\n        if (cmd.onResult) {\n            cmd.onResult(err);\n        } else {\n            this.emit(\"error\", err);\n        }\n    }\n    _handleFatalError(err) {\n        err.fatal = true;\n        // stop receiving packets\n        this.stream.removeAllListeners(\"data\");\n        this.addCommand = this._addCommandClosedState;\n        this.write = ()=>{\n            this.emit(\"error\", new Error(\"Can't write in closed state\"));\n        };\n        this._notifyError(err);\n        this._fatalError = err;\n    }\n    _handleNetworkError(err) {\n        if (this.connectTimeout) {\n            Timers.clearTimeout(this.connectTimeout);\n            this.connectTimeout = null;\n        }\n        // Do not throw an error when a connection ends with a RST,ACK packet\n        if (err.code === \"ECONNRESET\" && this._closing) {\n            return;\n        }\n        this._handleFatalError(err);\n    }\n    _handleTimeoutError() {\n        if (this.connectTimeout) {\n            Timers.clearTimeout(this.connectTimeout);\n            this.connectTimeout = null;\n        }\n        this.stream.destroy && this.stream.destroy();\n        const err = new Error(\"connect ETIMEDOUT\");\n        err.errorno = \"ETIMEDOUT\";\n        err.code = \"ETIMEDOUT\";\n        err.syscall = \"connect\";\n        this._handleNetworkError(err);\n    }\n    // notify all commands in the queue and bubble error as connection \"error\"\n    // called on stream error or unexpected termination\n    _notifyError(err) {\n        if (this.connectTimeout) {\n            Timers.clearTimeout(this.connectTimeout);\n            this.connectTimeout = null;\n        }\n        // prevent from emitting 'PROTOCOL_CONNECTION_LOST' after EPIPE or ECONNRESET\n        if (this._fatalError) {\n            return;\n        }\n        let command;\n        // if there is no active command, notify connection\n        // if there are commands and all of them have callbacks, pass error via callback\n        let bubbleErrorToConnection = !this._command;\n        if (this._command && this._command.onResult) {\n            this._command.onResult(err);\n            this._command = null;\n        // connection handshake is special because we allow it to be implicit\n        // if error happened during handshake, but there are others commands in queue\n        // then bubble error to other commands and not to connection\n        } else if (!(this._command && this._command.constructor === Commands.ClientHandshake && this._commands.length > 0)) {\n            bubbleErrorToConnection = true;\n        }\n        while(command = this._commands.shift()){\n            if (command.onResult) {\n                command.onResult(err);\n            } else {\n                bubbleErrorToConnection = true;\n            }\n        }\n        // notify connection if some comands in the queue did not have callbacks\n        // or if this is pool connection ( so it can be removed from pool )\n        if (bubbleErrorToConnection || this._pool) {\n            this.emit(\"error\", err);\n        }\n        // close connection after emitting the event in case of a fatal error\n        if (err.fatal) {\n            this.close();\n        }\n    }\n    write(buffer) {\n        const result = this.stream.write(buffer, (err)=>{\n            if (err) {\n                this._handleNetworkError(err);\n            }\n        });\n        if (!result) {\n            this.stream.emit(\"pause\");\n        }\n    }\n    // http://dev.mysql.com/doc/internals/en/sequence-id.html\n    //\n    // The sequence-id is incremented with each packet and may wrap around.\n    // It starts at 0 and is reset to 0 when a new command\n    // begins in the Command Phase.\n    // http://dev.mysql.com/doc/internals/en/example-several-mysql-packets.html\n    _resetSequenceId() {\n        this.sequenceId = 0;\n        this.compressedSequenceId = 0;\n    }\n    _bumpCompressedSequenceId(numPackets) {\n        this.compressedSequenceId += numPackets;\n        this.compressedSequenceId %= 256;\n    }\n    _bumpSequenceId(numPackets) {\n        this.sequenceId += numPackets;\n        this.sequenceId %= 256;\n    }\n    writePacket(packet) {\n        const MAX_PACKET_LENGTH = 16777215;\n        const length = packet.length();\n        let chunk, offset, header;\n        if (length < MAX_PACKET_LENGTH) {\n            packet.writeHeader(this.sequenceId);\n            if (this.config.debug) {\n                // eslint-disable-next-line no-console\n                console.log(`${this._internalId} ${this.connectionId} <== ${this._command._commandName}#${this._command.stateName()}(${[\n                    this.sequenceId,\n                    packet._name,\n                    packet.length()\n                ].join(\",\")})`);\n                // eslint-disable-next-line no-console\n                console.log(`${this._internalId} ${this.connectionId} <== ${packet.buffer.toString(\"hex\")}`);\n            }\n            this._bumpSequenceId(1);\n            this.write(packet.buffer);\n        } else {\n            if (this.config.debug) {\n                // eslint-disable-next-line no-console\n                console.log(`${this._internalId} ${this.connectionId} <== Writing large packet, raw content not written:`);\n                // eslint-disable-next-line no-console\n                console.log(`${this._internalId} ${this.connectionId} <== ${this._command._commandName}#${this._command.stateName()}(${[\n                    this.sequenceId,\n                    packet._name,\n                    packet.length()\n                ].join(\",\")})`);\n            }\n            for(offset = 4; offset < 4 + length; offset += MAX_PACKET_LENGTH){\n                chunk = packet.buffer.slice(offset, offset + MAX_PACKET_LENGTH);\n                if (chunk.length === MAX_PACKET_LENGTH) {\n                    header = Buffer.from([\n                        0xff,\n                        0xff,\n                        0xff,\n                        this.sequenceId\n                    ]);\n                } else {\n                    header = Buffer.from([\n                        chunk.length & 0xff,\n                        chunk.length >> 8 & 0xff,\n                        chunk.length >> 16 & 0xff,\n                        this.sequenceId\n                    ]);\n                }\n                this._bumpSequenceId(1);\n                this.write(header);\n                this.write(chunk);\n            }\n        }\n    }\n    // 0.11+ environment\n    startTLS(onSecure) {\n        if (this.config.debug) {\n            // eslint-disable-next-line no-console\n            console.log(\"Upgrading connection to TLS\");\n        }\n        const secureContext = Tls.createSecureContext({\n            ca: this.config.ssl.ca,\n            cert: this.config.ssl.cert,\n            ciphers: this.config.ssl.ciphers,\n            key: this.config.ssl.key,\n            passphrase: this.config.ssl.passphrase,\n            minVersion: this.config.ssl.minVersion,\n            maxVersion: this.config.ssl.maxVersion\n        });\n        const rejectUnauthorized = this.config.ssl.rejectUnauthorized;\n        const verifyIdentity = this.config.ssl.verifyIdentity;\n        const servername = this.config.host;\n        let secureEstablished = false;\n        this.stream.removeAllListeners(\"data\");\n        const secureSocket = Tls.connect({\n            rejectUnauthorized,\n            requestCert: rejectUnauthorized,\n            secureContext,\n            isServer: false,\n            socket: this.stream,\n            servername\n        }, ()=>{\n            secureEstablished = true;\n            if (rejectUnauthorized) {\n                if (typeof servername === \"string\" && verifyIdentity) {\n                    const cert = secureSocket.getPeerCertificate(true);\n                    const serverIdentityCheckError = Tls.checkServerIdentity(servername, cert);\n                    if (serverIdentityCheckError) {\n                        onSecure(serverIdentityCheckError);\n                        return;\n                    }\n                }\n            }\n            onSecure();\n        });\n        // error handler for secure socket\n        secureSocket.on(\"error\", (err)=>{\n            if (secureEstablished) {\n                this._handleNetworkError(err);\n            } else {\n                onSecure(err);\n            }\n        });\n        secureSocket.on(\"data\", (data)=>{\n            this.packetParser.execute(data);\n        });\n        this.write = (buffer)=>secureSocket.write(buffer);\n    }\n    protocolError(message, code) {\n        // Starting with MySQL 8.0.24, if the client closes the connection\n        // unexpectedly, the server will send a last ERR Packet, which we can\n        // safely ignore.\n        // https://dev.mysql.com/worklog/task/?id=12999\n        if (this._closing) {\n            return;\n        }\n        const err = new Error(message);\n        err.fatal = true;\n        err.code = code || \"PROTOCOL_ERROR\";\n        this.emit(\"error\", err);\n    }\n    get fatalError() {\n        return this._fatalError;\n    }\n    handlePacket(packet) {\n        if (this._paused) {\n            this._paused_packets.push(packet);\n            return;\n        }\n        if (this.config.debug) {\n            if (packet) {\n                // eslint-disable-next-line no-console\n                console.log(` raw: ${packet.buffer.slice(packet.offset, packet.offset + packet.length()).toString(\"hex\")}`);\n                // eslint-disable-next-line no-console\n                console.trace();\n                const commandName = this._command ? this._command._commandName : \"(no command)\";\n                const stateName = this._command ? this._command.stateName() : \"(no command)\";\n                // eslint-disable-next-line no-console\n                console.log(`${this._internalId} ${this.connectionId} ==> ${commandName}#${stateName}(${[\n                    packet.sequenceId,\n                    packet.type(),\n                    packet.length()\n                ].join(\",\")})`);\n            }\n        }\n        if (!this._command) {\n            const marker = packet.peekByte();\n            // If it's an Err Packet, we should use it.\n            if (marker === 0xff) {\n                const error = Packets.Error.fromPacket(packet);\n                this.protocolError(error.message, error.code);\n            } else {\n                // Otherwise, it means it's some other unexpected packet.\n                this.protocolError(\"Unexpected packet while no commands in the queue\", \"PROTOCOL_UNEXPECTED_PACKET\");\n            }\n            this.close();\n            return;\n        }\n        if (packet) {\n            // Note: when server closes connection due to inactivity, Err packet ER_CLIENT_INTERACTION_TIMEOUT from MySQL 8.0.24, sequenceId will be 0\n            if (this.sequenceId !== packet.sequenceId) {\n                const err = new Error(`Warning: got packets out of order. Expected ${this.sequenceId} but received ${packet.sequenceId}`);\n                err.expected = this.sequenceId;\n                err.received = packet.sequenceId;\n                this.emit(\"warn\", err); // REVIEW\n                // eslint-disable-next-line no-console\n                console.error(err.message);\n            }\n            this._bumpSequenceId(packet.numPackets);\n        }\n        try {\n            if (this._fatalError) {\n                // skip remaining packets after client is in the error state\n                return;\n            }\n            const done = this._command.execute(packet, this);\n            if (done) {\n                this._command = this._commands.shift();\n                if (this._command) {\n                    this.sequenceId = 0;\n                    this.compressedSequenceId = 0;\n                    this.handlePacket();\n                }\n            }\n        } catch (err) {\n            this._handleFatalError(err);\n            this.stream.destroy();\n        }\n    }\n    addCommand(cmd) {\n        // this.compressedSequenceId = 0;\n        // this.sequenceId = 0;\n        if (this.config.debug) {\n            const commandName = cmd.constructor.name;\n            // eslint-disable-next-line no-console\n            console.log(`Add command: ${commandName}`);\n            cmd._commandName = commandName;\n        }\n        if (!this._command) {\n            this._command = cmd;\n            this.handlePacket();\n        } else {\n            this._commands.push(cmd);\n        }\n        return cmd;\n    }\n    format(sql, values) {\n        if (typeof this.config.queryFormat === \"function\") {\n            return this.config.queryFormat.call(this, sql, values, this.config.timezone);\n        }\n        const opts = {\n            sql: sql,\n            values: values\n        };\n        this._resolveNamedPlaceholders(opts);\n        return SqlString.format(opts.sql, opts.values, this.config.stringifyObjects, this.config.timezone);\n    }\n    escape(value) {\n        return SqlString.escape(value, false, this.config.timezone);\n    }\n    escapeId(value) {\n        return SqlString.escapeId(value, false);\n    }\n    raw(sql) {\n        return SqlString.raw(sql);\n    }\n    _resolveNamedPlaceholders(options) {\n        let unnamed;\n        if (this.config.namedPlaceholders || options.namedPlaceholders) {\n            if (Array.isArray(options.values)) {\n                // if an array is provided as the values, assume the conversion is not necessary.\n                // this allows the usage of unnamed placeholders even if the namedPlaceholders flag is enabled.\n                return;\n            }\n            if (convertNamedPlaceholders === null) {\n                convertNamedPlaceholders = __webpack_require__(/*! named-placeholders */ \"(rsc)/./node_modules/named-placeholders/index.js\")();\n            }\n            unnamed = convertNamedPlaceholders(options.sql, options.values);\n            options.sql = unnamed[0];\n            options.values = unnamed[1];\n        }\n    }\n    query(sql, values, cb) {\n        let cmdQuery;\n        if (sql.constructor === Commands.Query) {\n            cmdQuery = sql;\n        } else {\n            cmdQuery = Connection.createQuery(sql, values, cb, this.config);\n        }\n        this._resolveNamedPlaceholders(cmdQuery);\n        const rawSql = this.format(cmdQuery.sql, cmdQuery.values !== undefined ? cmdQuery.values : []);\n        cmdQuery.sql = rawSql;\n        return this.addCommand(cmdQuery);\n    }\n    pause() {\n        this._paused = true;\n        this.stream.pause();\n    }\n    resume() {\n        let packet;\n        this._paused = false;\n        while(packet = this._paused_packets.shift()){\n            this.handlePacket(packet);\n            // don't resume if packet handler paused connection\n            if (this._paused) {\n                return;\n            }\n        }\n        this.stream.resume();\n    }\n    // TODO: named placeholders support\n    prepare(options, cb) {\n        if (typeof options === \"string\") {\n            options = {\n                sql: options\n            };\n        }\n        return this.addCommand(new Commands.Prepare(options, cb));\n    }\n    unprepare(sql) {\n        let options = {};\n        if (typeof sql === \"object\") {\n            options = sql;\n        } else {\n            options.sql = sql;\n        }\n        const key = Connection.statementKey(options);\n        const stmt = this._statements.get(key);\n        if (stmt) {\n            this._statements.delete(key);\n            stmt.close();\n        }\n        return stmt;\n    }\n    execute(sql, values, cb) {\n        let options = {\n            infileStreamFactory: this.config.infileStreamFactory\n        };\n        if (typeof sql === \"object\") {\n            // execute(options, cb)\n            options = {\n                ...options,\n                ...sql,\n                sql: sql.sql,\n                values: sql.values\n            };\n            if (typeof values === \"function\") {\n                cb = values;\n            } else {\n                options.values = options.values || values;\n            }\n        } else if (typeof values === \"function\") {\n            // execute(sql, cb)\n            cb = values;\n            options.sql = sql;\n            options.values = undefined;\n        } else {\n            // execute(sql, values, cb)\n            options.sql = sql;\n            options.values = values;\n        }\n        this._resolveNamedPlaceholders(options);\n        // check for values containing undefined\n        if (options.values) {\n            //If namedPlaceholder is not enabled and object is passed as bind parameters\n            if (!Array.isArray(options.values)) {\n                throw new TypeError(\"Bind parameters must be array if namedPlaceholders parameter is not enabled\");\n            }\n            options.values.forEach((val)=>{\n                //If namedPlaceholder is not enabled and object is passed as bind parameters\n                if (!Array.isArray(options.values)) {\n                    throw new TypeError(\"Bind parameters must be array if namedPlaceholders parameter is not enabled\");\n                }\n                if (val === undefined) {\n                    throw new TypeError(\"Bind parameters must not contain undefined. To pass SQL NULL specify JS null\");\n                }\n                if (typeof val === \"function\") {\n                    throw new TypeError(\"Bind parameters must not contain function(s). To pass the body of a function as a string call .toString() first\");\n                }\n            });\n        }\n        const executeCommand = new Commands.Execute(options, cb);\n        const prepareCommand = new Commands.Prepare(options, (err, stmt)=>{\n            if (err) {\n                // skip execute command if prepare failed, we have main\n                // combined callback here\n                executeCommand.start = function() {\n                    return null;\n                };\n                if (cb) {\n                    cb(err);\n                } else {\n                    executeCommand.emit(\"error\", err);\n                }\n                executeCommand.emit(\"end\");\n                return;\n            }\n            executeCommand.statement = stmt;\n        });\n        this.addCommand(prepareCommand);\n        this.addCommand(executeCommand);\n        return executeCommand;\n    }\n    changeUser(options, callback) {\n        if (!callback && typeof options === \"function\") {\n            callback = options;\n            options = {};\n        }\n        const charsetNumber = options.charset ? ConnectionConfig.getCharsetNumber(options.charset) : this.config.charsetNumber;\n        return this.addCommand(new Commands.ChangeUser({\n            user: options.user || this.config.user,\n            // for the purpose of multi-factor authentication, or not, the main\n            // password (used for the 1st authentication factor) can also be\n            // provided via the \"password1\" option\n            password: options.password || options.password1 || this.config.password || this.config.password1,\n            password2: options.password2 || this.config.password2,\n            password3: options.password3 || this.config.password3,\n            passwordSha1: options.passwordSha1 || this.config.passwordSha1,\n            database: options.database || this.config.database,\n            timeout: options.timeout,\n            charsetNumber: charsetNumber,\n            currentConfig: this.config\n        }, (err)=>{\n            if (err) {\n                err.fatal = true;\n            }\n            if (callback) {\n                callback(err);\n            }\n        }));\n    }\n    // transaction helpers\n    beginTransaction(cb) {\n        return this.query(\"START TRANSACTION\", cb);\n    }\n    commit(cb) {\n        return this.query(\"COMMIT\", cb);\n    }\n    rollback(cb) {\n        return this.query(\"ROLLBACK\", cb);\n    }\n    ping(cb) {\n        return this.addCommand(new Commands.Ping(cb));\n    }\n    _registerSlave(opts, cb) {\n        return this.addCommand(new Commands.RegisterSlave(opts, cb));\n    }\n    _binlogDump(opts, cb) {\n        return this.addCommand(new Commands.BinlogDump(opts, cb));\n    }\n    // currently just alias to close\n    destroy() {\n        this.close();\n    }\n    close() {\n        if (this.connectTimeout) {\n            Timers.clearTimeout(this.connectTimeout);\n            this.connectTimeout = null;\n        }\n        this._closing = true;\n        this.stream.end();\n        this.addCommand = this._addCommandClosedState;\n    }\n    createBinlogStream(opts) {\n        // TODO: create proper stream class\n        // TODO: use through2\n        let test = 1;\n        const stream = new Readable({\n            objectMode: true\n        });\n        stream._read = function() {\n            return {\n                data: test++\n            };\n        };\n        this._registerSlave(opts, ()=>{\n            const dumpCmd = this._binlogDump(opts);\n            dumpCmd.on(\"event\", (ev)=>{\n                stream.push(ev);\n            });\n            dumpCmd.on(\"eof\", ()=>{\n                stream.push(null);\n                // if non-blocking, then close stream to prevent errors\n                if (opts.flags && opts.flags & 0x01) {\n                    this.close();\n                }\n            });\n        // TODO: pipe errors as well\n        });\n        return stream;\n    }\n    connect(cb) {\n        if (!cb) {\n            return;\n        }\n        if (this._fatalError || this._protocolError) {\n            return cb(this._fatalError || this._protocolError);\n        }\n        if (this._handshakePacket) {\n            return cb(null, this);\n        }\n        let connectCalled = 0;\n        function callbackOnce(isErrorHandler) {\n            return function(param) {\n                if (!connectCalled) {\n                    if (isErrorHandler) {\n                        cb(param);\n                    } else {\n                        cb(null, param);\n                    }\n                }\n                connectCalled = 1;\n            };\n        }\n        this.once(\"error\", callbackOnce(true));\n        this.once(\"connect\", callbackOnce(false));\n    }\n    // ===================================\n    // outgoing server connection methods\n    // ===================================\n    writeColumns(columns) {\n        this.writePacket(Packets.ResultSetHeader.toPacket(columns.length));\n        columns.forEach((column)=>{\n            this.writePacket(Packets.ColumnDefinition.toPacket(column, this.serverConfig.encoding));\n        });\n        this.writeEof();\n    }\n    // row is array of columns, not hash\n    writeTextRow(column) {\n        this.writePacket(Packets.TextRow.toPacket(column, this.serverConfig.encoding));\n    }\n    writeBinaryRow(column) {\n        this.writePacket(Packets.BinaryRow.toPacket(column, this.serverConfig.encoding));\n    }\n    writeTextResult(rows, columns, binary = false) {\n        this.writeColumns(columns);\n        rows.forEach((row)=>{\n            const arrayRow = new Array(columns.length);\n            columns.forEach((column)=>{\n                arrayRow.push(row[column.name]);\n            });\n            if (binary) {\n                this.writeBinaryRow(arrayRow);\n            } else this.writeTextRow(arrayRow);\n        });\n        this.writeEof();\n    }\n    writeEof(warnings, statusFlags) {\n        this.writePacket(Packets.EOF.toPacket(warnings, statusFlags));\n    }\n    writeOk(args) {\n        if (!args) {\n            args = {\n                affectedRows: 0\n            };\n        }\n        this.writePacket(Packets.OK.toPacket(args, this.serverConfig.encoding));\n    }\n    writeError(args) {\n        // if we want to send error before initial hello was sent, use default encoding\n        const encoding = this.serverConfig ? this.serverConfig.encoding : \"cesu8\";\n        this.writePacket(Packets.Error.toPacket(args, encoding));\n    }\n    serverHandshake(args) {\n        this.serverConfig = args;\n        this.serverConfig.encoding = CharsetToEncoding[this.serverConfig.characterSet];\n        return this.addCommand(new Commands.ServerHandshake(args));\n    }\n    // ===============================================================\n    end(callback) {\n        if (this.config.isServer) {\n            this._closing = true;\n            const quitCmd = new EventEmitter();\n            setImmediate(()=>{\n                this.stream.end();\n                quitCmd.emit(\"end\");\n            });\n            return quitCmd;\n        }\n        // trigger error if more commands enqueued after end command\n        const quitCmd = this.addCommand(new Commands.Quit(callback));\n        this.addCommand = this._addCommandClosedState;\n        return quitCmd;\n    }\n    static createQuery(sql, values, cb, config) {\n        let options = {\n            rowsAsArray: config.rowsAsArray,\n            infileStreamFactory: config.infileStreamFactory\n        };\n        if (typeof sql === \"object\") {\n            // query(options, cb)\n            options = {\n                ...options,\n                ...sql,\n                sql: sql.sql,\n                values: sql.values\n            };\n            if (typeof values === \"function\") {\n                cb = values;\n            } else if (values !== undefined) {\n                options.values = values;\n            }\n        } else if (typeof values === \"function\") {\n            // query(sql, cb)\n            cb = values;\n            options.sql = sql;\n            options.values = undefined;\n        } else {\n            // query(sql, values, cb)\n            options.sql = sql;\n            options.values = values;\n        }\n        return new Commands.Query(options, cb);\n    }\n    static statementKey(options) {\n        return `${typeof options.nestTables}/${options.nestTables}/${options.rowsAsArray}${options.sql}`;\n    }\n}\nmodule.exports = Connection;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/connection.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/connection_config.js":
/*!******************************************************!*\
  !*** ./node_modules/mysql2/lib/connection_config.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// This file was modified by Oracle on September 21, 2021.\n// New connection options for additional authentication factors were\n// introduced.\n// Multi-factor authentication capability is now enabled if one of these\n// options is used.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\nconst { URL } = __webpack_require__(/*! url */ \"url\");\nconst ClientConstants = __webpack_require__(/*! ./constants/client */ \"(rsc)/./node_modules/mysql2/lib/constants/client.js\");\nconst Charsets = __webpack_require__(/*! ./constants/charsets */ \"(rsc)/./node_modules/mysql2/lib/constants/charsets.js\");\nconst { version } = __webpack_require__(/*! ../package.json */ \"(rsc)/./node_modules/mysql2/package.json\");\nlet SSLProfiles = null;\nconst validOptions = {\n    authPlugins: 1,\n    authSwitchHandler: 1,\n    bigNumberStrings: 1,\n    charset: 1,\n    charsetNumber: 1,\n    compress: 1,\n    connectAttributes: 1,\n    connectTimeout: 1,\n    database: 1,\n    dateStrings: 1,\n    debug: 1,\n    decimalNumbers: 1,\n    enableKeepAlive: 1,\n    flags: 1,\n    host: 1,\n    insecureAuth: 1,\n    infileStreamFactory: 1,\n    isServer: 1,\n    keepAliveInitialDelay: 1,\n    localAddress: 1,\n    maxPreparedStatements: 1,\n    multipleStatements: 1,\n    namedPlaceholders: 1,\n    nestTables: 1,\n    password: 1,\n    // with multi-factor authentication, the main password (used for the first\n    // authentication factor) can be provided via password1\n    password1: 1,\n    password2: 1,\n    password3: 1,\n    passwordSha1: 1,\n    pool: 1,\n    port: 1,\n    queryFormat: 1,\n    rowsAsArray: 1,\n    socketPath: 1,\n    ssl: 1,\n    stream: 1,\n    stringifyObjects: 1,\n    supportBigNumbers: 1,\n    timezone: 1,\n    trace: 1,\n    typeCast: 1,\n    uri: 1,\n    user: 1,\n    // These options are used for Pool\n    connectionLimit: 1,\n    maxIdle: 1,\n    idleTimeout: 1,\n    Promise: 1,\n    queueLimit: 1,\n    waitForConnections: 1\n};\nclass ConnectionConfig {\n    constructor(options){\n        if (typeof options === \"string\") {\n            options = ConnectionConfig.parseUrl(options);\n        } else if (options && options.uri) {\n            const uriOptions = ConnectionConfig.parseUrl(options.uri);\n            for(const key in uriOptions){\n                if (!Object.prototype.hasOwnProperty.call(uriOptions, key)) continue;\n                if (options[key]) continue;\n                options[key] = uriOptions[key];\n            }\n        }\n        for(const key in options){\n            if (!Object.prototype.hasOwnProperty.call(options, key)) continue;\n            if (validOptions[key] !== 1) {\n                // REVIEW: Should this be emitted somehow?\n                // eslint-disable-next-line no-console\n                console.error(`Ignoring invalid configuration option passed to Connection: ${key}. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection`);\n            }\n        }\n        this.isServer = options.isServer;\n        this.stream = options.stream;\n        this.host = options.host || \"localhost\";\n        this.port = (typeof options.port === \"string\" ? parseInt(options.port, 10) : options.port) || 3306;\n        this.localAddress = options.localAddress;\n        this.socketPath = options.socketPath;\n        this.user = options.user || undefined;\n        // for the purpose of multi-factor authentication, or not, the main\n        // password (used for the 1st authentication factor) can also be\n        // provided via the \"password1\" option\n        this.password = options.password || options.password1 || undefined;\n        this.password2 = options.password2 || undefined;\n        this.password3 = options.password3 || undefined;\n        this.passwordSha1 = options.passwordSha1 || undefined;\n        this.database = options.database;\n        this.connectTimeout = isNaN(options.connectTimeout) ? 10 * 1000 : options.connectTimeout;\n        this.insecureAuth = options.insecureAuth || false;\n        this.infileStreamFactory = options.infileStreamFactory || undefined;\n        this.supportBigNumbers = options.supportBigNumbers || false;\n        this.bigNumberStrings = options.bigNumberStrings || false;\n        this.decimalNumbers = options.decimalNumbers || false;\n        this.dateStrings = options.dateStrings || false;\n        this.debug = options.debug;\n        this.trace = options.trace !== false;\n        this.stringifyObjects = options.stringifyObjects || false;\n        this.enableKeepAlive = options.enableKeepAlive !== false;\n        this.keepAliveInitialDelay = options.keepAliveInitialDelay || 0;\n        if (options.timezone && !/^(?:local|Z|[ +-]\\d\\d:\\d\\d)$/.test(options.timezone)) {\n            // strictly supports timezones specified by mysqljs/mysql:\n            // https://github.com/mysqljs/mysql#user-content-connection-options\n            // eslint-disable-next-line no-console\n            console.error(`Ignoring invalid timezone passed to Connection: ${options.timezone}. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection`);\n            // SqlStrings falls back to UTC on invalid timezone\n            this.timezone = \"Z\";\n        } else {\n            this.timezone = options.timezone || \"local\";\n        }\n        this.queryFormat = options.queryFormat;\n        this.pool = options.pool || undefined;\n        this.ssl = typeof options.ssl === \"string\" ? ConnectionConfig.getSSLProfile(options.ssl) : options.ssl || false;\n        this.multipleStatements = options.multipleStatements || false;\n        this.rowsAsArray = options.rowsAsArray || false;\n        this.namedPlaceholders = options.namedPlaceholders || false;\n        this.nestTables = options.nestTables === undefined ? undefined : options.nestTables;\n        this.typeCast = options.typeCast === undefined ? true : options.typeCast;\n        if (this.timezone[0] === \" \") {\n            // \"+\" is a url encoded char for space so it\n            // gets translated to space when giving a\n            // connection string..\n            this.timezone = `+${this.timezone.slice(1)}`;\n        }\n        if (this.ssl) {\n            if (typeof this.ssl !== \"object\") {\n                throw new TypeError(`SSL profile must be an object, instead it's a ${typeof this.ssl}`);\n            }\n            // Default rejectUnauthorized to true\n            this.ssl.rejectUnauthorized = this.ssl.rejectUnauthorized !== false;\n        }\n        this.maxPacketSize = 0;\n        this.charsetNumber = options.charset ? ConnectionConfig.getCharsetNumber(options.charset) : options.charsetNumber || Charsets.UTF8MB4_UNICODE_CI;\n        this.compress = options.compress || false;\n        this.authPlugins = options.authPlugins;\n        this.authSwitchHandler = options.authSwitchHandler;\n        this.clientFlags = ConnectionConfig.mergeFlags(ConnectionConfig.getDefaultFlags(options), options.flags || \"\");\n        // Default connection attributes\n        // https://dev.mysql.com/doc/refman/8.0/en/performance-schema-connection-attribute-tables.html\n        const defaultConnectAttributes = {\n            _client_name: \"Node-MySQL-2\",\n            _client_version: version\n        };\n        this.connectAttributes = {\n            ...defaultConnectAttributes,\n            ...options.connectAttributes || {}\n        };\n        this.maxPreparedStatements = options.maxPreparedStatements || 16000;\n    }\n    static mergeFlags(default_flags, user_flags) {\n        let flags = 0x0, i;\n        if (!Array.isArray(user_flags)) {\n            user_flags = String(user_flags || \"\").toUpperCase().split(/\\s*,+\\s*/);\n        }\n        // add default flags unless \"blacklisted\"\n        for(i in default_flags){\n            if (user_flags.indexOf(`-${default_flags[i]}`) >= 0) {\n                continue;\n            }\n            flags |= ClientConstants[default_flags[i]] || 0x0;\n        }\n        // add user flags unless already already added\n        for(i in user_flags){\n            if (user_flags[i][0] === \"-\") {\n                continue;\n            }\n            if (default_flags.indexOf(user_flags[i]) >= 0) {\n                continue;\n            }\n            flags |= ClientConstants[user_flags[i]] || 0x0;\n        }\n        return flags;\n    }\n    static getDefaultFlags(options) {\n        const defaultFlags = [\n            \"LONG_PASSWORD\",\n            \"FOUND_ROWS\",\n            \"LONG_FLAG\",\n            \"CONNECT_WITH_DB\",\n            \"ODBC\",\n            \"LOCAL_FILES\",\n            \"IGNORE_SPACE\",\n            \"PROTOCOL_41\",\n            \"IGNORE_SIGPIPE\",\n            \"TRANSACTIONS\",\n            \"RESERVED\",\n            \"SECURE_CONNECTION\",\n            \"MULTI_RESULTS\",\n            \"TRANSACTIONS\",\n            \"SESSION_TRACK\",\n            \"CONNECT_ATTRS\"\n        ];\n        if (options && options.multipleStatements) {\n            defaultFlags.push(\"MULTI_STATEMENTS\");\n        }\n        defaultFlags.push(\"PLUGIN_AUTH\");\n        defaultFlags.push(\"PLUGIN_AUTH_LENENC_CLIENT_DATA\");\n        return defaultFlags;\n    }\n    static getCharsetNumber(charset) {\n        const num = Charsets[charset.toUpperCase()];\n        if (num === undefined) {\n            throw new TypeError(`Unknown charset '${charset}'`);\n        }\n        return num;\n    }\n    static getSSLProfile(name) {\n        if (!SSLProfiles) {\n            SSLProfiles = __webpack_require__(/*! ./constants/ssl_profiles.js */ \"(rsc)/./node_modules/mysql2/lib/constants/ssl_profiles.js\");\n        }\n        const ssl = SSLProfiles[name];\n        if (ssl === undefined) {\n            throw new TypeError(`Unknown SSL profile '${name}'`);\n        }\n        return ssl;\n    }\n    static parseUrl(url) {\n        const parsedUrl = new URL(url);\n        const options = {\n            host: decodeURIComponent(parsedUrl.hostname),\n            port: parseInt(parsedUrl.port, 10),\n            database: decodeURIComponent(parsedUrl.pathname.slice(1)),\n            user: decodeURIComponent(parsedUrl.username),\n            password: decodeURIComponent(parsedUrl.password)\n        };\n        parsedUrl.searchParams.forEach((value, key)=>{\n            try {\n                // Try to parse this as a JSON expression first\n                options[key] = JSON.parse(value);\n            } catch (err) {\n                // Otherwise assume it is a plain string\n                options[key] = value;\n            }\n        });\n        return options;\n    }\n}\nmodule.exports = ConnectionConfig;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/connection_config.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js":
/*!****************************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/charset_encodings.js ***!
  \****************************************************************/
/***/ ((module) => {

eval("\n// see tools/generate-charset-mapping.js\n// basicalliy result of \"SHOW COLLATION\" query\nmodule.exports = [\n    \"utf8\",\n    \"big5\",\n    \"latin2\",\n    \"dec8\",\n    \"cp850\",\n    \"latin1\",\n    \"hp8\",\n    \"koi8r\",\n    \"latin1\",\n    \"latin2\",\n    \"swe7\",\n    \"ascii\",\n    \"eucjp\",\n    \"sjis\",\n    \"cp1251\",\n    \"latin1\",\n    \"hebrew\",\n    \"utf8\",\n    \"tis620\",\n    \"euckr\",\n    \"latin7\",\n    \"latin2\",\n    \"koi8u\",\n    \"cp1251\",\n    \"gb2312\",\n    \"greek\",\n    \"cp1250\",\n    \"latin2\",\n    \"gbk\",\n    \"cp1257\",\n    \"latin5\",\n    \"latin1\",\n    \"armscii8\",\n    \"cesu8\",\n    \"cp1250\",\n    \"ucs2\",\n    \"cp866\",\n    \"keybcs2\",\n    \"macintosh\",\n    \"macroman\",\n    \"cp852\",\n    \"latin7\",\n    \"latin7\",\n    \"macintosh\",\n    \"cp1250\",\n    \"utf8\",\n    \"utf8\",\n    \"latin1\",\n    \"latin1\",\n    \"latin1\",\n    \"cp1251\",\n    \"cp1251\",\n    \"cp1251\",\n    \"macroman\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16-le\",\n    \"cp1256\",\n    \"cp1257\",\n    \"cp1257\",\n    \"utf32\",\n    \"utf32\",\n    \"utf16-le\",\n    \"binary\",\n    \"armscii8\",\n    \"ascii\",\n    \"cp1250\",\n    \"cp1256\",\n    \"cp866\",\n    \"dec8\",\n    \"greek\",\n    \"hebrew\",\n    \"hp8\",\n    \"keybcs2\",\n    \"koi8r\",\n    \"koi8u\",\n    \"cesu8\",\n    \"latin2\",\n    \"latin5\",\n    \"latin7\",\n    \"cp850\",\n    \"cp852\",\n    \"swe7\",\n    \"cesu8\",\n    \"big5\",\n    \"euckr\",\n    \"gb2312\",\n    \"gbk\",\n    \"sjis\",\n    \"tis620\",\n    \"ucs2\",\n    \"eucjp\",\n    \"geostd8\",\n    \"geostd8\",\n    \"latin1\",\n    \"cp932\",\n    \"cp932\",\n    \"eucjpms\",\n    \"eucjpms\",\n    \"cp1250\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf16\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"ucs2\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"ucs2\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf32\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"cesu8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"cesu8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"gb18030\",\n    \"gb18030\",\n    \"gb18030\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\",\n    \"utf8\"\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvY2hhcnNldF9lbmNvZGluZ3MuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSx3Q0FBd0M7QUFDeEMsOENBQThDO0FBRTlDQSxPQUFPQyxPQUFPLEdBQUc7SUFDZjtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7Q0FDRCIsInNvdXJjZXMiOlsid2VicGFjazovL2FjZWUtcHJvdG8tb25lLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29uc3RhbnRzL2NoYXJzZXRfZW5jb2RpbmdzLmpzPzU2ZDEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyBzZWUgdG9vbHMvZ2VuZXJhdGUtY2hhcnNldC1tYXBwaW5nLmpzXG4vLyBiYXNpY2FsbGl5IHJlc3VsdCBvZiBcIlNIT1cgQ09MTEFUSU9OXCIgcXVlcnlcblxubW9kdWxlLmV4cG9ydHMgPSBbXG4gICd1dGY4JyxcbiAgJ2JpZzUnLFxuICAnbGF0aW4yJyxcbiAgJ2RlYzgnLFxuICAnY3A4NTAnLFxuICAnbGF0aW4xJyxcbiAgJ2hwOCcsXG4gICdrb2k4cicsXG4gICdsYXRpbjEnLFxuICAnbGF0aW4yJyxcbiAgJ3N3ZTcnLFxuICAnYXNjaWknLFxuICAnZXVjanAnLFxuICAnc2ppcycsXG4gICdjcDEyNTEnLFxuICAnbGF0aW4xJyxcbiAgJ2hlYnJldycsXG4gICd1dGY4JyxcbiAgJ3RpczYyMCcsXG4gICdldWNrcicsXG4gICdsYXRpbjcnLFxuICAnbGF0aW4yJyxcbiAgJ2tvaTh1JyxcbiAgJ2NwMTI1MScsXG4gICdnYjIzMTInLFxuICAnZ3JlZWsnLFxuICAnY3AxMjUwJyxcbiAgJ2xhdGluMicsXG4gICdnYmsnLFxuICAnY3AxMjU3JyxcbiAgJ2xhdGluNScsXG4gICdsYXRpbjEnLFxuICAnYXJtc2NpaTgnLFxuICAnY2VzdTgnLFxuICAnY3AxMjUwJyxcbiAgJ3VjczInLFxuICAnY3A4NjYnLFxuICAna2V5YmNzMicsXG4gICdtYWNpbnRvc2gnLFxuICAnbWFjcm9tYW4nLFxuICAnY3A4NTInLFxuICAnbGF0aW43JyxcbiAgJ2xhdGluNycsXG4gICdtYWNpbnRvc2gnLFxuICAnY3AxMjUwJyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICdsYXRpbjEnLFxuICAnbGF0aW4xJyxcbiAgJ2xhdGluMScsXG4gICdjcDEyNTEnLFxuICAnY3AxMjUxJyxcbiAgJ2NwMTI1MScsXG4gICdtYWNyb21hbicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNi1sZScsXG4gICdjcDEyNTYnLFxuICAnY3AxMjU3JyxcbiAgJ2NwMTI1NycsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYxNi1sZScsXG4gICdiaW5hcnknLFxuICAnYXJtc2NpaTgnLFxuICAnYXNjaWknLFxuICAnY3AxMjUwJyxcbiAgJ2NwMTI1NicsXG4gICdjcDg2NicsXG4gICdkZWM4JyxcbiAgJ2dyZWVrJyxcbiAgJ2hlYnJldycsXG4gICdocDgnLFxuICAna2V5YmNzMicsXG4gICdrb2k4cicsXG4gICdrb2k4dScsXG4gICdjZXN1OCcsXG4gICdsYXRpbjInLFxuICAnbGF0aW41JyxcbiAgJ2xhdGluNycsXG4gICdjcDg1MCcsXG4gICdjcDg1MicsXG4gICdzd2U3JyxcbiAgJ2Nlc3U4JyxcbiAgJ2JpZzUnLFxuICAnZXVja3InLFxuICAnZ2IyMzEyJyxcbiAgJ2diaycsXG4gICdzamlzJyxcbiAgJ3RpczYyMCcsXG4gICd1Y3MyJyxcbiAgJ2V1Y2pwJyxcbiAgJ2dlb3N0ZDgnLFxuICAnZ2Vvc3RkOCcsXG4gICdsYXRpbjEnLFxuICAnY3A5MzInLFxuICAnY3A5MzInLFxuICAnZXVjanBtcycsXG4gICdldWNqcG1zJyxcbiAgJ2NwMTI1MCcsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGYxNicsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1Y3MyJyxcbiAgJ3VjczInLFxuICAndWNzMicsXG4gICd1Y3MyJyxcbiAgJ3VjczInLFxuICAndWNzMicsXG4gICd1Y3MyJyxcbiAgJ3VjczInLFxuICAndWNzMicsXG4gICd1Y3MyJyxcbiAgJ3VjczInLFxuICAndWNzMicsXG4gICd1Y3MyJyxcbiAgJ3VjczInLFxuICAndWNzMicsXG4gICd1Y3MyJyxcbiAgJ3VjczInLFxuICAndWNzMicsXG4gICd1Y3MyJyxcbiAgJ3VjczInLFxuICAndWNzMicsXG4gICd1Y3MyJyxcbiAgJ3VjczInLFxuICAndWNzMicsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3VjczInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmMzInLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ2Nlc3U4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAnY2VzdTgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAnZ2IxODAzMCcsXG4gICdnYjE4MDMwJyxcbiAgJ2diMTgwMzAnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCdcbl07XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/charsets.js":
/*!*******************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/charsets.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.BIG5_CHINESE_CI = 1;\nexports.LATIN2_CZECH_CS = 2;\nexports.DEC8_SWEDISH_CI = 3;\nexports.CP850_GENERAL_CI = 4;\nexports.LATIN1_GERMAN1_CI = 5;\nexports.HP8_ENGLISH_CI = 6;\nexports.KOI8R_GENERAL_CI = 7;\nexports.LATIN1_SWEDISH_CI = 8;\nexports.LATIN2_GENERAL_CI = 9;\nexports.SWE7_SWEDISH_CI = 10;\nexports.ASCII_GENERAL_CI = 11;\nexports.UJIS_JAPANESE_CI = 12;\nexports.SJIS_JAPANESE_CI = 13;\nexports.CP1251_BULGARIAN_CI = 14;\nexports.LATIN1_DANISH_CI = 15;\nexports.HEBREW_GENERAL_CI = 16;\nexports.TIS620_THAI_CI = 18;\nexports.EUCKR_KOREAN_CI = 19;\nexports.LATIN7_ESTONIAN_CS = 20;\nexports.LATIN2_HUNGARIAN_CI = 21;\nexports.KOI8U_GENERAL_CI = 22;\nexports.CP1251_UKRAINIAN_CI = 23;\nexports.GB2312_CHINESE_CI = 24;\nexports.GREEK_GENERAL_CI = 25;\nexports.CP1250_GENERAL_CI = 26;\nexports.LATIN2_CROATIAN_CI = 27;\nexports.GBK_CHINESE_CI = 28;\nexports.CP1257_LITHUANIAN_CI = 29;\nexports.LATIN5_TURKISH_CI = 30;\nexports.LATIN1_GERMAN2_CI = 31;\nexports.ARMSCII8_GENERAL_CI = 32;\nexports.UTF8_GENERAL_CI = 33;\nexports.CP1250_CZECH_CS = 34;\nexports.UCS2_GENERAL_CI = 35;\nexports.CP866_GENERAL_CI = 36;\nexports.KEYBCS2_GENERAL_CI = 37;\nexports.MACCE_GENERAL_CI = 38;\nexports.MACROMAN_GENERAL_CI = 39;\nexports.CP852_GENERAL_CI = 40;\nexports.LATIN7_GENERAL_CI = 41;\nexports.LATIN7_GENERAL_CS = 42;\nexports.MACCE_BIN = 43;\nexports.CP1250_CROATIAN_CI = 44;\nexports.UTF8MB4_GENERAL_CI = 45;\nexports.UTF8MB4_BIN = 46;\nexports.LATIN1_BIN = 47;\nexports.LATIN1_GENERAL_CI = 48;\nexports.LATIN1_GENERAL_CS = 49;\nexports.CP1251_BIN = 50;\nexports.CP1251_GENERAL_CI = 51;\nexports.CP1251_GENERAL_CS = 52;\nexports.MACROMAN_BIN = 53;\nexports.UTF16_GENERAL_CI = 54;\nexports.UTF16_BIN = 55;\nexports.UTF16LE_GENERAL_CI = 56;\nexports.CP1256_GENERAL_CI = 57;\nexports.CP1257_BIN = 58;\nexports.CP1257_GENERAL_CI = 59;\nexports.UTF32_GENERAL_CI = 60;\nexports.UTF32_BIN = 61;\nexports.UTF16LE_BIN = 62;\nexports.BINARY = 63;\nexports.ARMSCII8_BIN = 64;\nexports.ASCII_BIN = 65;\nexports.CP1250_BIN = 66;\nexports.CP1256_BIN = 67;\nexports.CP866_BIN = 68;\nexports.DEC8_BIN = 69;\nexports.GREEK_BIN = 70;\nexports.HEBREW_BIN = 71;\nexports.HP8_BIN = 72;\nexports.KEYBCS2_BIN = 73;\nexports.KOI8R_BIN = 74;\nexports.KOI8U_BIN = 75;\nexports.UTF8_TOLOWER_CI = 76;\nexports.LATIN2_BIN = 77;\nexports.LATIN5_BIN = 78;\nexports.LATIN7_BIN = 79;\nexports.CP850_BIN = 80;\nexports.CP852_BIN = 81;\nexports.SWE7_BIN = 82;\nexports.UTF8_BIN = 83;\nexports.BIG5_BIN = 84;\nexports.EUCKR_BIN = 85;\nexports.GB2312_BIN = 86;\nexports.GBK_BIN = 87;\nexports.SJIS_BIN = 88;\nexports.TIS620_BIN = 89;\nexports.UCS2_BIN = 90;\nexports.UJIS_BIN = 91;\nexports.GEOSTD8_GENERAL_CI = 92;\nexports.GEOSTD8_BIN = 93;\nexports.LATIN1_SPANISH_CI = 94;\nexports.CP932_JAPANESE_CI = 95;\nexports.CP932_BIN = 96;\nexports.EUCJPMS_JAPANESE_CI = 97;\nexports.EUCJPMS_BIN = 98;\nexports.CP1250_POLISH_CI = 99;\nexports.UTF16_UNICODE_CI = 101;\nexports.UTF16_ICELANDIC_CI = 102;\nexports.UTF16_LATVIAN_CI = 103;\nexports.UTF16_ROMANIAN_CI = 104;\nexports.UTF16_SLOVENIAN_CI = 105;\nexports.UTF16_POLISH_CI = 106;\nexports.UTF16_ESTONIAN_CI = 107;\nexports.UTF16_SPANISH_CI = 108;\nexports.UTF16_SWEDISH_CI = 109;\nexports.UTF16_TURKISH_CI = 110;\nexports.UTF16_CZECH_CI = 111;\nexports.UTF16_DANISH_CI = 112;\nexports.UTF16_LITHUANIAN_CI = 113;\nexports.UTF16_SLOVAK_CI = 114;\nexports.UTF16_SPANISH2_CI = 115;\nexports.UTF16_ROMAN_CI = 116;\nexports.UTF16_PERSIAN_CI = 117;\nexports.UTF16_ESPERANTO_CI = 118;\nexports.UTF16_HUNGARIAN_CI = 119;\nexports.UTF16_SINHALA_CI = 120;\nexports.UTF16_GERMAN2_CI = 121;\nexports.UTF16_CROATIAN_CI = 122;\nexports.UTF16_UNICODE_520_CI = 123;\nexports.UTF16_VIETNAMESE_CI = 124;\nexports.UCS2_UNICODE_CI = 128;\nexports.UCS2_ICELANDIC_CI = 129;\nexports.UCS2_LATVIAN_CI = 130;\nexports.UCS2_ROMANIAN_CI = 131;\nexports.UCS2_SLOVENIAN_CI = 132;\nexports.UCS2_POLISH_CI = 133;\nexports.UCS2_ESTONIAN_CI = 134;\nexports.UCS2_SPANISH_CI = 135;\nexports.UCS2_SWEDISH_CI = 136;\nexports.UCS2_TURKISH_CI = 137;\nexports.UCS2_CZECH_CI = 138;\nexports.UCS2_DANISH_CI = 139;\nexports.UCS2_LITHUANIAN_CI = 140;\nexports.UCS2_SLOVAK_CI = 141;\nexports.UCS2_SPANISH2_CI = 142;\nexports.UCS2_ROMAN_CI = 143;\nexports.UCS2_PERSIAN_CI = 144;\nexports.UCS2_ESPERANTO_CI = 145;\nexports.UCS2_HUNGARIAN_CI = 146;\nexports.UCS2_SINHALA_CI = 147;\nexports.UCS2_GERMAN2_CI = 148;\nexports.UCS2_CROATIAN_CI = 149;\nexports.UCS2_UNICODE_520_CI = 150;\nexports.UCS2_VIETNAMESE_CI = 151;\nexports.UCS2_GENERAL_MYSQL500_CI = 159;\nexports.UTF32_UNICODE_CI = 160;\nexports.UTF32_ICELANDIC_CI = 161;\nexports.UTF32_LATVIAN_CI = 162;\nexports.UTF32_ROMANIAN_CI = 163;\nexports.UTF32_SLOVENIAN_CI = 164;\nexports.UTF32_POLISH_CI = 165;\nexports.UTF32_ESTONIAN_CI = 166;\nexports.UTF32_SPANISH_CI = 167;\nexports.UTF32_SWEDISH_CI = 168;\nexports.UTF32_TURKISH_CI = 169;\nexports.UTF32_CZECH_CI = 170;\nexports.UTF32_DANISH_CI = 171;\nexports.UTF32_LITHUANIAN_CI = 172;\nexports.UTF32_SLOVAK_CI = 173;\nexports.UTF32_SPANISH2_CI = 174;\nexports.UTF32_ROMAN_CI = 175;\nexports.UTF32_PERSIAN_CI = 176;\nexports.UTF32_ESPERANTO_CI = 177;\nexports.UTF32_HUNGARIAN_CI = 178;\nexports.UTF32_SINHALA_CI = 179;\nexports.UTF32_GERMAN2_CI = 180;\nexports.UTF32_CROATIAN_CI = 181;\nexports.UTF32_UNICODE_520_CI = 182;\nexports.UTF32_VIETNAMESE_CI = 183;\nexports.UTF8_UNICODE_CI = 192;\nexports.UTF8_ICELANDIC_CI = 193;\nexports.UTF8_LATVIAN_CI = 194;\nexports.UTF8_ROMANIAN_CI = 195;\nexports.UTF8_SLOVENIAN_CI = 196;\nexports.UTF8_POLISH_CI = 197;\nexports.UTF8_ESTONIAN_CI = 198;\nexports.UTF8_SPANISH_CI = 199;\nexports.UTF8_SWEDISH_CI = 200;\nexports.UTF8_TURKISH_CI = 201;\nexports.UTF8_CZECH_CI = 202;\nexports.UTF8_DANISH_CI = 203;\nexports.UTF8_LITHUANIAN_CI = 204;\nexports.UTF8_SLOVAK_CI = 205;\nexports.UTF8_SPANISH2_CI = 206;\nexports.UTF8_ROMAN_CI = 207;\nexports.UTF8_PERSIAN_CI = 208;\nexports.UTF8_ESPERANTO_CI = 209;\nexports.UTF8_HUNGARIAN_CI = 210;\nexports.UTF8_SINHALA_CI = 211;\nexports.UTF8_GERMAN2_CI = 212;\nexports.UTF8_CROATIAN_CI = 213;\nexports.UTF8_UNICODE_520_CI = 214;\nexports.UTF8_VIETNAMESE_CI = 215;\nexports.UTF8_GENERAL_MYSQL500_CI = 223;\nexports.UTF8MB4_UNICODE_CI = 224;\nexports.UTF8MB4_ICELANDIC_CI = 225;\nexports.UTF8MB4_LATVIAN_CI = 226;\nexports.UTF8MB4_ROMANIAN_CI = 227;\nexports.UTF8MB4_SLOVENIAN_CI = 228;\nexports.UTF8MB4_POLISH_CI = 229;\nexports.UTF8MB4_ESTONIAN_CI = 230;\nexports.UTF8MB4_SPANISH_CI = 231;\nexports.UTF8MB4_SWEDISH_CI = 232;\nexports.UTF8MB4_TURKISH_CI = 233;\nexports.UTF8MB4_CZECH_CI = 234;\nexports.UTF8MB4_DANISH_CI = 235;\nexports.UTF8MB4_LITHUANIAN_CI = 236;\nexports.UTF8MB4_SLOVAK_CI = 237;\nexports.UTF8MB4_SPANISH2_CI = 238;\nexports.UTF8MB4_ROMAN_CI = 239;\nexports.UTF8MB4_PERSIAN_CI = 240;\nexports.UTF8MB4_ESPERANTO_CI = 241;\nexports.UTF8MB4_HUNGARIAN_CI = 242;\nexports.UTF8MB4_SINHALA_CI = 243;\nexports.UTF8MB4_GERMAN2_CI = 244;\nexports.UTF8MB4_CROATIAN_CI = 245;\nexports.UTF8MB4_UNICODE_520_CI = 246;\nexports.UTF8MB4_VIETNAMESE_CI = 247;\nexports.GB18030_CHINESE_CI = 248;\nexports.GB18030_BIN = 249;\nexports.GB18030_UNICODE_520_CI = 250;\nexports.UTF8_GENERAL50_CI = 253; // deprecated\nexports.UTF8MB4_0900_AI_CI = 255;\nexports.UTF8MB4_DE_PB_0900_AI_CI = 256;\nexports.UTF8MB4_IS_0900_AI_CI = 257;\nexports.UTF8MB4_LV_0900_AI_CI = 258;\nexports.UTF8MB4_RO_0900_AI_CI = 259;\nexports.UTF8MB4_SL_0900_AI_CI = 260;\nexports.UTF8MB4_PL_0900_AI_CI = 261;\nexports.UTF8MB4_ET_0900_AI_CI = 262;\nexports.UTF8MB4_ES_0900_AI_CI = 263;\nexports.UTF8MB4_SV_0900_AI_CI = 264;\nexports.UTF8MB4_TR_0900_AI_CI = 265;\nexports.UTF8MB4_CS_0900_AI_CI = 266;\nexports.UTF8MB4_DA_0900_AI_CI = 267;\nexports.UTF8MB4_LT_0900_AI_CI = 268;\nexports.UTF8MB4_SK_0900_AI_CI = 269;\nexports.UTF8MB4_ES_TRAD_0900_AI_CI = 270;\nexports.UTF8MB4_LA_0900_AI_CI = 271;\nexports.UTF8MB4_EO_0900_AI_CI = 273;\nexports.UTF8MB4_HU_0900_AI_CI = 274;\nexports.UTF8MB4_HR_0900_AI_CI = 275;\nexports.UTF8MB4_VI_0900_AI_CI = 277;\nexports.UTF8MB4_0900_AS_CS = 278;\nexports.UTF8MB4_DE_PB_0900_AS_CS = 279;\nexports.UTF8MB4_IS_0900_AS_CS = 280;\nexports.UTF8MB4_LV_0900_AS_CS = 281;\nexports.UTF8MB4_RO_0900_AS_CS = 282;\nexports.UTF8MB4_SL_0900_AS_CS = 283;\nexports.UTF8MB4_PL_0900_AS_CS = 284;\nexports.UTF8MB4_ET_0900_AS_CS = 285;\nexports.UTF8MB4_ES_0900_AS_CS = 286;\nexports.UTF8MB4_SV_0900_AS_CS = 287;\nexports.UTF8MB4_TR_0900_AS_CS = 288;\nexports.UTF8MB4_CS_0900_AS_CS = 289;\nexports.UTF8MB4_DA_0900_AS_CS = 290;\nexports.UTF8MB4_LT_0900_AS_CS = 291;\nexports.UTF8MB4_SK_0900_AS_CS = 292;\nexports.UTF8MB4_ES_TRAD_0900_AS_CS = 293;\nexports.UTF8MB4_LA_0900_AS_CS = 294;\nexports.UTF8MB4_EO_0900_AS_CS = 296;\nexports.UTF8MB4_HU_0900_AS_CS = 297;\nexports.UTF8MB4_HR_0900_AS_CS = 298;\nexports.UTF8MB4_VI_0900_AS_CS = 300;\nexports.UTF8MB4_JA_0900_AS_CS = 303;\nexports.UTF8MB4_JA_0900_AS_CS_KS = 304;\nexports.UTF8MB4_0900_AS_CI = 305;\nexports.UTF8MB4_RU_0900_AI_CI = 306;\nexports.UTF8MB4_RU_0900_AS_CS = 307;\nexports.UTF8MB4_ZH_0900_AS_CS = 308;\nexports.UTF8MB4_0900_BIN = 309;\n// short aliases\nexports.BIG5 = exports.BIG5_CHINESE_CI;\nexports.DEC8 = exports.DEC8_SWEDISH_CI;\nexports.CP850 = exports.CP850_GENERAL_CI;\nexports.HP8 = exports.HP8_ENGLISH_CI;\nexports.KOI8R = exports.KOI8R_GENERAL_CI;\nexports.LATIN1 = exports.LATIN1_SWEDISH_CI;\nexports.LATIN2 = exports.LATIN2_GENERAL_CI;\nexports.SWE7 = exports.SWE7_SWEDISH_CI;\nexports.ASCII = exports.ASCII_GENERAL_CI;\nexports.UJIS = exports.UJIS_JAPANESE_CI;\nexports.SJIS = exports.SJIS_JAPANESE_CI;\nexports.HEBREW = exports.HEBREW_GENERAL_CI;\nexports.TIS620 = exports.TIS620_THAI_CI;\nexports.EUCKR = exports.EUCKR_KOREAN_CI;\nexports.KOI8U = exports.KOI8U_GENERAL_CI;\nexports.GB2312 = exports.GB2312_CHINESE_CI;\nexports.GREEK = exports.GREEK_GENERAL_CI;\nexports.CP1250 = exports.CP1250_GENERAL_CI;\nexports.GBK = exports.GBK_CHINESE_CI;\nexports.LATIN5 = exports.LATIN5_TURKISH_CI;\nexports.ARMSCII8 = exports.ARMSCII8_GENERAL_CI;\nexports.UTF8 = exports.UTF8_GENERAL_CI;\nexports.UCS2 = exports.UCS2_GENERAL_CI;\nexports.CP866 = exports.CP866_GENERAL_CI;\nexports.KEYBCS2 = exports.KEYBCS2_GENERAL_CI;\nexports.MACCE = exports.MACCE_GENERAL_CI;\nexports.MACROMAN = exports.MACROMAN_GENERAL_CI;\nexports.CP852 = exports.CP852_GENERAL_CI;\nexports.LATIN7 = exports.LATIN7_GENERAL_CI;\nexports.UTF8MB4 = exports.UTF8MB4_GENERAL_CI;\nexports.CP1251 = exports.CP1251_GENERAL_CI;\nexports.UTF16 = exports.UTF16_GENERAL_CI;\nexports.UTF16LE = exports.UTF16LE_GENERAL_CI;\nexports.CP1256 = exports.CP1256_GENERAL_CI;\nexports.CP1257 = exports.CP1257_GENERAL_CI;\nexports.UTF32 = exports.UTF32_GENERAL_CI;\nexports.CP932 = exports.CP932_JAPANESE_CI;\nexports.EUCJPMS = exports.EUCJPMS_JAPANESE_CI;\nexports.GB18030 = exports.GB18030_CHINESE_CI;\nexports.GEOSTD8 = exports.GEOSTD8_GENERAL_CI;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/charsets.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/client.js":
/*!*****************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/client.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("// This file was modified by Oracle on September 21, 2021.\n// New capability for multi-factor authentication based on mandatory session\n// trackers, that are signaled with an extra single-byte prefix on new\n// versions of the MySQL server.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n// Manually extracted from mysql-5.5.23/include/mysql_com.h\nexports.LONG_PASSWORD = 0x00000001; /* new more secure passwords */ \nexports.FOUND_ROWS = 0x00000002; /* found instead of affected rows */ \nexports.LONG_FLAG = 0x00000004; /* get all column flags */ \nexports.CONNECT_WITH_DB = 0x00000008; /* one can specify db on connect */ \nexports.NO_SCHEMA = 0x00000010; /* don't allow database.table.column */ \nexports.COMPRESS = 0x00000020; /* can use compression protocol */ \nexports.ODBC = 0x00000040; /* odbc client */ \nexports.LOCAL_FILES = 0x00000080; /* can use LOAD DATA LOCAL */ \nexports.IGNORE_SPACE = 0x00000100; /* ignore spaces before '' */ \nexports.PROTOCOL_41 = 0x00000200; /* new 4.1 protocol */ \nexports.INTERACTIVE = 0x00000400; /* this is an interactive client */ \nexports.SSL = 0x00000800; /* switch to ssl after handshake */ \nexports.IGNORE_SIGPIPE = 0x00001000; /* IGNORE sigpipes */ \nexports.TRANSACTIONS = 0x00002000; /* client knows about transactions */ \nexports.RESERVED = 0x00004000; /* old flag for 4.1 protocol  */ \nexports.SECURE_CONNECTION = 0x00008000; /* new 4.1 authentication */ \nexports.MULTI_STATEMENTS = 0x00010000; /* enable/disable multi-stmt support */ \nexports.MULTI_RESULTS = 0x00020000; /* enable/disable multi-results */ \nexports.PS_MULTI_RESULTS = 0x00040000; /* multi-results in ps-protocol */ \nexports.PLUGIN_AUTH = 0x00080000; /* client supports plugin authentication */ \nexports.CONNECT_ATTRS = 0x00100000; /* permits connection attributes */ \nexports.PLUGIN_AUTH_LENENC_CLIENT_DATA = 0x00200000; /* Understands length-encoded integer for auth response data in Protocol::HandshakeResponse41. */ \nexports.CAN_HANDLE_EXPIRED_PASSWORDS = 0x00400000; /* Announces support for expired password extension. */ \nexports.SESSION_TRACK = 0x00800000; /* Can set SERVER_SESSION_STATE_CHANGED in the Status Flags and send session-state change data after a OK packet. */ \nexports.DEPRECATE_EOF = 0x01000000; /* Can send OK after a Text Resultset. */ \nexports.SSL_VERIFY_SERVER_CERT = 0x40000000;\nexports.REMEMBER_OPTIONS = 0x80000000;\nexports.MULTI_FACTOR_AUTHENTICATION = 0x10000000; /* multi-factor authentication */ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvY2xpZW50LmpzIiwibWFwcGluZ3MiOiJBQUFBLDBEQUEwRDtBQUMxRCw0RUFBNEU7QUFDNUUsc0VBQXNFO0FBQ3RFLGdDQUFnQztBQUNoQyxrRUFBa0U7QUFFbEU7QUFFQSwyREFBMkQ7QUFDM0RBLHFCQUFxQixHQUFHLFlBQVksNkJBQTZCO0FBQ2pFQSxrQkFBa0IsR0FBRyxZQUFZLGtDQUFrQztBQUNuRUEsaUJBQWlCLEdBQUcsWUFBWSx3QkFBd0I7QUFDeERBLHVCQUF1QixHQUFHLFlBQVksaUNBQWlDO0FBQ3ZFQSxpQkFBaUIsR0FBRyxZQUFZLHFDQUFxQztBQUNyRUEsZ0JBQWdCLEdBQUcsWUFBWSxnQ0FBZ0M7QUFDL0RBLFlBQVksR0FBRyxZQUFZLGVBQWU7QUFDMUNBLG1CQUFtQixHQUFHLFlBQVksMkJBQTJCO0FBQzdEQSxvQkFBb0IsR0FBRyxZQUFZLDJCQUEyQjtBQUM5REEsbUJBQW1CLEdBQUcsWUFBWSxvQkFBb0I7QUFDdERBLG1CQUFtQixHQUFHLFlBQVksaUNBQWlDO0FBQ25FQSxXQUFXLEdBQUcsWUFBWSxpQ0FBaUM7QUFDM0RBLHNCQUFzQixHQUFHLFlBQVksbUJBQW1CO0FBQ3hEQSxvQkFBb0IsR0FBRyxZQUFZLG1DQUFtQztBQUN0RUEsZ0JBQWdCLEdBQUcsWUFBWSw4QkFBOEI7QUFDN0RBLHlCQUF5QixHQUFHLFlBQVksMEJBQTBCO0FBQ2xFQSx3QkFBd0IsR0FBRyxZQUFZLHFDQUFxQztBQUM1RUEscUJBQXFCLEdBQUcsWUFBWSxnQ0FBZ0M7QUFDcEVBLHdCQUF3QixHQUFHLFlBQVksZ0NBQWdDO0FBQ3ZFQSxtQkFBbUIsR0FBRyxZQUFZLHlDQUF5QztBQUMzRUEscUJBQXFCLEdBQUcsWUFBWSxpQ0FBaUM7QUFDckVBLHNDQUFzQyxHQUFHLFlBQVksK0ZBQStGO0FBQ3BKQSxvQ0FBb0MsR0FBRyxZQUFZLHFEQUFxRDtBQUN4R0EscUJBQXFCLEdBQUcsWUFBWSxrSEFBa0g7QUFDdEpBLHFCQUFxQixHQUFHLFlBQVksdUNBQXVDO0FBRTNFQSw4QkFBOEIsR0FBRztBQUNqQ0Esd0JBQXdCLEdBQUc7QUFFM0JBLG1DQUFtQyxHQUFHLFlBQVksK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWNlZS1wcm90by1vbmUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvY2xpZW50LmpzP2I2ZjYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBmaWxlIHdhcyBtb2RpZmllZCBieSBPcmFjbGUgb24gU2VwdGVtYmVyIDIxLCAyMDIxLlxuLy8gTmV3IGNhcGFiaWxpdHkgZm9yIG11bHRpLWZhY3RvciBhdXRoZW50aWNhdGlvbiBiYXNlZCBvbiBtYW5kYXRvcnkgc2Vzc2lvblxuLy8gdHJhY2tlcnMsIHRoYXQgYXJlIHNpZ25hbGVkIHdpdGggYW4gZXh0cmEgc2luZ2xlLWJ5dGUgcHJlZml4IG9uIG5ld1xuLy8gdmVyc2lvbnMgb2YgdGhlIE15U1FMIHNlcnZlci5cbi8vIE1vZGlmaWNhdGlvbnMgY29weXJpZ2h0IChjKSAyMDIxLCBPcmFjbGUgYW5kL29yIGl0cyBhZmZpbGlhdGVzLlxuXG4ndXNlIHN0cmljdCc7XG5cbi8vIE1hbnVhbGx5IGV4dHJhY3RlZCBmcm9tIG15c3FsLTUuNS4yMy9pbmNsdWRlL215c3FsX2NvbS5oXG5leHBvcnRzLkxPTkdfUEFTU1dPUkQgPSAweDAwMDAwMDAxOyAvKiBuZXcgbW9yZSBzZWN1cmUgcGFzc3dvcmRzICovXG5leHBvcnRzLkZPVU5EX1JPV1MgPSAweDAwMDAwMDAyOyAvKiBmb3VuZCBpbnN0ZWFkIG9mIGFmZmVjdGVkIHJvd3MgKi9cbmV4cG9ydHMuTE9OR19GTEFHID0gMHgwMDAwMDAwNDsgLyogZ2V0IGFsbCBjb2x1bW4gZmxhZ3MgKi9cbmV4cG9ydHMuQ09OTkVDVF9XSVRIX0RCID0gMHgwMDAwMDAwODsgLyogb25lIGNhbiBzcGVjaWZ5IGRiIG9uIGNvbm5lY3QgKi9cbmV4cG9ydHMuTk9fU0NIRU1BID0gMHgwMDAwMDAxMDsgLyogZG9uJ3QgYWxsb3cgZGF0YWJhc2UudGFibGUuY29sdW1uICovXG5leHBvcnRzLkNPTVBSRVNTID0gMHgwMDAwMDAyMDsgLyogY2FuIHVzZSBjb21wcmVzc2lvbiBwcm90b2NvbCAqL1xuZXhwb3J0cy5PREJDID0gMHgwMDAwMDA0MDsgLyogb2RiYyBjbGllbnQgKi9cbmV4cG9ydHMuTE9DQUxfRklMRVMgPSAweDAwMDAwMDgwOyAvKiBjYW4gdXNlIExPQUQgREFUQSBMT0NBTCAqL1xuZXhwb3J0cy5JR05PUkVfU1BBQ0UgPSAweDAwMDAwMTAwOyAvKiBpZ25vcmUgc3BhY2VzIGJlZm9yZSAnJyAqL1xuZXhwb3J0cy5QUk9UT0NPTF80MSA9IDB4MDAwMDAyMDA7IC8qIG5ldyA0LjEgcHJvdG9jb2wgKi9cbmV4cG9ydHMuSU5URVJBQ1RJVkUgPSAweDAwMDAwNDAwOyAvKiB0aGlzIGlzIGFuIGludGVyYWN0aXZlIGNsaWVudCAqL1xuZXhwb3J0cy5TU0wgPSAweDAwMDAwODAwOyAvKiBzd2l0Y2ggdG8gc3NsIGFmdGVyIGhhbmRzaGFrZSAqL1xuZXhwb3J0cy5JR05PUkVfU0lHUElQRSA9IDB4MDAwMDEwMDA7IC8qIElHTk9SRSBzaWdwaXBlcyAqL1xuZXhwb3J0cy5UUkFOU0FDVElPTlMgPSAweDAwMDAyMDAwOyAvKiBjbGllbnQga25vd3MgYWJvdXQgdHJhbnNhY3Rpb25zICovXG5leHBvcnRzLlJFU0VSVkVEID0gMHgwMDAwNDAwMDsgLyogb2xkIGZsYWcgZm9yIDQuMSBwcm90b2NvbCAgKi9cbmV4cG9ydHMuU0VDVVJFX0NPTk5FQ1RJT04gPSAweDAwMDA4MDAwOyAvKiBuZXcgNC4xIGF1dGhlbnRpY2F0aW9uICovXG5leHBvcnRzLk1VTFRJX1NUQVRFTUVOVFMgPSAweDAwMDEwMDAwOyAvKiBlbmFibGUvZGlzYWJsZSBtdWx0aS1zdG10IHN1cHBvcnQgKi9cbmV4cG9ydHMuTVVMVElfUkVTVUxUUyA9IDB4MDAwMjAwMDA7IC8qIGVuYWJsZS9kaXNhYmxlIG11bHRpLXJlc3VsdHMgKi9cbmV4cG9ydHMuUFNfTVVMVElfUkVTVUxUUyA9IDB4MDAwNDAwMDA7IC8qIG11bHRpLXJlc3VsdHMgaW4gcHMtcHJvdG9jb2wgKi9cbmV4cG9ydHMuUExVR0lOX0FVVEggPSAweDAwMDgwMDAwOyAvKiBjbGllbnQgc3VwcG9ydHMgcGx1Z2luIGF1dGhlbnRpY2F0aW9uICovXG5leHBvcnRzLkNPTk5FQ1RfQVRUUlMgPSAweDAwMTAwMDAwOyAvKiBwZXJtaXRzIGNvbm5lY3Rpb24gYXR0cmlidXRlcyAqL1xuZXhwb3J0cy5QTFVHSU5fQVVUSF9MRU5FTkNfQ0xJRU5UX0RBVEEgPSAweDAwMjAwMDAwOyAvKiBVbmRlcnN0YW5kcyBsZW5ndGgtZW5jb2RlZCBpbnRlZ2VyIGZvciBhdXRoIHJlc3BvbnNlIGRhdGEgaW4gUHJvdG9jb2w6OkhhbmRzaGFrZVJlc3BvbnNlNDEuICovXG5leHBvcnRzLkNBTl9IQU5ETEVfRVhQSVJFRF9QQVNTV09SRFMgPSAweDAwNDAwMDAwOyAvKiBBbm5vdW5jZXMgc3VwcG9ydCBmb3IgZXhwaXJlZCBwYXNzd29yZCBleHRlbnNpb24uICovXG5leHBvcnRzLlNFU1NJT05fVFJBQ0sgPSAweDAwODAwMDAwOyAvKiBDYW4gc2V0IFNFUlZFUl9TRVNTSU9OX1NUQVRFX0NIQU5HRUQgaW4gdGhlIFN0YXR1cyBGbGFncyBhbmQgc2VuZCBzZXNzaW9uLXN0YXRlIGNoYW5nZSBkYXRhIGFmdGVyIGEgT0sgcGFja2V0LiAqL1xuZXhwb3J0cy5ERVBSRUNBVEVfRU9GID0gMHgwMTAwMDAwMDsgLyogQ2FuIHNlbmQgT0sgYWZ0ZXIgYSBUZXh0IFJlc3VsdHNldC4gKi9cblxuZXhwb3J0cy5TU0xfVkVSSUZZX1NFUlZFUl9DRVJUID0gMHg0MDAwMDAwMDtcbmV4cG9ydHMuUkVNRU1CRVJfT1BUSU9OUyA9IDB4ODAwMDAwMDA7XG5cbmV4cG9ydHMuTVVMVElfRkFDVE9SX0FVVEhFTlRJQ0FUSU9OID0gMHgxMDAwMDAwMDsgLyogbXVsdGktZmFjdG9yIGF1dGhlbnRpY2F0aW9uICovXG4iXSwibmFtZXMiOlsiZXhwb3J0cyIsIkxPTkdfUEFTU1dPUkQiLCJGT1VORF9ST1dTIiwiTE9OR19GTEFHIiwiQ09OTkVDVF9XSVRIX0RCIiwiTk9fU0NIRU1BIiwiQ09NUFJFU1MiLCJPREJDIiwiTE9DQUxfRklMRVMiLCJJR05PUkVfU1BBQ0UiLCJQUk9UT0NPTF80MSIsIklOVEVSQUNUSVZFIiwiU1NMIiwiSUdOT1JFX1NJR1BJUEUiLCJUUkFOU0FDVElPTlMiLCJSRVNFUlZFRCIsIlNFQ1VSRV9DT05ORUNUSU9OIiwiTVVMVElfU1RBVEVNRU5UUyIsIk1VTFRJX1JFU1VMVFMiLCJQU19NVUxUSV9SRVNVTFRTIiwiUExVR0lOX0FVVEgiLCJDT05ORUNUX0FUVFJTIiwiUExVR0lOX0FVVEhfTEVORU5DX0NMSUVOVF9EQVRBIiwiQ0FOX0hBTkRMRV9FWFBJUkVEX1BBU1NXT1JEUyIsIlNFU1NJT05fVFJBQ0siLCJERVBSRUNBVEVfRU9GIiwiU1NMX1ZFUklGWV9TRVJWRVJfQ0VSVCIsIlJFTUVNQkVSX09QVElPTlMiLCJNVUxUSV9GQUNUT1JfQVVUSEVOVElDQVRJT04iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/commands.js":
/*!*******************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/commands.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("\nmodule.exports = {\n    SLEEP: 0x00,\n    QUIT: 0x01,\n    INIT_DB: 0x02,\n    QUERY: 0x03,\n    FIELD_LIST: 0x04,\n    CREATE_DB: 0x05,\n    DROP_DB: 0x06,\n    REFRESH: 0x07,\n    SHUTDOWN: 0x08,\n    STATISTICS: 0x09,\n    PROCESS_INFO: 0x0a,\n    CONNECT: 0x0b,\n    PROCESS_KILL: 0x0c,\n    DEBUG: 0x0d,\n    PING: 0x0e,\n    TIME: 0x0f,\n    DELAYED_INSERT: 0x10,\n    CHANGE_USER: 0x11,\n    BINLOG_DUMP: 0x12,\n    TABLE_DUMP: 0x13,\n    CONNECT_OUT: 0x14,\n    REGISTER_SLAVE: 0x15,\n    STMT_PREPARE: 0x16,\n    STMT_EXECUTE: 0x17,\n    STMT_SEND_LONG_DATA: 0x18,\n    STMT_CLOSE: 0x19,\n    STMT_RESET: 0x1a,\n    SET_OPTION: 0x1b,\n    STMT_FETCH: 0x1c,\n    DAEMON: 0x1d,\n    BINLOG_DUMP_GTID: 0x1e,\n    UNKNOWN: 0xff // bad!\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvY29tbWFuZHMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHO0lBQ2ZDLE9BQU87SUFDUEMsTUFBTTtJQUNOQyxTQUFTO0lBQ1RDLE9BQU87SUFDUEMsWUFBWTtJQUNaQyxXQUFXO0lBQ1hDLFNBQVM7SUFDVEMsU0FBUztJQUNUQyxVQUFVO0lBQ1ZDLFlBQVk7SUFDWkMsY0FBYztJQUNkQyxTQUFTO0lBQ1RDLGNBQWM7SUFDZEMsT0FBTztJQUNQQyxNQUFNO0lBQ05DLE1BQU07SUFDTkMsZ0JBQWdCO0lBQ2hCQyxhQUFhO0lBQ2JDLGFBQWE7SUFDYkMsWUFBWTtJQUNaQyxhQUFhO0lBQ2JDLGdCQUFnQjtJQUNoQkMsY0FBYztJQUNkQyxjQUFjO0lBQ2RDLHFCQUFxQjtJQUNyQkMsWUFBWTtJQUNaQyxZQUFZO0lBQ1pDLFlBQVk7SUFDWkMsWUFBWTtJQUNaQyxRQUFRO0lBQ1JDLGtCQUFrQjtJQUNsQkMsU0FBUyxLQUFLLE9BQU87QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hY2VlLXByb3RvLW9uZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NvbnN0YW50cy9jb21tYW5kcy5qcz9iZjI4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIFNMRUVQOiAweDAwLCAvLyBkZXByZWNhdGVkXG4gIFFVSVQ6IDB4MDEsXG4gIElOSVRfREI6IDB4MDIsXG4gIFFVRVJZOiAweDAzLFxuICBGSUVMRF9MSVNUOiAweDA0LFxuICBDUkVBVEVfREI6IDB4MDUsXG4gIERST1BfREI6IDB4MDYsXG4gIFJFRlJFU0g6IDB4MDcsXG4gIFNIVVRET1dOOiAweDA4LFxuICBTVEFUSVNUSUNTOiAweDA5LFxuICBQUk9DRVNTX0lORk86IDB4MGEsIC8vIGRlcHJlY2F0ZWRcbiAgQ09OTkVDVDogMHgwYiwgLy8gZGVwcmVjYXRlZFxuICBQUk9DRVNTX0tJTEw6IDB4MGMsXG4gIERFQlVHOiAweDBkLFxuICBQSU5HOiAweDBlLFxuICBUSU1FOiAweDBmLCAvLyBkZXByZWNhdGVkXG4gIERFTEFZRURfSU5TRVJUOiAweDEwLCAvLyBkZXByZWNhdGVkXG4gIENIQU5HRV9VU0VSOiAweDExLFxuICBCSU5MT0dfRFVNUDogMHgxMixcbiAgVEFCTEVfRFVNUDogMHgxMyxcbiAgQ09OTkVDVF9PVVQ6IDB4MTQsXG4gIFJFR0lTVEVSX1NMQVZFOiAweDE1LFxuICBTVE1UX1BSRVBBUkU6IDB4MTYsXG4gIFNUTVRfRVhFQ1VURTogMHgxNyxcbiAgU1RNVF9TRU5EX0xPTkdfREFUQTogMHgxOCxcbiAgU1RNVF9DTE9TRTogMHgxOSxcbiAgU1RNVF9SRVNFVDogMHgxYSxcbiAgU0VUX09QVElPTjogMHgxYixcbiAgU1RNVF9GRVRDSDogMHgxYyxcbiAgREFFTU9OOiAweDFkLCAvLyBkZXByZWNhdGVkXG4gIEJJTkxPR19EVU1QX0dUSUQ6IDB4MWUsXG4gIFVOS05PV046IDB4ZmYgLy8gYmFkIVxufTtcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiU0xFRVAiLCJRVUlUIiwiSU5JVF9EQiIsIlFVRVJZIiwiRklFTERfTElTVCIsIkNSRUFURV9EQiIsIkRST1BfREIiLCJSRUZSRVNIIiwiU0hVVERPV04iLCJTVEFUSVNUSUNTIiwiUFJPQ0VTU19JTkZPIiwiQ09OTkVDVCIsIlBST0NFU1NfS0lMTCIsIkRFQlVHIiwiUElORyIsIlRJTUUiLCJERUxBWUVEX0lOU0VSVCIsIkNIQU5HRV9VU0VSIiwiQklOTE9HX0RVTVAiLCJUQUJMRV9EVU1QIiwiQ09OTkVDVF9PVVQiLCJSRUdJU1RFUl9TTEFWRSIsIlNUTVRfUFJFUEFSRSIsIlNUTVRfRVhFQ1VURSIsIlNUTVRfU0VORF9MT05HX0RBVEEiLCJTVE1UX0NMT1NFIiwiU1RNVF9SRVNFVCIsIlNFVF9PUFRJT04iLCJTVE1UX0ZFVENIIiwiREFFTU9OIiwiQklOTE9HX0RVTVBfR1RJRCIsIlVOS05PV04iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/commands.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/cursor.js":
/*!*****************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/cursor.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\nmodule.exports = {\n    NO_CURSOR: 0,\n    READ_ONLY: 1,\n    FOR_UPDATE: 2,\n    SCROLLABLE: 3\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvY3Vyc29yLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBRztJQUNmQyxXQUFXO0lBQ1hDLFdBQVc7SUFDWEMsWUFBWTtJQUNaQyxZQUFZO0FBQ2QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hY2VlLXByb3RvLW9uZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NvbnN0YW50cy9jdXJzb3IuanM/NDg2OCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBOT19DVVJTT1I6IDAsXG4gIFJFQURfT05MWTogMSxcbiAgRk9SX1VQREFURTogMixcbiAgU0NST0xMQUJMRTogM1xufTtcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiTk9fQ1VSU09SIiwiUkVBRF9PTkxZIiwiRk9SX1VQREFURSIsIlNDUk9MTEFCTEUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/cursor.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/encoding_charset.js":
/*!***************************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/encoding_charset.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n// inverse of charset_encodings\n// given encoding, get matching mysql charset number\nmodule.exports = {\n    big5: 1,\n    latin2: 2,\n    dec8: 3,\n    cp850: 4,\n    latin1: 5,\n    hp8: 6,\n    koi8r: 7,\n    swe7: 10,\n    ascii: 11,\n    eucjp: 12,\n    sjis: 13,\n    cp1251: 14,\n    hebrew: 16,\n    tis620: 18,\n    euckr: 19,\n    latin7: 20,\n    koi8u: 22,\n    gb2312: 24,\n    greek: 25,\n    cp1250: 26,\n    gbk: 28,\n    cp1257: 29,\n    latin5: 30,\n    armscii8: 32,\n    cesu8: 33,\n    ucs2: 35,\n    cp866: 36,\n    keybcs2: 37,\n    macintosh: 38,\n    macroman: 39,\n    cp852: 40,\n    utf8: 45,\n    utf8mb4: 45,\n    utf16: 54,\n    utf16le: 56,\n    cp1256: 57,\n    utf32: 60,\n    binary: 63,\n    geostd8: 92,\n    cp932: 95,\n    eucjpms: 97,\n    gb18030: 248\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvZW5jb2RpbmdfY2hhcnNldC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLCtCQUErQjtBQUMvQixvREFBb0Q7QUFFcERBLE9BQU9DLE9BQU8sR0FBRztJQUNmQyxNQUFNO0lBQ05DLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxPQUFPO0lBQ1BDLFFBQVE7SUFDUkMsS0FBSztJQUNMQyxPQUFPO0lBQ1BDLE1BQU07SUFDTkMsT0FBTztJQUNQQyxPQUFPO0lBQ1BDLE1BQU07SUFDTkMsUUFBUTtJQUNSQyxRQUFRO0lBQ1JDLFFBQVE7SUFDUkMsT0FBTztJQUNQQyxRQUFRO0lBQ1JDLE9BQU87SUFDUEMsUUFBUTtJQUNSQyxPQUFPO0lBQ1BDLFFBQVE7SUFDUkMsS0FBSztJQUNMQyxRQUFRO0lBQ1JDLFFBQVE7SUFDUkMsVUFBVTtJQUNWQyxPQUFPO0lBQ1BDLE1BQU07SUFDTkMsT0FBTztJQUNQQyxTQUFTO0lBQ1RDLFdBQVc7SUFDWEMsVUFBVTtJQUNWQyxPQUFPO0lBQ1BDLE1BQU07SUFDTkMsU0FBUztJQUNUQyxPQUFPO0lBQ1BDLFNBQVM7SUFDVEMsUUFBUTtJQUNSQyxPQUFPO0lBQ1BDLFFBQVE7SUFDUkMsU0FBUztJQUNUQyxPQUFPO0lBQ1BDLFNBQVM7SUFDVEMsU0FBUztBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWNlZS1wcm90by1vbmUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvZW5jb2RpbmdfY2hhcnNldC5qcz9iNDg5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLy8gaW52ZXJzZSBvZiBjaGFyc2V0X2VuY29kaW5nc1xuLy8gZ2l2ZW4gZW5jb2RpbmcsIGdldCBtYXRjaGluZyBteXNxbCBjaGFyc2V0IG51bWJlclxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgYmlnNTogMSxcbiAgbGF0aW4yOiAyLFxuICBkZWM4OiAzLFxuICBjcDg1MDogNCxcbiAgbGF0aW4xOiA1LFxuICBocDg6IDYsXG4gIGtvaThyOiA3LFxuICBzd2U3OiAxMCxcbiAgYXNjaWk6IDExLFxuICBldWNqcDogMTIsXG4gIHNqaXM6IDEzLFxuICBjcDEyNTE6IDE0LFxuICBoZWJyZXc6IDE2LFxuICB0aXM2MjA6IDE4LFxuICBldWNrcjogMTksXG4gIGxhdGluNzogMjAsXG4gIGtvaTh1OiAyMixcbiAgZ2IyMzEyOiAyNCxcbiAgZ3JlZWs6IDI1LFxuICBjcDEyNTA6IDI2LFxuICBnYms6IDI4LFxuICBjcDEyNTc6IDI5LFxuICBsYXRpbjU6IDMwLFxuICBhcm1zY2lpODogMzIsXG4gIGNlc3U4OiAzMyxcbiAgdWNzMjogMzUsXG4gIGNwODY2OiAzNixcbiAga2V5YmNzMjogMzcsXG4gIG1hY2ludG9zaDogMzgsXG4gIG1hY3JvbWFuOiAzOSxcbiAgY3A4NTI6IDQwLFxuICB1dGY4OiA0NSxcbiAgdXRmOG1iNDogNDUsXG4gIHV0ZjE2OiA1NCxcbiAgdXRmMTZsZTogNTYsXG4gIGNwMTI1NjogNTcsXG4gIHV0ZjMyOiA2MCxcbiAgYmluYXJ5OiA2MyxcbiAgZ2Vvc3RkODogOTIsXG4gIGNwOTMyOiA5NSxcbiAgZXVjanBtczogOTcsXG4gIGdiMTgwMzA6IDI0OFxufTtcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYmlnNSIsImxhdGluMiIsImRlYzgiLCJjcDg1MCIsImxhdGluMSIsImhwOCIsImtvaThyIiwic3dlNyIsImFzY2lpIiwiZXVjanAiLCJzamlzIiwiY3AxMjUxIiwiaGVicmV3IiwidGlzNjIwIiwiZXVja3IiLCJsYXRpbjciLCJrb2k4dSIsImdiMjMxMiIsImdyZWVrIiwiY3AxMjUwIiwiZ2JrIiwiY3AxMjU3IiwibGF0aW41IiwiYXJtc2NpaTgiLCJjZXN1OCIsInVjczIiLCJjcDg2NiIsImtleWJjczIiLCJtYWNpbnRvc2giLCJtYWNyb21hbiIsImNwODUyIiwidXRmOCIsInV0ZjhtYjQiLCJ1dGYxNiIsInV0ZjE2bGUiLCJjcDEyNTYiLCJ1dGYzMiIsImJpbmFyeSIsImdlb3N0ZDgiLCJjcDkzMiIsImV1Y2pwbXMiLCJnYjE4MDMwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/encoding_charset.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/errors.js":
/*!*****************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/errors.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("// This file was modified by Oracle on June 1, 2021.\n// An entry was created for a new error reported by the MySQL server due to\n// client inactivity.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n// originally copied from https://raw.githubusercontent.com/mysqljs/mysql/7770ee5bb13260c56a160b91fe480d9165dbeeba/lib/protocol/constants/errors.js\n// (c) node-mysql authors\n// updated to contain error codes as is contained in MySQL 8.0\n// by adapting node-mysql: /.../generate-error-constants.js\n/**\n * MySQL error constants\n * \n * Extracted from version 8.0.33\n * \n * !! Generated by generate-error-constants.js, do not modify by hand !!\n */ exports.EE_CANTCREATEFILE = 1;\nexports.EE_READ = 2;\nexports.EE_WRITE = 3;\nexports.EE_BADCLOSE = 4;\nexports.EE_OUTOFMEMORY = 5;\nexports.EE_DELETE = 6;\nexports.EE_LINK = 7;\nexports.EE_EOFERR = 9;\nexports.EE_CANTLOCK = 10;\nexports.EE_CANTUNLOCK = 11;\nexports.EE_DIR = 12;\nexports.EE_STAT = 13;\nexports.EE_CANT_CHSIZE = 14;\nexports.EE_CANT_OPEN_STREAM = 15;\nexports.EE_GETWD = 16;\nexports.EE_SETWD = 17;\nexports.EE_LINK_WARNING = 18;\nexports.EE_OPEN_WARNING = 19;\nexports.EE_DISK_FULL = 20;\nexports.EE_CANT_MKDIR = 21;\nexports.EE_UNKNOWN_CHARSET = 22;\nexports.EE_OUT_OF_FILERESOURCES = 23;\nexports.EE_CANT_READLINK = 24;\nexports.EE_CANT_SYMLINK = 25;\nexports.EE_REALPATH = 26;\nexports.EE_SYNC = 27;\nexports.EE_UNKNOWN_COLLATION = 28;\nexports.EE_FILENOTFOUND = 29;\nexports.EE_FILE_NOT_CLOSED = 30;\nexports.EE_CHANGE_OWNERSHIP = 31;\nexports.EE_CHANGE_PERMISSIONS = 32;\nexports.EE_CANT_SEEK = 33;\nexports.EE_CAPACITY_EXCEEDED = 34;\nexports.EE_DISK_FULL_WITH_RETRY_MSG = 35;\nexports.EE_FAILED_TO_CREATE_TIMER = 36;\nexports.EE_FAILED_TO_DELETE_TIMER = 37;\nexports.EE_FAILED_TO_CREATE_TIMER_QUEUE = 38;\nexports.EE_FAILED_TO_START_TIMER_NOTIFY_THREAD = 39;\nexports.EE_FAILED_TO_CREATE_TIMER_NOTIFY_THREAD_INTERRUPT_EVENT = 40;\nexports.EE_EXITING_TIMER_NOTIFY_THREAD = 41;\nexports.EE_WIN_LIBRARY_LOAD_FAILED = 42;\nexports.EE_WIN_RUN_TIME_ERROR_CHECK = 43;\nexports.EE_FAILED_TO_DETERMINE_LARGE_PAGE_SIZE = 44;\nexports.EE_FAILED_TO_KILL_ALL_THREADS = 45;\nexports.EE_FAILED_TO_CREATE_IO_COMPLETION_PORT = 46;\nexports.EE_FAILED_TO_OPEN_DEFAULTS_FILE = 47;\nexports.EE_FAILED_TO_HANDLE_DEFAULTS_FILE = 48;\nexports.EE_WRONG_DIRECTIVE_IN_CONFIG_FILE = 49;\nexports.EE_SKIPPING_DIRECTIVE_DUE_TO_MAX_INCLUDE_RECURSION = 50;\nexports.EE_INCORRECT_GRP_DEFINITION_IN_CONFIG_FILE = 51;\nexports.EE_OPTION_WITHOUT_GRP_IN_CONFIG_FILE = 52;\nexports.EE_CONFIG_FILE_PERMISSION_ERROR = 53;\nexports.EE_IGNORE_WORLD_WRITABLE_CONFIG_FILE = 54;\nexports.EE_USING_DISABLED_OPTION = 55;\nexports.EE_USING_DISABLED_SHORT_OPTION = 56;\nexports.EE_USING_PASSWORD_ON_CLI_IS_INSECURE = 57;\nexports.EE_UNKNOWN_SUFFIX_FOR_VARIABLE = 58;\nexports.EE_SSL_ERROR_FROM_FILE = 59;\nexports.EE_SSL_ERROR = 60;\nexports.EE_NET_SEND_ERROR_IN_BOOTSTRAP = 61;\nexports.EE_PACKETS_OUT_OF_ORDER = 62;\nexports.EE_UNKNOWN_PROTOCOL_OPTION = 63;\nexports.EE_FAILED_TO_LOCATE_SERVER_PUBLIC_KEY = 64;\nexports.EE_PUBLIC_KEY_NOT_IN_PEM_FORMAT = 65;\nexports.EE_DEBUG_INFO = 66;\nexports.EE_UNKNOWN_VARIABLE = 67;\nexports.EE_UNKNOWN_OPTION = 68;\nexports.EE_UNKNOWN_SHORT_OPTION = 69;\nexports.EE_OPTION_WITHOUT_ARGUMENT = 70;\nexports.EE_OPTION_REQUIRES_ARGUMENT = 71;\nexports.EE_SHORT_OPTION_REQUIRES_ARGUMENT = 72;\nexports.EE_OPTION_IGNORED_DUE_TO_INVALID_VALUE = 73;\nexports.EE_OPTION_WITH_EMPTY_VALUE = 74;\nexports.EE_FAILED_TO_ASSIGN_MAX_VALUE_TO_OPTION = 75;\nexports.EE_INCORRECT_BOOLEAN_VALUE_FOR_OPTION = 76;\nexports.EE_FAILED_TO_SET_OPTION_VALUE = 77;\nexports.EE_INCORRECT_INT_VALUE_FOR_OPTION = 78;\nexports.EE_INCORRECT_UINT_VALUE_FOR_OPTION = 79;\nexports.EE_ADJUSTED_SIGNED_VALUE_FOR_OPTION = 80;\nexports.EE_ADJUSTED_UNSIGNED_VALUE_FOR_OPTION = 81;\nexports.EE_ADJUSTED_ULONGLONG_VALUE_FOR_OPTION = 82;\nexports.EE_ADJUSTED_DOUBLE_VALUE_FOR_OPTION = 83;\nexports.EE_INVALID_DECIMAL_VALUE_FOR_OPTION = 84;\nexports.EE_COLLATION_PARSER_ERROR = 85;\nexports.EE_FAILED_TO_RESET_BEFORE_PRIMARY_IGNORABLE_CHAR = 86;\nexports.EE_FAILED_TO_RESET_BEFORE_TERTIARY_IGNORABLE_CHAR = 87;\nexports.EE_SHIFT_CHAR_OUT_OF_RANGE = 88;\nexports.EE_RESET_CHAR_OUT_OF_RANGE = 89;\nexports.EE_UNKNOWN_LDML_TAG = 90;\nexports.EE_FAILED_TO_RESET_BEFORE_SECONDARY_IGNORABLE_CHAR = 91;\nexports.EE_FAILED_PROCESSING_DIRECTIVE = 92;\nexports.EE_PTHREAD_KILL_FAILED = 93;\nexports.HA_ERR_KEY_NOT_FOUND = 120;\nexports.HA_ERR_FOUND_DUPP_KEY = 121;\nexports.HA_ERR_INTERNAL_ERROR = 122;\nexports.HA_ERR_RECORD_CHANGED = 123;\nexports.HA_ERR_WRONG_INDEX = 124;\nexports.HA_ERR_ROLLED_BACK = 125;\nexports.HA_ERR_CRASHED = 126;\nexports.HA_ERR_WRONG_IN_RECORD = 127;\nexports.HA_ERR_OUT_OF_MEM = 128;\nexports.HA_ERR_NOT_A_TABLE = 130;\nexports.HA_ERR_WRONG_COMMAND = 131;\nexports.HA_ERR_OLD_FILE = 132;\nexports.HA_ERR_NO_ACTIVE_RECORD = 133;\nexports.HA_ERR_RECORD_DELETED = 134;\nexports.HA_ERR_RECORD_FILE_FULL = 135;\nexports.HA_ERR_INDEX_FILE_FULL = 136;\nexports.HA_ERR_END_OF_FILE = 137;\nexports.HA_ERR_UNSUPPORTED = 138;\nexports.HA_ERR_TOO_BIG_ROW = 139;\nexports.HA_WRONG_CREATE_OPTION = 140;\nexports.HA_ERR_FOUND_DUPP_UNIQUE = 141;\nexports.HA_ERR_UNKNOWN_CHARSET = 142;\nexports.HA_ERR_WRONG_MRG_TABLE_DEF = 143;\nexports.HA_ERR_CRASHED_ON_REPAIR = 144;\nexports.HA_ERR_CRASHED_ON_USAGE = 145;\nexports.HA_ERR_LOCK_WAIT_TIMEOUT = 146;\nexports.HA_ERR_LOCK_TABLE_FULL = 147;\nexports.HA_ERR_READ_ONLY_TRANSACTION = 148;\nexports.HA_ERR_LOCK_DEADLOCK = 149;\nexports.HA_ERR_CANNOT_ADD_FOREIGN = 150;\nexports.HA_ERR_NO_REFERENCED_ROW = 151;\nexports.HA_ERR_ROW_IS_REFERENCED = 152;\nexports.HA_ERR_NO_SAVEPOINT = 153;\nexports.HA_ERR_NON_UNIQUE_BLOCK_SIZE = 154;\nexports.HA_ERR_NO_SUCH_TABLE = 155;\nexports.HA_ERR_TABLE_EXIST = 156;\nexports.HA_ERR_NO_CONNECTION = 157;\nexports.HA_ERR_NULL_IN_SPATIAL = 158;\nexports.HA_ERR_TABLE_DEF_CHANGED = 159;\nexports.HA_ERR_NO_PARTITION_FOUND = 160;\nexports.HA_ERR_RBR_LOGGING_FAILED = 161;\nexports.HA_ERR_DROP_INDEX_FK = 162;\nexports.HA_ERR_FOREIGN_DUPLICATE_KEY = 163;\nexports.HA_ERR_TABLE_NEEDS_UPGRADE = 164;\nexports.HA_ERR_TABLE_READONLY = 165;\nexports.HA_ERR_AUTOINC_READ_FAILED = 166;\nexports.HA_ERR_AUTOINC_ERANGE = 167;\nexports.HA_ERR_GENERIC = 168;\nexports.HA_ERR_RECORD_IS_THE_SAME = 169;\nexports.HA_ERR_LOGGING_IMPOSSIBLE = 170;\nexports.HA_ERR_CORRUPT_EVENT = 171;\nexports.HA_ERR_NEW_FILE = 172;\nexports.HA_ERR_ROWS_EVENT_APPLY = 173;\nexports.HA_ERR_INITIALIZATION = 174;\nexports.HA_ERR_FILE_TOO_SHORT = 175;\nexports.HA_ERR_WRONG_CRC = 176;\nexports.HA_ERR_TOO_MANY_CONCURRENT_TRXS = 177;\nexports.HA_ERR_NOT_IN_LOCK_PARTITIONS = 178;\nexports.HA_ERR_INDEX_COL_TOO_LONG = 179;\nexports.HA_ERR_INDEX_CORRUPT = 180;\nexports.HA_ERR_UNDO_REC_TOO_BIG = 181;\nexports.HA_FTS_INVALID_DOCID = 182;\nexports.HA_ERR_TABLE_IN_FK_CHECK = 183;\nexports.HA_ERR_TABLESPACE_EXISTS = 184;\nexports.HA_ERR_TOO_MANY_FIELDS = 185;\nexports.HA_ERR_ROW_IN_WRONG_PARTITION = 186;\nexports.HA_ERR_INNODB_READ_ONLY = 187;\nexports.HA_ERR_FTS_EXCEED_RESULT_CACHE_LIMIT = 188;\nexports.HA_ERR_TEMP_FILE_WRITE_FAILURE = 189;\nexports.HA_ERR_INNODB_FORCED_RECOVERY = 190;\nexports.HA_ERR_FTS_TOO_MANY_WORDS_IN_PHRASE = 191;\nexports.HA_ERR_FK_DEPTH_EXCEEDED = 192;\nexports.HA_MISSING_CREATE_OPTION = 193;\nexports.HA_ERR_SE_OUT_OF_MEMORY = 194;\nexports.HA_ERR_TABLE_CORRUPT = 195;\nexports.HA_ERR_QUERY_INTERRUPTED = 196;\nexports.HA_ERR_TABLESPACE_MISSING = 197;\nexports.HA_ERR_TABLESPACE_IS_NOT_EMPTY = 198;\nexports.HA_ERR_WRONG_FILE_NAME = 199;\nexports.HA_ERR_NOT_ALLOWED_COMMAND = 200;\nexports.HA_ERR_COMPUTE_FAILED = 201;\nexports.HA_ERR_ROW_FORMAT_CHANGED = 202;\nexports.HA_ERR_NO_WAIT_LOCK = 203;\nexports.HA_ERR_DISK_FULL_NOWAIT = 204;\nexports.HA_ERR_NO_SESSION_TEMP = 205;\nexports.HA_ERR_WRONG_TABLE_NAME = 206;\nexports.HA_ERR_TOO_LONG_PATH = 207;\nexports.HA_ERR_SAMPLING_INIT_FAILED = 208;\nexports.HA_ERR_FTS_TOO_MANY_NESTED_EXP = 209;\nexports.ER_HASHCHK = 1000;\nexports.ER_NISAMCHK = 1001;\nexports.ER_NO = 1002;\nexports.ER_YES = 1003;\nexports.ER_CANT_CREATE_FILE = 1004;\nexports.ER_CANT_CREATE_TABLE = 1005;\nexports.ER_CANT_CREATE_DB = 1006;\nexports.ER_DB_CREATE_EXISTS = 1007;\nexports.ER_DB_DROP_EXISTS = 1008;\nexports.ER_DB_DROP_DELETE = 1009;\nexports.ER_DB_DROP_RMDIR = 1010;\nexports.ER_CANT_DELETE_FILE = 1011;\nexports.ER_CANT_FIND_SYSTEM_REC = 1012;\nexports.ER_CANT_GET_STAT = 1013;\nexports.ER_CANT_GET_WD = 1014;\nexports.ER_CANT_LOCK = 1015;\nexports.ER_CANT_OPEN_FILE = 1016;\nexports.ER_FILE_NOT_FOUND = 1017;\nexports.ER_CANT_READ_DIR = 1018;\nexports.ER_CANT_SET_WD = 1019;\nexports.ER_CHECKREAD = 1020;\nexports.ER_DISK_FULL = 1021;\nexports.ER_DUP_KEY = 1022;\nexports.ER_ERROR_ON_CLOSE = 1023;\nexports.ER_ERROR_ON_READ = 1024;\nexports.ER_ERROR_ON_RENAME = 1025;\nexports.ER_ERROR_ON_WRITE = 1026;\nexports.ER_FILE_USED = 1027;\nexports.ER_FILSORT_ABORT = 1028;\nexports.ER_FORM_NOT_FOUND = 1029;\nexports.ER_GET_ERRNO = 1030;\nexports.ER_ILLEGAL_HA = 1031;\nexports.ER_KEY_NOT_FOUND = 1032;\nexports.ER_NOT_FORM_FILE = 1033;\nexports.ER_NOT_KEYFILE = 1034;\nexports.ER_OLD_KEYFILE = 1035;\nexports.ER_OPEN_AS_READONLY = 1036;\nexports.ER_OUTOFMEMORY = 1037;\nexports.ER_OUT_OF_SORTMEMORY = 1038;\nexports.ER_UNEXPECTED_EOF = 1039;\nexports.ER_CON_COUNT_ERROR = 1040;\nexports.ER_OUT_OF_RESOURCES = 1041;\nexports.ER_BAD_HOST_ERROR = 1042;\nexports.ER_HANDSHAKE_ERROR = 1043;\nexports.ER_DBACCESS_DENIED_ERROR = 1044;\nexports.ER_ACCESS_DENIED_ERROR = 1045;\nexports.ER_NO_DB_ERROR = 1046;\nexports.ER_UNKNOWN_COM_ERROR = 1047;\nexports.ER_BAD_NULL_ERROR = 1048;\nexports.ER_BAD_DB_ERROR = 1049;\nexports.ER_TABLE_EXISTS_ERROR = 1050;\nexports.ER_BAD_TABLE_ERROR = 1051;\nexports.ER_NON_UNIQ_ERROR = 1052;\nexports.ER_SERVER_SHUTDOWN = 1053;\nexports.ER_BAD_FIELD_ERROR = 1054;\nexports.ER_WRONG_FIELD_WITH_GROUP = 1055;\nexports.ER_WRONG_GROUP_FIELD = 1056;\nexports.ER_WRONG_SUM_SELECT = 1057;\nexports.ER_WRONG_VALUE_COUNT = 1058;\nexports.ER_TOO_LONG_IDENT = 1059;\nexports.ER_DUP_FIELDNAME = 1060;\nexports.ER_DUP_KEYNAME = 1061;\nexports.ER_DUP_ENTRY = 1062;\nexports.ER_WRONG_FIELD_SPEC = 1063;\nexports.ER_PARSE_ERROR = 1064;\nexports.ER_EMPTY_QUERY = 1065;\nexports.ER_NONUNIQ_TABLE = 1066;\nexports.ER_INVALID_DEFAULT = 1067;\nexports.ER_MULTIPLE_PRI_KEY = 1068;\nexports.ER_TOO_MANY_KEYS = 1069;\nexports.ER_TOO_MANY_KEY_PARTS = 1070;\nexports.ER_TOO_LONG_KEY = 1071;\nexports.ER_KEY_COLUMN_DOES_NOT_EXITS = 1072;\nexports.ER_BLOB_USED_AS_KEY = 1073;\nexports.ER_TOO_BIG_FIELDLENGTH = 1074;\nexports.ER_WRONG_AUTO_KEY = 1075;\nexports.ER_READY = 1076;\nexports.ER_NORMAL_SHUTDOWN = 1077;\nexports.ER_GOT_SIGNAL = 1078;\nexports.ER_SHUTDOWN_COMPLETE = 1079;\nexports.ER_FORCING_CLOSE = 1080;\nexports.ER_IPSOCK_ERROR = 1081;\nexports.ER_NO_SUCH_INDEX = 1082;\nexports.ER_WRONG_FIELD_TERMINATORS = 1083;\nexports.ER_BLOBS_AND_NO_TERMINATED = 1084;\nexports.ER_TEXTFILE_NOT_READABLE = 1085;\nexports.ER_FILE_EXISTS_ERROR = 1086;\nexports.ER_LOAD_INFO = 1087;\nexports.ER_ALTER_INFO = 1088;\nexports.ER_WRONG_SUB_KEY = 1089;\nexports.ER_CANT_REMOVE_ALL_FIELDS = 1090;\nexports.ER_CANT_DROP_FIELD_OR_KEY = 1091;\nexports.ER_INSERT_INFO = 1092;\nexports.ER_UPDATE_TABLE_USED = 1093;\nexports.ER_NO_SUCH_THREAD = 1094;\nexports.ER_KILL_DENIED_ERROR = 1095;\nexports.ER_NO_TABLES_USED = 1096;\nexports.ER_TOO_BIG_SET = 1097;\nexports.ER_NO_UNIQUE_LOGFILE = 1098;\nexports.ER_TABLE_NOT_LOCKED_FOR_WRITE = 1099;\nexports.ER_TABLE_NOT_LOCKED = 1100;\nexports.ER_BLOB_CANT_HAVE_DEFAULT = 1101;\nexports.ER_WRONG_DB_NAME = 1102;\nexports.ER_WRONG_TABLE_NAME = 1103;\nexports.ER_TOO_BIG_SELECT = 1104;\nexports.ER_UNKNOWN_ERROR = 1105;\nexports.ER_UNKNOWN_PROCEDURE = 1106;\nexports.ER_WRONG_PARAMCOUNT_TO_PROCEDURE = 1107;\nexports.ER_WRONG_PARAMETERS_TO_PROCEDURE = 1108;\nexports.ER_UNKNOWN_TABLE = 1109;\nexports.ER_FIELD_SPECIFIED_TWICE = 1110;\nexports.ER_INVALID_GROUP_FUNC_USE = 1111;\nexports.ER_UNSUPPORTED_EXTENSION = 1112;\nexports.ER_TABLE_MUST_HAVE_COLUMNS = 1113;\nexports.ER_RECORD_FILE_FULL = 1114;\nexports.ER_UNKNOWN_CHARACTER_SET = 1115;\nexports.ER_TOO_MANY_TABLES = 1116;\nexports.ER_TOO_MANY_FIELDS = 1117;\nexports.ER_TOO_BIG_ROWSIZE = 1118;\nexports.ER_STACK_OVERRUN = 1119;\nexports.ER_WRONG_OUTER_JOIN = 1120;\nexports.ER_NULL_COLUMN_IN_INDEX = 1121;\nexports.ER_CANT_FIND_UDF = 1122;\nexports.ER_CANT_INITIALIZE_UDF = 1123;\nexports.ER_UDF_NO_PATHS = 1124;\nexports.ER_UDF_EXISTS = 1125;\nexports.ER_CANT_OPEN_LIBRARY = 1126;\nexports.ER_CANT_FIND_DL_ENTRY = 1127;\nexports.ER_FUNCTION_NOT_DEFINED = 1128;\nexports.ER_HOST_IS_BLOCKED = 1129;\nexports.ER_HOST_NOT_PRIVILEGED = 1130;\nexports.ER_PASSWORD_ANONYMOUS_USER = 1131;\nexports.ER_PASSWORD_NOT_ALLOWED = 1132;\nexports.ER_PASSWORD_NO_MATCH = 1133;\nexports.ER_UPDATE_INFO = 1134;\nexports.ER_CANT_CREATE_THREAD = 1135;\nexports.ER_WRONG_VALUE_COUNT_ON_ROW = 1136;\nexports.ER_CANT_REOPEN_TABLE = 1137;\nexports.ER_INVALID_USE_OF_NULL = 1138;\nexports.ER_REGEXP_ERROR = 1139;\nexports.ER_MIX_OF_GROUP_FUNC_AND_FIELDS = 1140;\nexports.ER_NONEXISTING_GRANT = 1141;\nexports.ER_TABLEACCESS_DENIED_ERROR = 1142;\nexports.ER_COLUMNACCESS_DENIED_ERROR = 1143;\nexports.ER_ILLEGAL_GRANT_FOR_TABLE = 1144;\nexports.ER_GRANT_WRONG_HOST_OR_USER = 1145;\nexports.ER_NO_SUCH_TABLE = 1146;\nexports.ER_NONEXISTING_TABLE_GRANT = 1147;\nexports.ER_NOT_ALLOWED_COMMAND = 1148;\nexports.ER_SYNTAX_ERROR = 1149;\nexports.ER_UNUSED1 = 1150;\nexports.ER_UNUSED2 = 1151;\nexports.ER_ABORTING_CONNECTION = 1152;\nexports.ER_NET_PACKET_TOO_LARGE = 1153;\nexports.ER_NET_READ_ERROR_FROM_PIPE = 1154;\nexports.ER_NET_FCNTL_ERROR = 1155;\nexports.ER_NET_PACKETS_OUT_OF_ORDER = 1156;\nexports.ER_NET_UNCOMPRESS_ERROR = 1157;\nexports.ER_NET_READ_ERROR = 1158;\nexports.ER_NET_READ_INTERRUPTED = 1159;\nexports.ER_NET_ERROR_ON_WRITE = 1160;\nexports.ER_NET_WRITE_INTERRUPTED = 1161;\nexports.ER_TOO_LONG_STRING = 1162;\nexports.ER_TABLE_CANT_HANDLE_BLOB = 1163;\nexports.ER_TABLE_CANT_HANDLE_AUTO_INCREMENT = 1164;\nexports.ER_UNUSED3 = 1165;\nexports.ER_WRONG_COLUMN_NAME = 1166;\nexports.ER_WRONG_KEY_COLUMN = 1167;\nexports.ER_WRONG_MRG_TABLE = 1168;\nexports.ER_DUP_UNIQUE = 1169;\nexports.ER_BLOB_KEY_WITHOUT_LENGTH = 1170;\nexports.ER_PRIMARY_CANT_HAVE_NULL = 1171;\nexports.ER_TOO_MANY_ROWS = 1172;\nexports.ER_REQUIRES_PRIMARY_KEY = 1173;\nexports.ER_NO_RAID_COMPILED = 1174;\nexports.ER_UPDATE_WITHOUT_KEY_IN_SAFE_MODE = 1175;\nexports.ER_KEY_DOES_NOT_EXITS = 1176;\nexports.ER_CHECK_NO_SUCH_TABLE = 1177;\nexports.ER_CHECK_NOT_IMPLEMENTED = 1178;\nexports.ER_CANT_DO_THIS_DURING_AN_TRANSACTION = 1179;\nexports.ER_ERROR_DURING_COMMIT = 1180;\nexports.ER_ERROR_DURING_ROLLBACK = 1181;\nexports.ER_ERROR_DURING_FLUSH_LOGS = 1182;\nexports.ER_ERROR_DURING_CHECKPOINT = 1183;\nexports.ER_NEW_ABORTING_CONNECTION = 1184;\nexports.ER_DUMP_NOT_IMPLEMENTED = 1185;\nexports.ER_FLUSH_MASTER_BINLOG_CLOSED = 1186;\nexports.ER_INDEX_REBUILD = 1187;\nexports.ER_SOURCE = 1188;\nexports.ER_SOURCE_NET_READ = 1189;\nexports.ER_SOURCE_NET_WRITE = 1190;\nexports.ER_FT_MATCHING_KEY_NOT_FOUND = 1191;\nexports.ER_LOCK_OR_ACTIVE_TRANSACTION = 1192;\nexports.ER_UNKNOWN_SYSTEM_VARIABLE = 1193;\nexports.ER_CRASHED_ON_USAGE = 1194;\nexports.ER_CRASHED_ON_REPAIR = 1195;\nexports.ER_WARNING_NOT_COMPLETE_ROLLBACK = 1196;\nexports.ER_TRANS_CACHE_FULL = 1197;\nexports.ER_SLAVE_MUST_STOP = 1198;\nexports.ER_REPLICA_NOT_RUNNING = 1199;\nexports.ER_BAD_REPLICA = 1200;\nexports.ER_CONNECTION_METADATA = 1201;\nexports.ER_REPLICA_THREAD = 1202;\nexports.ER_TOO_MANY_USER_CONNECTIONS = 1203;\nexports.ER_SET_CONSTANTS_ONLY = 1204;\nexports.ER_LOCK_WAIT_TIMEOUT = 1205;\nexports.ER_LOCK_TABLE_FULL = 1206;\nexports.ER_READ_ONLY_TRANSACTION = 1207;\nexports.ER_DROP_DB_WITH_READ_LOCK = 1208;\nexports.ER_CREATE_DB_WITH_READ_LOCK = 1209;\nexports.ER_WRONG_ARGUMENTS = 1210;\nexports.ER_NO_PERMISSION_TO_CREATE_USER = 1211;\nexports.ER_UNION_TABLES_IN_DIFFERENT_DIR = 1212;\nexports.ER_LOCK_DEADLOCK = 1213;\nexports.ER_TABLE_CANT_HANDLE_FT = 1214;\nexports.ER_CANNOT_ADD_FOREIGN = 1215;\nexports.ER_NO_REFERENCED_ROW = 1216;\nexports.ER_ROW_IS_REFERENCED = 1217;\nexports.ER_CONNECT_TO_SOURCE = 1218;\nexports.ER_QUERY_ON_MASTER = 1219;\nexports.ER_ERROR_WHEN_EXECUTING_COMMAND = 1220;\nexports.ER_WRONG_USAGE = 1221;\nexports.ER_WRONG_NUMBER_OF_COLUMNS_IN_SELECT = 1222;\nexports.ER_CANT_UPDATE_WITH_READLOCK = 1223;\nexports.ER_MIXING_NOT_ALLOWED = 1224;\nexports.ER_DUP_ARGUMENT = 1225;\nexports.ER_USER_LIMIT_REACHED = 1226;\nexports.ER_SPECIFIC_ACCESS_DENIED_ERROR = 1227;\nexports.ER_LOCAL_VARIABLE = 1228;\nexports.ER_GLOBAL_VARIABLE = 1229;\nexports.ER_NO_DEFAULT = 1230;\nexports.ER_WRONG_VALUE_FOR_VAR = 1231;\nexports.ER_WRONG_TYPE_FOR_VAR = 1232;\nexports.ER_VAR_CANT_BE_READ = 1233;\nexports.ER_CANT_USE_OPTION_HERE = 1234;\nexports.ER_NOT_SUPPORTED_YET = 1235;\nexports.ER_SOURCE_FATAL_ERROR_READING_BINLOG = 1236;\nexports.ER_REPLICA_IGNORED_TABLE = 1237;\nexports.ER_INCORRECT_GLOBAL_LOCAL_VAR = 1238;\nexports.ER_WRONG_FK_DEF = 1239;\nexports.ER_KEY_REF_DO_NOT_MATCH_TABLE_REF = 1240;\nexports.ER_OPERAND_COLUMNS = 1241;\nexports.ER_SUBQUERY_NO_1_ROW = 1242;\nexports.ER_UNKNOWN_STMT_HANDLER = 1243;\nexports.ER_CORRUPT_HELP_DB = 1244;\nexports.ER_CYCLIC_REFERENCE = 1245;\nexports.ER_AUTO_CONVERT = 1246;\nexports.ER_ILLEGAL_REFERENCE = 1247;\nexports.ER_DERIVED_MUST_HAVE_ALIAS = 1248;\nexports.ER_SELECT_REDUCED = 1249;\nexports.ER_TABLENAME_NOT_ALLOWED_HERE = 1250;\nexports.ER_NOT_SUPPORTED_AUTH_MODE = 1251;\nexports.ER_SPATIAL_CANT_HAVE_NULL = 1252;\nexports.ER_COLLATION_CHARSET_MISMATCH = 1253;\nexports.ER_SLAVE_WAS_RUNNING = 1254;\nexports.ER_SLAVE_WAS_NOT_RUNNING = 1255;\nexports.ER_TOO_BIG_FOR_UNCOMPRESS = 1256;\nexports.ER_ZLIB_Z_MEM_ERROR = 1257;\nexports.ER_ZLIB_Z_BUF_ERROR = 1258;\nexports.ER_ZLIB_Z_DATA_ERROR = 1259;\nexports.ER_CUT_VALUE_GROUP_CONCAT = 1260;\nexports.ER_WARN_TOO_FEW_RECORDS = 1261;\nexports.ER_WARN_TOO_MANY_RECORDS = 1262;\nexports.ER_WARN_NULL_TO_NOTNULL = 1263;\nexports.ER_WARN_DATA_OUT_OF_RANGE = 1264;\nexports.WARN_DATA_TRUNCATED = 1265;\nexports.ER_WARN_USING_OTHER_HANDLER = 1266;\nexports.ER_CANT_AGGREGATE_2COLLATIONS = 1267;\nexports.ER_DROP_USER = 1268;\nexports.ER_REVOKE_GRANTS = 1269;\nexports.ER_CANT_AGGREGATE_3COLLATIONS = 1270;\nexports.ER_CANT_AGGREGATE_NCOLLATIONS = 1271;\nexports.ER_VARIABLE_IS_NOT_STRUCT = 1272;\nexports.ER_UNKNOWN_COLLATION = 1273;\nexports.ER_REPLICA_IGNORED_SSL_PARAMS = 1274;\nexports.ER_SERVER_IS_IN_SECURE_AUTH_MODE = 1275;\nexports.ER_WARN_FIELD_RESOLVED = 1276;\nexports.ER_BAD_REPLICA_UNTIL_COND = 1277;\nexports.ER_MISSING_SKIP_REPLICA = 1278;\nexports.ER_UNTIL_COND_IGNORED = 1279;\nexports.ER_WRONG_NAME_FOR_INDEX = 1280;\nexports.ER_WRONG_NAME_FOR_CATALOG = 1281;\nexports.ER_WARN_QC_RESIZE = 1282;\nexports.ER_BAD_FT_COLUMN = 1283;\nexports.ER_UNKNOWN_KEY_CACHE = 1284;\nexports.ER_WARN_HOSTNAME_WONT_WORK = 1285;\nexports.ER_UNKNOWN_STORAGE_ENGINE = 1286;\nexports.ER_WARN_DEPRECATED_SYNTAX = 1287;\nexports.ER_NON_UPDATABLE_TABLE = 1288;\nexports.ER_FEATURE_DISABLED = 1289;\nexports.ER_OPTION_PREVENTS_STATEMENT = 1290;\nexports.ER_DUPLICATED_VALUE_IN_TYPE = 1291;\nexports.ER_TRUNCATED_WRONG_VALUE = 1292;\nexports.ER_TOO_MUCH_AUTO_TIMESTAMP_COLS = 1293;\nexports.ER_INVALID_ON_UPDATE = 1294;\nexports.ER_UNSUPPORTED_PS = 1295;\nexports.ER_GET_ERRMSG = 1296;\nexports.ER_GET_TEMPORARY_ERRMSG = 1297;\nexports.ER_UNKNOWN_TIME_ZONE = 1298;\nexports.ER_WARN_INVALID_TIMESTAMP = 1299;\nexports.ER_INVALID_CHARACTER_STRING = 1300;\nexports.ER_WARN_ALLOWED_PACKET_OVERFLOWED = 1301;\nexports.ER_CONFLICTING_DECLARATIONS = 1302;\nexports.ER_SP_NO_RECURSIVE_CREATE = 1303;\nexports.ER_SP_ALREADY_EXISTS = 1304;\nexports.ER_SP_DOES_NOT_EXIST = 1305;\nexports.ER_SP_DROP_FAILED = 1306;\nexports.ER_SP_STORE_FAILED = 1307;\nexports.ER_SP_LILABEL_MISMATCH = 1308;\nexports.ER_SP_LABEL_REDEFINE = 1309;\nexports.ER_SP_LABEL_MISMATCH = 1310;\nexports.ER_SP_UNINIT_VAR = 1311;\nexports.ER_SP_BADSELECT = 1312;\nexports.ER_SP_BADRETURN = 1313;\nexports.ER_SP_BADSTATEMENT = 1314;\nexports.ER_UPDATE_LOG_DEPRECATED_IGNORED = 1315;\nexports.ER_UPDATE_LOG_DEPRECATED_TRANSLATED = 1316;\nexports.ER_QUERY_INTERRUPTED = 1317;\nexports.ER_SP_WRONG_NO_OF_ARGS = 1318;\nexports.ER_SP_COND_MISMATCH = 1319;\nexports.ER_SP_NORETURN = 1320;\nexports.ER_SP_NORETURNEND = 1321;\nexports.ER_SP_BAD_CURSOR_QUERY = 1322;\nexports.ER_SP_BAD_CURSOR_SELECT = 1323;\nexports.ER_SP_CURSOR_MISMATCH = 1324;\nexports.ER_SP_CURSOR_ALREADY_OPEN = 1325;\nexports.ER_SP_CURSOR_NOT_OPEN = 1326;\nexports.ER_SP_UNDECLARED_VAR = 1327;\nexports.ER_SP_WRONG_NO_OF_FETCH_ARGS = 1328;\nexports.ER_SP_FETCH_NO_DATA = 1329;\nexports.ER_SP_DUP_PARAM = 1330;\nexports.ER_SP_DUP_VAR = 1331;\nexports.ER_SP_DUP_COND = 1332;\nexports.ER_SP_DUP_CURS = 1333;\nexports.ER_SP_CANT_ALTER = 1334;\nexports.ER_SP_SUBSELECT_NYI = 1335;\nexports.ER_STMT_NOT_ALLOWED_IN_SF_OR_TRG = 1336;\nexports.ER_SP_VARCOND_AFTER_CURSHNDLR = 1337;\nexports.ER_SP_CURSOR_AFTER_HANDLER = 1338;\nexports.ER_SP_CASE_NOT_FOUND = 1339;\nexports.ER_FPARSER_TOO_BIG_FILE = 1340;\nexports.ER_FPARSER_BAD_HEADER = 1341;\nexports.ER_FPARSER_EOF_IN_COMMENT = 1342;\nexports.ER_FPARSER_ERROR_IN_PARAMETER = 1343;\nexports.ER_FPARSER_EOF_IN_UNKNOWN_PARAMETER = 1344;\nexports.ER_VIEW_NO_EXPLAIN = 1345;\nexports.ER_FRM_UNKNOWN_TYPE = 1346;\nexports.ER_WRONG_OBJECT = 1347;\nexports.ER_NONUPDATEABLE_COLUMN = 1348;\nexports.ER_VIEW_SELECT_DERIVED = 1349;\nexports.ER_VIEW_SELECT_CLAUSE = 1350;\nexports.ER_VIEW_SELECT_VARIABLE = 1351;\nexports.ER_VIEW_SELECT_TMPTABLE = 1352;\nexports.ER_VIEW_WRONG_LIST = 1353;\nexports.ER_WARN_VIEW_MERGE = 1354;\nexports.ER_WARN_VIEW_WITHOUT_KEY = 1355;\nexports.ER_VIEW_INVALID = 1356;\nexports.ER_SP_NO_DROP_SP = 1357;\nexports.ER_SP_GOTO_IN_HNDLR = 1358;\nexports.ER_TRG_ALREADY_EXISTS = 1359;\nexports.ER_TRG_DOES_NOT_EXIST = 1360;\nexports.ER_TRG_ON_VIEW_OR_TEMP_TABLE = 1361;\nexports.ER_TRG_CANT_CHANGE_ROW = 1362;\nexports.ER_TRG_NO_SUCH_ROW_IN_TRG = 1363;\nexports.ER_NO_DEFAULT_FOR_FIELD = 1364;\nexports.ER_DIVISION_BY_ZERO = 1365;\nexports.ER_TRUNCATED_WRONG_VALUE_FOR_FIELD = 1366;\nexports.ER_ILLEGAL_VALUE_FOR_TYPE = 1367;\nexports.ER_VIEW_NONUPD_CHECK = 1368;\nexports.ER_VIEW_CHECK_FAILED = 1369;\nexports.ER_PROCACCESS_DENIED_ERROR = 1370;\nexports.ER_RELAY_LOG_FAIL = 1371;\nexports.ER_PASSWD_LENGTH = 1372;\nexports.ER_UNKNOWN_TARGET_BINLOG = 1373;\nexports.ER_IO_ERR_LOG_INDEX_READ = 1374;\nexports.ER_BINLOG_PURGE_PROHIBITED = 1375;\nexports.ER_FSEEK_FAIL = 1376;\nexports.ER_BINLOG_PURGE_FATAL_ERR = 1377;\nexports.ER_LOG_IN_USE = 1378;\nexports.ER_LOG_PURGE_UNKNOWN_ERR = 1379;\nexports.ER_RELAY_LOG_INIT = 1380;\nexports.ER_NO_BINARY_LOGGING = 1381;\nexports.ER_RESERVED_SYNTAX = 1382;\nexports.ER_WSAS_FAILED = 1383;\nexports.ER_DIFF_GROUPS_PROC = 1384;\nexports.ER_NO_GROUP_FOR_PROC = 1385;\nexports.ER_ORDER_WITH_PROC = 1386;\nexports.ER_LOGGING_PROHIBIT_CHANGING_OF = 1387;\nexports.ER_NO_FILE_MAPPING = 1388;\nexports.ER_WRONG_MAGIC = 1389;\nexports.ER_PS_MANY_PARAM = 1390;\nexports.ER_KEY_PART_0 = 1391;\nexports.ER_VIEW_CHECKSUM = 1392;\nexports.ER_VIEW_MULTIUPDATE = 1393;\nexports.ER_VIEW_NO_INSERT_FIELD_LIST = 1394;\nexports.ER_VIEW_DELETE_MERGE_VIEW = 1395;\nexports.ER_CANNOT_USER = 1396;\nexports.ER_XAER_NOTA = 1397;\nexports.ER_XAER_INVAL = 1398;\nexports.ER_XAER_RMFAIL = 1399;\nexports.ER_XAER_OUTSIDE = 1400;\nexports.ER_XAER_RMERR = 1401;\nexports.ER_XA_RBROLLBACK = 1402;\nexports.ER_NONEXISTING_PROC_GRANT = 1403;\nexports.ER_PROC_AUTO_GRANT_FAIL = 1404;\nexports.ER_PROC_AUTO_REVOKE_FAIL = 1405;\nexports.ER_DATA_TOO_LONG = 1406;\nexports.ER_SP_BAD_SQLSTATE = 1407;\nexports.ER_STARTUP = 1408;\nexports.ER_LOAD_FROM_FIXED_SIZE_ROWS_TO_VAR = 1409;\nexports.ER_CANT_CREATE_USER_WITH_GRANT = 1410;\nexports.ER_WRONG_VALUE_FOR_TYPE = 1411;\nexports.ER_TABLE_DEF_CHANGED = 1412;\nexports.ER_SP_DUP_HANDLER = 1413;\nexports.ER_SP_NOT_VAR_ARG = 1414;\nexports.ER_SP_NO_RETSET = 1415;\nexports.ER_CANT_CREATE_GEOMETRY_OBJECT = 1416;\nexports.ER_FAILED_ROUTINE_BREAK_BINLOG = 1417;\nexports.ER_BINLOG_UNSAFE_ROUTINE = 1418;\nexports.ER_BINLOG_CREATE_ROUTINE_NEED_SUPER = 1419;\nexports.ER_EXEC_STMT_WITH_OPEN_CURSOR = 1420;\nexports.ER_STMT_HAS_NO_OPEN_CURSOR = 1421;\nexports.ER_COMMIT_NOT_ALLOWED_IN_SF_OR_TRG = 1422;\nexports.ER_NO_DEFAULT_FOR_VIEW_FIELD = 1423;\nexports.ER_SP_NO_RECURSION = 1424;\nexports.ER_TOO_BIG_SCALE = 1425;\nexports.ER_TOO_BIG_PRECISION = 1426;\nexports.ER_M_BIGGER_THAN_D = 1427;\nexports.ER_WRONG_LOCK_OF_SYSTEM_TABLE = 1428;\nexports.ER_CONNECT_TO_FOREIGN_DATA_SOURCE = 1429;\nexports.ER_QUERY_ON_FOREIGN_DATA_SOURCE = 1430;\nexports.ER_FOREIGN_DATA_SOURCE_DOESNT_EXIST = 1431;\nexports.ER_FOREIGN_DATA_STRING_INVALID_CANT_CREATE = 1432;\nexports.ER_FOREIGN_DATA_STRING_INVALID = 1433;\nexports.ER_CANT_CREATE_FEDERATED_TABLE = 1434;\nexports.ER_TRG_IN_WRONG_SCHEMA = 1435;\nexports.ER_STACK_OVERRUN_NEED_MORE = 1436;\nexports.ER_TOO_LONG_BODY = 1437;\nexports.ER_WARN_CANT_DROP_DEFAULT_KEYCACHE = 1438;\nexports.ER_TOO_BIG_DISPLAYWIDTH = 1439;\nexports.ER_XAER_DUPID = 1440;\nexports.ER_DATETIME_FUNCTION_OVERFLOW = 1441;\nexports.ER_CANT_UPDATE_USED_TABLE_IN_SF_OR_TRG = 1442;\nexports.ER_VIEW_PREVENT_UPDATE = 1443;\nexports.ER_PS_NO_RECURSION = 1444;\nexports.ER_SP_CANT_SET_AUTOCOMMIT = 1445;\nexports.ER_MALFORMED_DEFINER = 1446;\nexports.ER_VIEW_FRM_NO_USER = 1447;\nexports.ER_VIEW_OTHER_USER = 1448;\nexports.ER_NO_SUCH_USER = 1449;\nexports.ER_FORBID_SCHEMA_CHANGE = 1450;\nexports.ER_ROW_IS_REFERENCED_2 = 1451;\nexports.ER_NO_REFERENCED_ROW_2 = 1452;\nexports.ER_SP_BAD_VAR_SHADOW = 1453;\nexports.ER_TRG_NO_DEFINER = 1454;\nexports.ER_OLD_FILE_FORMAT = 1455;\nexports.ER_SP_RECURSION_LIMIT = 1456;\nexports.ER_SP_PROC_TABLE_CORRUPT = 1457;\nexports.ER_SP_WRONG_NAME = 1458;\nexports.ER_TABLE_NEEDS_UPGRADE = 1459;\nexports.ER_SP_NO_AGGREGATE = 1460;\nexports.ER_MAX_PREPARED_STMT_COUNT_REACHED = 1461;\nexports.ER_VIEW_RECURSIVE = 1462;\nexports.ER_NON_GROUPING_FIELD_USED = 1463;\nexports.ER_TABLE_CANT_HANDLE_SPKEYS = 1464;\nexports.ER_NO_TRIGGERS_ON_SYSTEM_SCHEMA = 1465;\nexports.ER_REMOVED_SPACES = 1466;\nexports.ER_AUTOINC_READ_FAILED = 1467;\nexports.ER_USERNAME = 1468;\nexports.ER_HOSTNAME = 1469;\nexports.ER_WRONG_STRING_LENGTH = 1470;\nexports.ER_NON_INSERTABLE_TABLE = 1471;\nexports.ER_ADMIN_WRONG_MRG_TABLE = 1472;\nexports.ER_TOO_HIGH_LEVEL_OF_NESTING_FOR_SELECT = 1473;\nexports.ER_NAME_BECOMES_EMPTY = 1474;\nexports.ER_AMBIGUOUS_FIELD_TERM = 1475;\nexports.ER_FOREIGN_SERVER_EXISTS = 1476;\nexports.ER_FOREIGN_SERVER_DOESNT_EXIST = 1477;\nexports.ER_ILLEGAL_HA_CREATE_OPTION = 1478;\nexports.ER_PARTITION_REQUIRES_VALUES_ERROR = 1479;\nexports.ER_PARTITION_WRONG_VALUES_ERROR = 1480;\nexports.ER_PARTITION_MAXVALUE_ERROR = 1481;\nexports.ER_PARTITION_SUBPARTITION_ERROR = 1482;\nexports.ER_PARTITION_SUBPART_MIX_ERROR = 1483;\nexports.ER_PARTITION_WRONG_NO_PART_ERROR = 1484;\nexports.ER_PARTITION_WRONG_NO_SUBPART_ERROR = 1485;\nexports.ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR = 1486;\nexports.ER_NO_CONST_EXPR_IN_RANGE_OR_LIST_ERROR = 1487;\nexports.ER_FIELD_NOT_FOUND_PART_ERROR = 1488;\nexports.ER_LIST_OF_FIELDS_ONLY_IN_HASH_ERROR = 1489;\nexports.ER_INCONSISTENT_PARTITION_INFO_ERROR = 1490;\nexports.ER_PARTITION_FUNC_NOT_ALLOWED_ERROR = 1491;\nexports.ER_PARTITIONS_MUST_BE_DEFINED_ERROR = 1492;\nexports.ER_RANGE_NOT_INCREASING_ERROR = 1493;\nexports.ER_INCONSISTENT_TYPE_OF_FUNCTIONS_ERROR = 1494;\nexports.ER_MULTIPLE_DEF_CONST_IN_LIST_PART_ERROR = 1495;\nexports.ER_PARTITION_ENTRY_ERROR = 1496;\nexports.ER_MIX_HANDLER_ERROR = 1497;\nexports.ER_PARTITION_NOT_DEFINED_ERROR = 1498;\nexports.ER_TOO_MANY_PARTITIONS_ERROR = 1499;\nexports.ER_SUBPARTITION_ERROR = 1500;\nexports.ER_CANT_CREATE_HANDLER_FILE = 1501;\nexports.ER_BLOB_FIELD_IN_PART_FUNC_ERROR = 1502;\nexports.ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF = 1503;\nexports.ER_NO_PARTS_ERROR = 1504;\nexports.ER_PARTITION_MGMT_ON_NONPARTITIONED = 1505;\nexports.ER_FOREIGN_KEY_ON_PARTITIONED = 1506;\nexports.ER_DROP_PARTITION_NON_EXISTENT = 1507;\nexports.ER_DROP_LAST_PARTITION = 1508;\nexports.ER_COALESCE_ONLY_ON_HASH_PARTITION = 1509;\nexports.ER_REORG_HASH_ONLY_ON_SAME_NO = 1510;\nexports.ER_REORG_NO_PARAM_ERROR = 1511;\nexports.ER_ONLY_ON_RANGE_LIST_PARTITION = 1512;\nexports.ER_ADD_PARTITION_SUBPART_ERROR = 1513;\nexports.ER_ADD_PARTITION_NO_NEW_PARTITION = 1514;\nexports.ER_COALESCE_PARTITION_NO_PARTITION = 1515;\nexports.ER_REORG_PARTITION_NOT_EXIST = 1516;\nexports.ER_SAME_NAME_PARTITION = 1517;\nexports.ER_NO_BINLOG_ERROR = 1518;\nexports.ER_CONSECUTIVE_REORG_PARTITIONS = 1519;\nexports.ER_REORG_OUTSIDE_RANGE = 1520;\nexports.ER_PARTITION_FUNCTION_FAILURE = 1521;\nexports.ER_PART_STATE_ERROR = 1522;\nexports.ER_LIMITED_PART_RANGE = 1523;\nexports.ER_PLUGIN_IS_NOT_LOADED = 1524;\nexports.ER_WRONG_VALUE = 1525;\nexports.ER_NO_PARTITION_FOR_GIVEN_VALUE = 1526;\nexports.ER_FILEGROUP_OPTION_ONLY_ONCE = 1527;\nexports.ER_CREATE_FILEGROUP_FAILED = 1528;\nexports.ER_DROP_FILEGROUP_FAILED = 1529;\nexports.ER_TABLESPACE_AUTO_EXTEND_ERROR = 1530;\nexports.ER_WRONG_SIZE_NUMBER = 1531;\nexports.ER_SIZE_OVERFLOW_ERROR = 1532;\nexports.ER_ALTER_FILEGROUP_FAILED = 1533;\nexports.ER_BINLOG_ROW_LOGGING_FAILED = 1534;\nexports.ER_BINLOG_ROW_WRONG_TABLE_DEF = 1535;\nexports.ER_BINLOG_ROW_RBR_TO_SBR = 1536;\nexports.ER_EVENT_ALREADY_EXISTS = 1537;\nexports.ER_EVENT_STORE_FAILED = 1538;\nexports.ER_EVENT_DOES_NOT_EXIST = 1539;\nexports.ER_EVENT_CANT_ALTER = 1540;\nexports.ER_EVENT_DROP_FAILED = 1541;\nexports.ER_EVENT_INTERVAL_NOT_POSITIVE_OR_TOO_BIG = 1542;\nexports.ER_EVENT_ENDS_BEFORE_STARTS = 1543;\nexports.ER_EVENT_EXEC_TIME_IN_THE_PAST = 1544;\nexports.ER_EVENT_OPEN_TABLE_FAILED = 1545;\nexports.ER_EVENT_NEITHER_M_EXPR_NOR_M_AT = 1546;\nexports.ER_COL_COUNT_DOESNT_MATCH_CORRUPTED = 1547;\nexports.ER_CANNOT_LOAD_FROM_TABLE = 1548;\nexports.ER_EVENT_CANNOT_DELETE = 1549;\nexports.ER_EVENT_COMPILE_ERROR = 1550;\nexports.ER_EVENT_SAME_NAME = 1551;\nexports.ER_EVENT_DATA_TOO_LONG = 1552;\nexports.ER_DROP_INDEX_FK = 1553;\nexports.ER_WARN_DEPRECATED_SYNTAX_WITH_VER = 1554;\nexports.ER_CANT_WRITE_LOCK_LOG_TABLE = 1555;\nexports.ER_CANT_LOCK_LOG_TABLE = 1556;\nexports.ER_FOREIGN_DUPLICATE_KEY = 1557;\nexports.ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE = 1558;\nexports.ER_TEMP_TABLE_PREVENTS_SWITCH_OUT_OF_RBR = 1559;\nexports.ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_FORMAT = 1560;\nexports.ER_NDB_CANT_SWITCH_BINLOG_FORMAT = 1561;\nexports.ER_PARTITION_NO_TEMPORARY = 1562;\nexports.ER_PARTITION_CONST_DOMAIN_ERROR = 1563;\nexports.ER_PARTITION_FUNCTION_IS_NOT_ALLOWED = 1564;\nexports.ER_DDL_LOG_ERROR = 1565;\nexports.ER_NULL_IN_VALUES_LESS_THAN = 1566;\nexports.ER_WRONG_PARTITION_NAME = 1567;\nexports.ER_CANT_CHANGE_TX_CHARACTERISTICS = 1568;\nexports.ER_DUP_ENTRY_AUTOINCREMENT_CASE = 1569;\nexports.ER_EVENT_MODIFY_QUEUE_ERROR = 1570;\nexports.ER_EVENT_SET_VAR_ERROR = 1571;\nexports.ER_PARTITION_MERGE_ERROR = 1572;\nexports.ER_CANT_ACTIVATE_LOG = 1573;\nexports.ER_RBR_NOT_AVAILABLE = 1574;\nexports.ER_BASE64_DECODE_ERROR = 1575;\nexports.ER_EVENT_RECURSION_FORBIDDEN = 1576;\nexports.ER_EVENTS_DB_ERROR = 1577;\nexports.ER_ONLY_INTEGERS_ALLOWED = 1578;\nexports.ER_UNSUPORTED_LOG_ENGINE = 1579;\nexports.ER_BAD_LOG_STATEMENT = 1580;\nexports.ER_CANT_RENAME_LOG_TABLE = 1581;\nexports.ER_WRONG_PARAMCOUNT_TO_NATIVE_FCT = 1582;\nexports.ER_WRONG_PARAMETERS_TO_NATIVE_FCT = 1583;\nexports.ER_WRONG_PARAMETERS_TO_STORED_FCT = 1584;\nexports.ER_NATIVE_FCT_NAME_COLLISION = 1585;\nexports.ER_DUP_ENTRY_WITH_KEY_NAME = 1586;\nexports.ER_BINLOG_PURGE_EMFILE = 1587;\nexports.ER_EVENT_CANNOT_CREATE_IN_THE_PAST = 1588;\nexports.ER_EVENT_CANNOT_ALTER_IN_THE_PAST = 1589;\nexports.ER_SLAVE_INCIDENT = 1590;\nexports.ER_NO_PARTITION_FOR_GIVEN_VALUE_SILENT = 1591;\nexports.ER_BINLOG_UNSAFE_STATEMENT = 1592;\nexports.ER_BINLOG_FATAL_ERROR = 1593;\nexports.ER_SLAVE_RELAY_LOG_READ_FAILURE = 1594;\nexports.ER_SLAVE_RELAY_LOG_WRITE_FAILURE = 1595;\nexports.ER_SLAVE_CREATE_EVENT_FAILURE = 1596;\nexports.ER_SLAVE_MASTER_COM_FAILURE = 1597;\nexports.ER_BINLOG_LOGGING_IMPOSSIBLE = 1598;\nexports.ER_VIEW_NO_CREATION_CTX = 1599;\nexports.ER_VIEW_INVALID_CREATION_CTX = 1600;\nexports.ER_SR_INVALID_CREATION_CTX = 1601;\nexports.ER_TRG_CORRUPTED_FILE = 1602;\nexports.ER_TRG_NO_CREATION_CTX = 1603;\nexports.ER_TRG_INVALID_CREATION_CTX = 1604;\nexports.ER_EVENT_INVALID_CREATION_CTX = 1605;\nexports.ER_TRG_CANT_OPEN_TABLE = 1606;\nexports.ER_CANT_CREATE_SROUTINE = 1607;\nexports.ER_NEVER_USED = 1608;\nexports.ER_NO_FORMAT_DESCRIPTION_EVENT_BEFORE_BINLOG_STATEMENT = 1609;\nexports.ER_REPLICA_CORRUPT_EVENT = 1610;\nexports.ER_LOAD_DATA_INVALID_COLUMN = 1611;\nexports.ER_LOG_PURGE_NO_FILE = 1612;\nexports.ER_XA_RBTIMEOUT = 1613;\nexports.ER_XA_RBDEADLOCK = 1614;\nexports.ER_NEED_REPREPARE = 1615;\nexports.ER_DELAYED_NOT_SUPPORTED = 1616;\nexports.WARN_NO_CONNECTION_METADATA = 1617;\nexports.WARN_OPTION_IGNORED = 1618;\nexports.ER_PLUGIN_DELETE_BUILTIN = 1619;\nexports.WARN_PLUGIN_BUSY = 1620;\nexports.ER_VARIABLE_IS_READONLY = 1621;\nexports.ER_WARN_ENGINE_TRANSACTION_ROLLBACK = 1622;\nexports.ER_SLAVE_HEARTBEAT_FAILURE = 1623;\nexports.ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE = 1624;\nexports.ER_NDB_REPLICATION_SCHEMA_ERROR = 1625;\nexports.ER_CONFLICT_FN_PARSE_ERROR = 1626;\nexports.ER_EXCEPTIONS_WRITE_ERROR = 1627;\nexports.ER_TOO_LONG_TABLE_COMMENT = 1628;\nexports.ER_TOO_LONG_FIELD_COMMENT = 1629;\nexports.ER_FUNC_INEXISTENT_NAME_COLLISION = 1630;\nexports.ER_DATABASE_NAME = 1631;\nexports.ER_TABLE_NAME = 1632;\nexports.ER_PARTITION_NAME = 1633;\nexports.ER_SUBPARTITION_NAME = 1634;\nexports.ER_TEMPORARY_NAME = 1635;\nexports.ER_RENAMED_NAME = 1636;\nexports.ER_TOO_MANY_CONCURRENT_TRXS = 1637;\nexports.WARN_NON_ASCII_SEPARATOR_NOT_IMPLEMENTED = 1638;\nexports.ER_DEBUG_SYNC_TIMEOUT = 1639;\nexports.ER_DEBUG_SYNC_HIT_LIMIT = 1640;\nexports.ER_DUP_SIGNAL_SET = 1641;\nexports.ER_SIGNAL_WARN = 1642;\nexports.ER_SIGNAL_NOT_FOUND = 1643;\nexports.ER_SIGNAL_EXCEPTION = 1644;\nexports.ER_RESIGNAL_WITHOUT_ACTIVE_HANDLER = 1645;\nexports.ER_SIGNAL_BAD_CONDITION_TYPE = 1646;\nexports.WARN_COND_ITEM_TRUNCATED = 1647;\nexports.ER_COND_ITEM_TOO_LONG = 1648;\nexports.ER_UNKNOWN_LOCALE = 1649;\nexports.ER_REPLICA_IGNORE_SERVER_IDS = 1650;\nexports.ER_QUERY_CACHE_DISABLED = 1651;\nexports.ER_SAME_NAME_PARTITION_FIELD = 1652;\nexports.ER_PARTITION_COLUMN_LIST_ERROR = 1653;\nexports.ER_WRONG_TYPE_COLUMN_VALUE_ERROR = 1654;\nexports.ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR = 1655;\nexports.ER_MAXVALUE_IN_VALUES_IN = 1656;\nexports.ER_TOO_MANY_VALUES_ERROR = 1657;\nexports.ER_ROW_SINGLE_PARTITION_FIELD_ERROR = 1658;\nexports.ER_FIELD_TYPE_NOT_ALLOWED_AS_PARTITION_FIELD = 1659;\nexports.ER_PARTITION_FIELDS_TOO_LONG = 1660;\nexports.ER_BINLOG_ROW_ENGINE_AND_STMT_ENGINE = 1661;\nexports.ER_BINLOG_ROW_MODE_AND_STMT_ENGINE = 1662;\nexports.ER_BINLOG_UNSAFE_AND_STMT_ENGINE = 1663;\nexports.ER_BINLOG_ROW_INJECTION_AND_STMT_ENGINE = 1664;\nexports.ER_BINLOG_STMT_MODE_AND_ROW_ENGINE = 1665;\nexports.ER_BINLOG_ROW_INJECTION_AND_STMT_MODE = 1666;\nexports.ER_BINLOG_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE = 1667;\nexports.ER_BINLOG_UNSAFE_LIMIT = 1668;\nexports.ER_UNUSED4 = 1669;\nexports.ER_BINLOG_UNSAFE_SYSTEM_TABLE = 1670;\nexports.ER_BINLOG_UNSAFE_AUTOINC_COLUMNS = 1671;\nexports.ER_BINLOG_UNSAFE_UDF = 1672;\nexports.ER_BINLOG_UNSAFE_SYSTEM_VARIABLE = 1673;\nexports.ER_BINLOG_UNSAFE_SYSTEM_FUNCTION = 1674;\nexports.ER_BINLOG_UNSAFE_NONTRANS_AFTER_TRANS = 1675;\nexports.ER_MESSAGE_AND_STATEMENT = 1676;\nexports.ER_SLAVE_CONVERSION_FAILED = 1677;\nexports.ER_REPLICA_CANT_CREATE_CONVERSION = 1678;\nexports.ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_FORMAT = 1679;\nexports.ER_PATH_LENGTH = 1680;\nexports.ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT = 1681;\nexports.ER_WRONG_NATIVE_TABLE_STRUCTURE = 1682;\nexports.ER_WRONG_PERFSCHEMA_USAGE = 1683;\nexports.ER_WARN_I_S_SKIPPED_TABLE = 1684;\nexports.ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_DIRECT = 1685;\nexports.ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_DIRECT = 1686;\nexports.ER_SPATIAL_MUST_HAVE_GEOM_COL = 1687;\nexports.ER_TOO_LONG_INDEX_COMMENT = 1688;\nexports.ER_LOCK_ABORTED = 1689;\nexports.ER_DATA_OUT_OF_RANGE = 1690;\nexports.ER_WRONG_SPVAR_TYPE_IN_LIMIT = 1691;\nexports.ER_BINLOG_UNSAFE_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE = 1692;\nexports.ER_BINLOG_UNSAFE_MIXED_STATEMENT = 1693;\nexports.ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_SQL_LOG_BIN = 1694;\nexports.ER_STORED_FUNCTION_PREVENTS_SWITCH_SQL_LOG_BIN = 1695;\nexports.ER_FAILED_READ_FROM_PAR_FILE = 1696;\nexports.ER_VALUES_IS_NOT_INT_TYPE_ERROR = 1697;\nexports.ER_ACCESS_DENIED_NO_PASSWORD_ERROR = 1698;\nexports.ER_SET_PASSWORD_AUTH_PLUGIN = 1699;\nexports.ER_GRANT_PLUGIN_USER_EXISTS = 1700;\nexports.ER_TRUNCATE_ILLEGAL_FK = 1701;\nexports.ER_PLUGIN_IS_PERMANENT = 1702;\nexports.ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN = 1703;\nexports.ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX = 1704;\nexports.ER_STMT_CACHE_FULL = 1705;\nexports.ER_MULTI_UPDATE_KEY_CONFLICT = 1706;\nexports.ER_TABLE_NEEDS_REBUILD = 1707;\nexports.WARN_OPTION_BELOW_LIMIT = 1708;\nexports.ER_INDEX_COLUMN_TOO_LONG = 1709;\nexports.ER_ERROR_IN_TRIGGER_BODY = 1710;\nexports.ER_ERROR_IN_UNKNOWN_TRIGGER_BODY = 1711;\nexports.ER_INDEX_CORRUPT = 1712;\nexports.ER_UNDO_RECORD_TOO_BIG = 1713;\nexports.ER_BINLOG_UNSAFE_INSERT_IGNORE_SELECT = 1714;\nexports.ER_BINLOG_UNSAFE_INSERT_SELECT_UPDATE = 1715;\nexports.ER_BINLOG_UNSAFE_REPLACE_SELECT = 1716;\nexports.ER_BINLOG_UNSAFE_CREATE_IGNORE_SELECT = 1717;\nexports.ER_BINLOG_UNSAFE_CREATE_REPLACE_SELECT = 1718;\nexports.ER_BINLOG_UNSAFE_UPDATE_IGNORE = 1719;\nexports.ER_PLUGIN_NO_UNINSTALL = 1720;\nexports.ER_PLUGIN_NO_INSTALL = 1721;\nexports.ER_BINLOG_UNSAFE_WRITE_AUTOINC_SELECT = 1722;\nexports.ER_BINLOG_UNSAFE_CREATE_SELECT_AUTOINC = 1723;\nexports.ER_BINLOG_UNSAFE_INSERT_TWO_KEYS = 1724;\nexports.ER_TABLE_IN_FK_CHECK = 1725;\nexports.ER_UNSUPPORTED_ENGINE = 1726;\nexports.ER_BINLOG_UNSAFE_AUTOINC_NOT_FIRST = 1727;\nexports.ER_CANNOT_LOAD_FROM_TABLE_V2 = 1728;\nexports.ER_SOURCE_DELAY_VALUE_OUT_OF_RANGE = 1729;\nexports.ER_ONLY_FD_AND_RBR_EVENTS_ALLOWED_IN_BINLOG_STATEMENT = 1730;\nexports.ER_PARTITION_EXCHANGE_DIFFERENT_OPTION = 1731;\nexports.ER_PARTITION_EXCHANGE_PART_TABLE = 1732;\nexports.ER_PARTITION_EXCHANGE_TEMP_TABLE = 1733;\nexports.ER_PARTITION_INSTEAD_OF_SUBPARTITION = 1734;\nexports.ER_UNKNOWN_PARTITION = 1735;\nexports.ER_TABLES_DIFFERENT_METADATA = 1736;\nexports.ER_ROW_DOES_NOT_MATCH_PARTITION = 1737;\nexports.ER_BINLOG_CACHE_SIZE_GREATER_THAN_MAX = 1738;\nexports.ER_WARN_INDEX_NOT_APPLICABLE = 1739;\nexports.ER_PARTITION_EXCHANGE_FOREIGN_KEY = 1740;\nexports.ER_NO_SUCH_KEY_VALUE = 1741;\nexports.ER_RPL_INFO_DATA_TOO_LONG = 1742;\nexports.ER_NETWORK_READ_EVENT_CHECKSUM_FAILURE = 1743;\nexports.ER_BINLOG_READ_EVENT_CHECKSUM_FAILURE = 1744;\nexports.ER_BINLOG_STMT_CACHE_SIZE_GREATER_THAN_MAX = 1745;\nexports.ER_CANT_UPDATE_TABLE_IN_CREATE_TABLE_SELECT = 1746;\nexports.ER_PARTITION_CLAUSE_ON_NONPARTITIONED = 1747;\nexports.ER_ROW_DOES_NOT_MATCH_GIVEN_PARTITION_SET = 1748;\nexports.ER_NO_SUCH_PARTITION = 1749;\nexports.ER_CHANGE_RPL_INFO_REPOSITORY_FAILURE = 1750;\nexports.ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_CREATED_TEMP_TABLE = 1751;\nexports.ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_DROPPED_TEMP_TABLE = 1752;\nexports.ER_MTA_FEATURE_IS_NOT_SUPPORTED = 1753;\nexports.ER_MTA_UPDATED_DBS_GREATER_MAX = 1754;\nexports.ER_MTA_CANT_PARALLEL = 1755;\nexports.ER_MTA_INCONSISTENT_DATA = 1756;\nexports.ER_FULLTEXT_NOT_SUPPORTED_WITH_PARTITIONING = 1757;\nexports.ER_DA_INVALID_CONDITION_NUMBER = 1758;\nexports.ER_INSECURE_PLAIN_TEXT = 1759;\nexports.ER_INSECURE_CHANGE_SOURCE = 1760;\nexports.ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO = 1761;\nexports.ER_FOREIGN_DUPLICATE_KEY_WITHOUT_CHILD_INFO = 1762;\nexports.ER_SQLTHREAD_WITH_SECURE_REPLICA = 1763;\nexports.ER_TABLE_HAS_NO_FT = 1764;\nexports.ER_VARIABLE_NOT_SETTABLE_IN_SF_OR_TRIGGER = 1765;\nexports.ER_VARIABLE_NOT_SETTABLE_IN_TRANSACTION = 1766;\nexports.ER_GTID_NEXT_IS_NOT_IN_GTID_NEXT_LIST = 1767;\nexports.ER_CANT_CHANGE_GTID_NEXT_IN_TRANSACTION = 1768;\nexports.ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION = 1769;\nexports.ER_GTID_NEXT_CANT_BE_AUTOMATIC_IF_GTID_NEXT_LIST_IS_NON_NULL = 1770;\nexports.ER_SKIPPING_LOGGED_TRANSACTION = 1771;\nexports.ER_MALFORMED_GTID_SET_SPECIFICATION = 1772;\nexports.ER_MALFORMED_GTID_SET_ENCODING = 1773;\nexports.ER_MALFORMED_GTID_SPECIFICATION = 1774;\nexports.ER_GNO_EXHAUSTED = 1775;\nexports.ER_BAD_REPLICA_AUTO_POSITION = 1776;\nexports.ER_AUTO_POSITION_REQUIRES_GTID_MODE_NOT_OFF = 1777;\nexports.ER_CANT_DO_IMPLICIT_COMMIT_IN_TRX_WHEN_GTID_NEXT_IS_SET = 1778;\nexports.ER_GTID_MODE_ON_REQUIRES_ENFORCE_GTID_CONSISTENCY_ON = 1779;\nexports.ER_GTID_MODE_REQUIRES_BINLOG = 1780;\nexports.ER_CANT_SET_GTID_NEXT_TO_GTID_WHEN_GTID_MODE_IS_OFF = 1781;\nexports.ER_CANT_SET_GTID_NEXT_TO_ANONYMOUS_WHEN_GTID_MODE_IS_ON = 1782;\nexports.ER_CANT_SET_GTID_NEXT_LIST_TO_NON_NULL_WHEN_GTID_MODE_IS_OFF = 1783;\nexports.ER_FOUND_GTID_EVENT_WHEN_GTID_MODE_IS_OFF = 1784;\nexports.ER_GTID_UNSAFE_NON_TRANSACTIONAL_TABLE = 1785;\nexports.ER_GTID_UNSAFE_CREATE_SELECT = 1786;\nexports.ER_GTID_UNSAFE_CREATE_DROP_TEMP_TABLE_IN_TRANSACTION = 1787;\nexports.ER_GTID_MODE_CAN_ONLY_CHANGE_ONE_STEP_AT_A_TIME = 1788;\nexports.ER_SOURCE_HAS_PURGED_REQUIRED_GTIDS = 1789;\nexports.ER_CANT_SET_GTID_NEXT_WHEN_OWNING_GTID = 1790;\nexports.ER_UNKNOWN_EXPLAIN_FORMAT = 1791;\nexports.ER_CANT_EXECUTE_IN_READ_ONLY_TRANSACTION = 1792;\nexports.ER_TOO_LONG_TABLE_PARTITION_COMMENT = 1793;\nexports.ER_REPLICA_CONFIGURATION = 1794;\nexports.ER_INNODB_FT_LIMIT = 1795;\nexports.ER_INNODB_NO_FT_TEMP_TABLE = 1796;\nexports.ER_INNODB_FT_WRONG_DOCID_COLUMN = 1797;\nexports.ER_INNODB_FT_WRONG_DOCID_INDEX = 1798;\nexports.ER_INNODB_ONLINE_LOG_TOO_BIG = 1799;\nexports.ER_UNKNOWN_ALTER_ALGORITHM = 1800;\nexports.ER_UNKNOWN_ALTER_LOCK = 1801;\nexports.ER_MTA_CHANGE_SOURCE_CANT_RUN_WITH_GAPS = 1802;\nexports.ER_MTA_RECOVERY_FAILURE = 1803;\nexports.ER_MTA_RESET_WORKERS = 1804;\nexports.ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2 = 1805;\nexports.ER_REPLICA_SILENT_RETRY_TRANSACTION = 1806;\nexports.ER_DISCARD_FK_CHECKS_RUNNING = 1807;\nexports.ER_TABLE_SCHEMA_MISMATCH = 1808;\nexports.ER_TABLE_IN_SYSTEM_TABLESPACE = 1809;\nexports.ER_IO_READ_ERROR = 1810;\nexports.ER_IO_WRITE_ERROR = 1811;\nexports.ER_TABLESPACE_MISSING = 1812;\nexports.ER_TABLESPACE_EXISTS = 1813;\nexports.ER_TABLESPACE_DISCARDED = 1814;\nexports.ER_INTERNAL_ERROR = 1815;\nexports.ER_INNODB_IMPORT_ERROR = 1816;\nexports.ER_INNODB_INDEX_CORRUPT = 1817;\nexports.ER_INVALID_YEAR_COLUMN_LENGTH = 1818;\nexports.ER_NOT_VALID_PASSWORD = 1819;\nexports.ER_MUST_CHANGE_PASSWORD = 1820;\nexports.ER_FK_NO_INDEX_CHILD = 1821;\nexports.ER_FK_NO_INDEX_PARENT = 1822;\nexports.ER_FK_FAIL_ADD_SYSTEM = 1823;\nexports.ER_FK_CANNOT_OPEN_PARENT = 1824;\nexports.ER_FK_INCORRECT_OPTION = 1825;\nexports.ER_FK_DUP_NAME = 1826;\nexports.ER_PASSWORD_FORMAT = 1827;\nexports.ER_FK_COLUMN_CANNOT_DROP = 1828;\nexports.ER_FK_COLUMN_CANNOT_DROP_CHILD = 1829;\nexports.ER_FK_COLUMN_NOT_NULL = 1830;\nexports.ER_DUP_INDEX = 1831;\nexports.ER_FK_COLUMN_CANNOT_CHANGE = 1832;\nexports.ER_FK_COLUMN_CANNOT_CHANGE_CHILD = 1833;\nexports.ER_UNUSED5 = 1834;\nexports.ER_MALFORMED_PACKET = 1835;\nexports.ER_READ_ONLY_MODE = 1836;\nexports.ER_GTID_NEXT_TYPE_UNDEFINED_GTID = 1837;\nexports.ER_VARIABLE_NOT_SETTABLE_IN_SP = 1838;\nexports.ER_CANT_SET_GTID_PURGED_WHEN_GTID_MODE_IS_OFF = 1839;\nexports.ER_CANT_SET_GTID_PURGED_WHEN_GTID_EXECUTED_IS_NOT_EMPTY = 1840;\nexports.ER_CANT_SET_GTID_PURGED_WHEN_OWNED_GTIDS_IS_NOT_EMPTY = 1841;\nexports.ER_GTID_PURGED_WAS_CHANGED = 1842;\nexports.ER_GTID_EXECUTED_WAS_CHANGED = 1843;\nexports.ER_BINLOG_STMT_MODE_AND_NO_REPL_TABLES = 1844;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED = 1845;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON = 1846;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COPY = 1847;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_PARTITION = 1848;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_RENAME = 1849;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COLUMN_TYPE = 1850;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_CHECK = 1851;\nexports.ER_UNUSED6 = 1852;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOPK = 1853;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_AUTOINC = 1854;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_HIDDEN_FTS = 1855;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_CHANGE_FTS = 1856;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FTS = 1857;\nexports.ER_SQL_REPLICA_SKIP_COUNTER_NOT_SETTABLE_IN_GTID_MODE = 1858;\nexports.ER_DUP_UNKNOWN_IN_INDEX = 1859;\nexports.ER_IDENT_CAUSES_TOO_LONG_PATH = 1860;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOT_NULL = 1861;\nexports.ER_MUST_CHANGE_PASSWORD_LOGIN = 1862;\nexports.ER_ROW_IN_WRONG_PARTITION = 1863;\nexports.ER_MTA_EVENT_BIGGER_PENDING_JOBS_SIZE_MAX = 1864;\nexports.ER_INNODB_NO_FT_USES_PARSER = 1865;\nexports.ER_BINLOG_LOGICAL_CORRUPTION = 1866;\nexports.ER_WARN_PURGE_LOG_IN_USE = 1867;\nexports.ER_WARN_PURGE_LOG_IS_ACTIVE = 1868;\nexports.ER_AUTO_INCREMENT_CONFLICT = 1869;\nexports.WARN_ON_BLOCKHOLE_IN_RBR = 1870;\nexports.ER_REPLICA_CM_INIT_REPOSITORY = 1871;\nexports.ER_REPLICA_AM_INIT_REPOSITORY = 1872;\nexports.ER_ACCESS_DENIED_CHANGE_USER_ERROR = 1873;\nexports.ER_INNODB_READ_ONLY = 1874;\nexports.ER_STOP_REPLICA_SQL_THREAD_TIMEOUT = 1875;\nexports.ER_STOP_REPLICA_IO_THREAD_TIMEOUT = 1876;\nexports.ER_TABLE_CORRUPT = 1877;\nexports.ER_TEMP_FILE_WRITE_FAILURE = 1878;\nexports.ER_INNODB_FT_AUX_NOT_HEX_ID = 1879;\nexports.ER_OLD_TEMPORALS_UPGRADED = 1880;\nexports.ER_INNODB_FORCED_RECOVERY = 1881;\nexports.ER_AES_INVALID_IV = 1882;\nexports.ER_PLUGIN_CANNOT_BE_UNINSTALLED = 1883;\nexports.ER_GTID_UNSAFE_BINLOG_SPLITTABLE_STATEMENT_AND_ASSIGNED_GTID = 1884;\nexports.ER_REPLICA_HAS_MORE_GTIDS_THAN_SOURCE = 1885;\nexports.ER_MISSING_KEY = 1886;\nexports.WARN_NAMED_PIPE_ACCESS_EVERYONE = 1887;\nexports.ER_FILE_CORRUPT = 3000;\nexports.ER_ERROR_ON_SOURCE = 3001;\nexports.ER_INCONSISTENT_ERROR = 3002;\nexports.ER_STORAGE_ENGINE_NOT_LOADED = 3003;\nexports.ER_GET_STACKED_DA_WITHOUT_ACTIVE_HANDLER = 3004;\nexports.ER_WARN_LEGACY_SYNTAX_CONVERTED = 3005;\nexports.ER_BINLOG_UNSAFE_FULLTEXT_PLUGIN = 3006;\nexports.ER_CANNOT_DISCARD_TEMPORARY_TABLE = 3007;\nexports.ER_FK_DEPTH_EXCEEDED = 3008;\nexports.ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE_V2 = 3009;\nexports.ER_WARN_TRIGGER_DOESNT_HAVE_CREATED = 3010;\nexports.ER_REFERENCED_TRG_DOES_NOT_EXIST = 3011;\nexports.ER_EXPLAIN_NOT_SUPPORTED = 3012;\nexports.ER_INVALID_FIELD_SIZE = 3013;\nexports.ER_MISSING_HA_CREATE_OPTION = 3014;\nexports.ER_ENGINE_OUT_OF_MEMORY = 3015;\nexports.ER_PASSWORD_EXPIRE_ANONYMOUS_USER = 3016;\nexports.ER_REPLICA_SQL_THREAD_MUST_STOP = 3017;\nexports.ER_NO_FT_MATERIALIZED_SUBQUERY = 3018;\nexports.ER_INNODB_UNDO_LOG_FULL = 3019;\nexports.ER_INVALID_ARGUMENT_FOR_LOGARITHM = 3020;\nexports.ER_REPLICA_CHANNEL_IO_THREAD_MUST_STOP = 3021;\nexports.ER_WARN_OPEN_TEMP_TABLES_MUST_BE_ZERO = 3022;\nexports.ER_WARN_ONLY_SOURCE_LOG_FILE_NO_POS = 3023;\nexports.ER_QUERY_TIMEOUT = 3024;\nexports.ER_NON_RO_SELECT_DISABLE_TIMER = 3025;\nexports.ER_DUP_LIST_ENTRY = 3026;\nexports.ER_SQL_MODE_NO_EFFECT = 3027;\nexports.ER_AGGREGATE_ORDER_FOR_UNION = 3028;\nexports.ER_AGGREGATE_ORDER_NON_AGG_QUERY = 3029;\nexports.ER_REPLICA_WORKER_STOPPED_PREVIOUS_THD_ERROR = 3030;\nexports.ER_DONT_SUPPORT_REPLICA_PRESERVE_COMMIT_ORDER = 3031;\nexports.ER_SERVER_OFFLINE_MODE = 3032;\nexports.ER_GIS_DIFFERENT_SRIDS = 3033;\nexports.ER_GIS_UNSUPPORTED_ARGUMENT = 3034;\nexports.ER_GIS_UNKNOWN_ERROR = 3035;\nexports.ER_GIS_UNKNOWN_EXCEPTION = 3036;\nexports.ER_GIS_INVALID_DATA = 3037;\nexports.ER_BOOST_GEOMETRY_EMPTY_INPUT_EXCEPTION = 3038;\nexports.ER_BOOST_GEOMETRY_CENTROID_EXCEPTION = 3039;\nexports.ER_BOOST_GEOMETRY_OVERLAY_INVALID_INPUT_EXCEPTION = 3040;\nexports.ER_BOOST_GEOMETRY_TURN_INFO_EXCEPTION = 3041;\nexports.ER_BOOST_GEOMETRY_SELF_INTERSECTION_POINT_EXCEPTION = 3042;\nexports.ER_BOOST_GEOMETRY_UNKNOWN_EXCEPTION = 3043;\nexports.ER_STD_BAD_ALLOC_ERROR = 3044;\nexports.ER_STD_DOMAIN_ERROR = 3045;\nexports.ER_STD_LENGTH_ERROR = 3046;\nexports.ER_STD_INVALID_ARGUMENT = 3047;\nexports.ER_STD_OUT_OF_RANGE_ERROR = 3048;\nexports.ER_STD_OVERFLOW_ERROR = 3049;\nexports.ER_STD_RANGE_ERROR = 3050;\nexports.ER_STD_UNDERFLOW_ERROR = 3051;\nexports.ER_STD_LOGIC_ERROR = 3052;\nexports.ER_STD_RUNTIME_ERROR = 3053;\nexports.ER_STD_UNKNOWN_EXCEPTION = 3054;\nexports.ER_GIS_DATA_WRONG_ENDIANESS = 3055;\nexports.ER_CHANGE_SOURCE_PASSWORD_LENGTH = 3056;\nexports.ER_USER_LOCK_WRONG_NAME = 3057;\nexports.ER_USER_LOCK_DEADLOCK = 3058;\nexports.ER_REPLACE_INACCESSIBLE_ROWS = 3059;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_GIS = 3060;\nexports.ER_ILLEGAL_USER_VAR = 3061;\nexports.ER_GTID_MODE_OFF = 3062;\nexports.ER_UNSUPPORTED_BY_REPLICATION_THREAD = 3063;\nexports.ER_INCORRECT_TYPE = 3064;\nexports.ER_FIELD_IN_ORDER_NOT_SELECT = 3065;\nexports.ER_AGGREGATE_IN_ORDER_NOT_SELECT = 3066;\nexports.ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN = 3067;\nexports.ER_NET_OK_PACKET_TOO_LARGE = 3068;\nexports.ER_INVALID_JSON_DATA = 3069;\nexports.ER_INVALID_GEOJSON_MISSING_MEMBER = 3070;\nexports.ER_INVALID_GEOJSON_WRONG_TYPE = 3071;\nexports.ER_INVALID_GEOJSON_UNSPECIFIED = 3072;\nexports.ER_DIMENSION_UNSUPPORTED = 3073;\nexports.ER_REPLICA_CHANNEL_DOES_NOT_EXIST = 3074;\nexports.ER_SLAVE_MULTIPLE_CHANNELS_HOST_PORT = 3075;\nexports.ER_REPLICA_CHANNEL_NAME_INVALID_OR_TOO_LONG = 3076;\nexports.ER_REPLICA_NEW_CHANNEL_WRONG_REPOSITORY = 3077;\nexports.ER_SLAVE_CHANNEL_DELETE = 3078;\nexports.ER_REPLICA_MULTIPLE_CHANNELS_CMD = 3079;\nexports.ER_REPLICA_MAX_CHANNELS_EXCEEDED = 3080;\nexports.ER_REPLICA_CHANNEL_MUST_STOP = 3081;\nexports.ER_REPLICA_CHANNEL_NOT_RUNNING = 3082;\nexports.ER_REPLICA_CHANNEL_WAS_RUNNING = 3083;\nexports.ER_REPLICA_CHANNEL_WAS_NOT_RUNNING = 3084;\nexports.ER_REPLICA_CHANNEL_SQL_THREAD_MUST_STOP = 3085;\nexports.ER_REPLICA_CHANNEL_SQL_SKIP_COUNTER = 3086;\nexports.ER_WRONG_FIELD_WITH_GROUP_V2 = 3087;\nexports.ER_MIX_OF_GROUP_FUNC_AND_FIELDS_V2 = 3088;\nexports.ER_WARN_DEPRECATED_SYSVAR_UPDATE = 3089;\nexports.ER_WARN_DEPRECATED_SQLMODE = 3090;\nexports.ER_CANNOT_LOG_PARTIAL_DROP_DATABASE_WITH_GTID = 3091;\nexports.ER_GROUP_REPLICATION_CONFIGURATION = 3092;\nexports.ER_GROUP_REPLICATION_RUNNING = 3093;\nexports.ER_GROUP_REPLICATION_APPLIER_INIT_ERROR = 3094;\nexports.ER_GROUP_REPLICATION_STOP_APPLIER_THREAD_TIMEOUT = 3095;\nexports.ER_GROUP_REPLICATION_COMMUNICATION_LAYER_SESSION_ERROR = 3096;\nexports.ER_GROUP_REPLICATION_COMMUNICATION_LAYER_JOIN_ERROR = 3097;\nexports.ER_BEFORE_DML_VALIDATION_ERROR = 3098;\nexports.ER_PREVENTS_VARIABLE_WITHOUT_RBR = 3099;\nexports.ER_RUN_HOOK_ERROR = 3100;\nexports.ER_TRANSACTION_ROLLBACK_DURING_COMMIT = 3101;\nexports.ER_GENERATED_COLUMN_FUNCTION_IS_NOT_ALLOWED = 3102;\nexports.ER_UNSUPPORTED_ALTER_INPLACE_ON_VIRTUAL_COLUMN = 3103;\nexports.ER_WRONG_FK_OPTION_FOR_GENERATED_COLUMN = 3104;\nexports.ER_NON_DEFAULT_VALUE_FOR_GENERATED_COLUMN = 3105;\nexports.ER_UNSUPPORTED_ACTION_ON_GENERATED_COLUMN = 3106;\nexports.ER_GENERATED_COLUMN_NON_PRIOR = 3107;\nexports.ER_DEPENDENT_BY_GENERATED_COLUMN = 3108;\nexports.ER_GENERATED_COLUMN_REF_AUTO_INC = 3109;\nexports.ER_FEATURE_NOT_AVAILABLE = 3110;\nexports.ER_CANT_SET_GTID_MODE = 3111;\nexports.ER_CANT_USE_AUTO_POSITION_WITH_GTID_MODE_OFF = 3112;\nexports.ER_CANT_REPLICATE_ANONYMOUS_WITH_AUTO_POSITION = 3113;\nexports.ER_CANT_REPLICATE_ANONYMOUS_WITH_GTID_MODE_ON = 3114;\nexports.ER_CANT_REPLICATE_GTID_WITH_GTID_MODE_OFF = 3115;\nexports.ER_CANT_ENFORCE_GTID_CONSISTENCY_WITH_ONGOING_GTID_VIOLATING_TX = 3116;\nexports.ER_ENFORCE_GTID_CONSISTENCY_WARN_WITH_ONGOING_GTID_VIOLATING_TX = 3117;\nexports.ER_ACCOUNT_HAS_BEEN_LOCKED = 3118;\nexports.ER_WRONG_TABLESPACE_NAME = 3119;\nexports.ER_TABLESPACE_IS_NOT_EMPTY = 3120;\nexports.ER_WRONG_FILE_NAME = 3121;\nexports.ER_BOOST_GEOMETRY_INCONSISTENT_TURNS_EXCEPTION = 3122;\nexports.ER_WARN_OPTIMIZER_HINT_SYNTAX_ERROR = 3123;\nexports.ER_WARN_BAD_MAX_EXECUTION_TIME = 3124;\nexports.ER_WARN_UNSUPPORTED_MAX_EXECUTION_TIME = 3125;\nexports.ER_WARN_CONFLICTING_HINT = 3126;\nexports.ER_WARN_UNKNOWN_QB_NAME = 3127;\nexports.ER_UNRESOLVED_HINT_NAME = 3128;\nexports.ER_WARN_ON_MODIFYING_GTID_EXECUTED_TABLE = 3129;\nexports.ER_PLUGGABLE_PROTOCOL_COMMAND_NOT_SUPPORTED = 3130;\nexports.ER_LOCKING_SERVICE_WRONG_NAME = 3131;\nexports.ER_LOCKING_SERVICE_DEADLOCK = 3132;\nexports.ER_LOCKING_SERVICE_TIMEOUT = 3133;\nexports.ER_GIS_MAX_POINTS_IN_GEOMETRY_OVERFLOWED = 3134;\nexports.ER_SQL_MODE_MERGED = 3135;\nexports.ER_VTOKEN_PLUGIN_TOKEN_MISMATCH = 3136;\nexports.ER_VTOKEN_PLUGIN_TOKEN_NOT_FOUND = 3137;\nexports.ER_CANT_SET_VARIABLE_WHEN_OWNING_GTID = 3138;\nexports.ER_REPLICA_CHANNEL_OPERATION_NOT_ALLOWED = 3139;\nexports.ER_INVALID_JSON_TEXT = 3140;\nexports.ER_INVALID_JSON_TEXT_IN_PARAM = 3141;\nexports.ER_INVALID_JSON_BINARY_DATA = 3142;\nexports.ER_INVALID_JSON_PATH = 3143;\nexports.ER_INVALID_JSON_CHARSET = 3144;\nexports.ER_INVALID_JSON_CHARSET_IN_FUNCTION = 3145;\nexports.ER_INVALID_TYPE_FOR_JSON = 3146;\nexports.ER_INVALID_CAST_TO_JSON = 3147;\nexports.ER_INVALID_JSON_PATH_CHARSET = 3148;\nexports.ER_INVALID_JSON_PATH_WILDCARD = 3149;\nexports.ER_JSON_VALUE_TOO_BIG = 3150;\nexports.ER_JSON_KEY_TOO_BIG = 3151;\nexports.ER_JSON_USED_AS_KEY = 3152;\nexports.ER_JSON_VACUOUS_PATH = 3153;\nexports.ER_JSON_BAD_ONE_OR_ALL_ARG = 3154;\nexports.ER_NUMERIC_JSON_VALUE_OUT_OF_RANGE = 3155;\nexports.ER_INVALID_JSON_VALUE_FOR_CAST = 3156;\nexports.ER_JSON_DOCUMENT_TOO_DEEP = 3157;\nexports.ER_JSON_DOCUMENT_NULL_KEY = 3158;\nexports.ER_SECURE_TRANSPORT_REQUIRED = 3159;\nexports.ER_NO_SECURE_TRANSPORTS_CONFIGURED = 3160;\nexports.ER_DISABLED_STORAGE_ENGINE = 3161;\nexports.ER_USER_DOES_NOT_EXIST = 3162;\nexports.ER_USER_ALREADY_EXISTS = 3163;\nexports.ER_AUDIT_API_ABORT = 3164;\nexports.ER_INVALID_JSON_PATH_ARRAY_CELL = 3165;\nexports.ER_BUFPOOL_RESIZE_INPROGRESS = 3166;\nexports.ER_FEATURE_DISABLED_SEE_DOC = 3167;\nexports.ER_SERVER_ISNT_AVAILABLE = 3168;\nexports.ER_SESSION_WAS_KILLED = 3169;\nexports.ER_CAPACITY_EXCEEDED = 3170;\nexports.ER_CAPACITY_EXCEEDED_IN_RANGE_OPTIMIZER = 3171;\nexports.ER_TABLE_NEEDS_UPG_PART = 3172;\nexports.ER_CANT_WAIT_FOR_EXECUTED_GTID_SET_WHILE_OWNING_A_GTID = 3173;\nexports.ER_CANNOT_ADD_FOREIGN_BASE_COL_VIRTUAL = 3174;\nexports.ER_CANNOT_CREATE_VIRTUAL_INDEX_CONSTRAINT = 3175;\nexports.ER_ERROR_ON_MODIFYING_GTID_EXECUTED_TABLE = 3176;\nexports.ER_LOCK_REFUSED_BY_ENGINE = 3177;\nexports.ER_UNSUPPORTED_ALTER_ONLINE_ON_VIRTUAL_COLUMN = 3178;\nexports.ER_MASTER_KEY_ROTATION_NOT_SUPPORTED_BY_SE = 3179;\nexports.ER_MASTER_KEY_ROTATION_ERROR_BY_SE = 3180;\nexports.ER_MASTER_KEY_ROTATION_BINLOG_FAILED = 3181;\nexports.ER_MASTER_KEY_ROTATION_SE_UNAVAILABLE = 3182;\nexports.ER_TABLESPACE_CANNOT_ENCRYPT = 3183;\nexports.ER_INVALID_ENCRYPTION_OPTION = 3184;\nexports.ER_CANNOT_FIND_KEY_IN_KEYRING = 3185;\nexports.ER_CAPACITY_EXCEEDED_IN_PARSER = 3186;\nexports.ER_UNSUPPORTED_ALTER_ENCRYPTION_INPLACE = 3187;\nexports.ER_KEYRING_UDF_KEYRING_SERVICE_ERROR = 3188;\nexports.ER_USER_COLUMN_OLD_LENGTH = 3189;\nexports.ER_CANT_RESET_SOURCE = 3190;\nexports.ER_GROUP_REPLICATION_MAX_GROUP_SIZE = 3191;\nexports.ER_CANNOT_ADD_FOREIGN_BASE_COL_STORED = 3192;\nexports.ER_TABLE_REFERENCED = 3193;\nexports.ER_PARTITION_ENGINE_DEPRECATED_FOR_TABLE = 3194;\nexports.ER_WARN_USING_GEOMFROMWKB_TO_SET_SRID_ZERO = 3195;\nexports.ER_WARN_USING_GEOMFROMWKB_TO_SET_SRID = 3196;\nexports.ER_XA_RETRY = 3197;\nexports.ER_KEYRING_AWS_UDF_AWS_KMS_ERROR = 3198;\nexports.ER_BINLOG_UNSAFE_XA = 3199;\nexports.ER_UDF_ERROR = 3200;\nexports.ER_KEYRING_MIGRATION_FAILURE = 3201;\nexports.ER_KEYRING_ACCESS_DENIED_ERROR = 3202;\nexports.ER_KEYRING_MIGRATION_STATUS = 3203;\nexports.ER_PLUGIN_FAILED_TO_OPEN_TABLES = 3204;\nexports.ER_PLUGIN_FAILED_TO_OPEN_TABLE = 3205;\nexports.ER_AUDIT_LOG_NO_KEYRING_PLUGIN_INSTALLED = 3206;\nexports.ER_AUDIT_LOG_ENCRYPTION_PASSWORD_HAS_NOT_BEEN_SET = 3207;\nexports.ER_AUDIT_LOG_COULD_NOT_CREATE_AES_KEY = 3208;\nexports.ER_AUDIT_LOG_ENCRYPTION_PASSWORD_CANNOT_BE_FETCHED = 3209;\nexports.ER_AUDIT_LOG_JSON_FILTERING_NOT_ENABLED = 3210;\nexports.ER_AUDIT_LOG_UDF_INSUFFICIENT_PRIVILEGE = 3211;\nexports.ER_AUDIT_LOG_SUPER_PRIVILEGE_REQUIRED = 3212;\nexports.ER_COULD_NOT_REINITIALIZE_AUDIT_LOG_FILTERS = 3213;\nexports.ER_AUDIT_LOG_UDF_INVALID_ARGUMENT_TYPE = 3214;\nexports.ER_AUDIT_LOG_UDF_INVALID_ARGUMENT_COUNT = 3215;\nexports.ER_AUDIT_LOG_HAS_NOT_BEEN_INSTALLED = 3216;\nexports.ER_AUDIT_LOG_UDF_READ_INVALID_MAX_ARRAY_LENGTH_ARG_TYPE = 3217;\nexports.ER_AUDIT_LOG_UDF_READ_INVALID_MAX_ARRAY_LENGTH_ARG_VALUE = 3218;\nexports.ER_AUDIT_LOG_JSON_FILTER_PARSING_ERROR = 3219;\nexports.ER_AUDIT_LOG_JSON_FILTER_NAME_CANNOT_BE_EMPTY = 3220;\nexports.ER_AUDIT_LOG_JSON_USER_NAME_CANNOT_BE_EMPTY = 3221;\nexports.ER_AUDIT_LOG_JSON_FILTER_DOES_NOT_EXISTS = 3222;\nexports.ER_AUDIT_LOG_USER_FIRST_CHARACTER_MUST_BE_ALPHANUMERIC = 3223;\nexports.ER_AUDIT_LOG_USER_NAME_INVALID_CHARACTER = 3224;\nexports.ER_AUDIT_LOG_HOST_NAME_INVALID_CHARACTER = 3225;\nexports.WARN_DEPRECATED_MAXDB_SQL_MODE_FOR_TIMESTAMP = 3226;\nexports.ER_XA_REPLICATION_FILTERS = 3227;\nexports.ER_CANT_OPEN_ERROR_LOG = 3228;\nexports.ER_GROUPING_ON_TIMESTAMP_IN_DST = 3229;\nexports.ER_CANT_START_SERVER_NAMED_PIPE = 3230;\nexports.ER_WRITE_SET_EXCEEDS_LIMIT = 3231;\nexports.ER_DEPRECATED_TLS_VERSION_SESSION_57 = 3232;\nexports.ER_WARN_DEPRECATED_TLS_VERSION_57 = 3233;\nexports.ER_WARN_WRONG_NATIVE_TABLE_STRUCTURE = 3234;\nexports.ER_AES_INVALID_KDF_NAME = 3235;\nexports.ER_AES_INVALID_KDF_ITERATIONS = 3236;\nexports.WARN_AES_KEY_SIZE = 3237;\nexports.ER_AES_INVALID_KDF_OPTION_SIZE = 3238;\nexports.ER_UNSUPPORT_COMPRESSED_TEMPORARY_TABLE = 3500;\nexports.ER_ACL_OPERATION_FAILED = 3501;\nexports.ER_UNSUPPORTED_INDEX_ALGORITHM = 3502;\nexports.ER_NO_SUCH_DB = 3503;\nexports.ER_TOO_BIG_ENUM = 3504;\nexports.ER_TOO_LONG_SET_ENUM_VALUE = 3505;\nexports.ER_INVALID_DD_OBJECT = 3506;\nexports.ER_UPDATING_DD_TABLE = 3507;\nexports.ER_INVALID_DD_OBJECT_ID = 3508;\nexports.ER_INVALID_DD_OBJECT_NAME = 3509;\nexports.ER_TABLESPACE_MISSING_WITH_NAME = 3510;\nexports.ER_TOO_LONG_ROUTINE_COMMENT = 3511;\nexports.ER_SP_LOAD_FAILED = 3512;\nexports.ER_INVALID_BITWISE_OPERANDS_SIZE = 3513;\nexports.ER_INVALID_BITWISE_AGGREGATE_OPERANDS_SIZE = 3514;\nexports.ER_WARN_UNSUPPORTED_HINT = 3515;\nexports.ER_UNEXPECTED_GEOMETRY_TYPE = 3516;\nexports.ER_SRS_PARSE_ERROR = 3517;\nexports.ER_SRS_PROJ_PARAMETER_MISSING = 3518;\nexports.ER_WARN_SRS_NOT_FOUND = 3519;\nexports.ER_SRS_NOT_CARTESIAN = 3520;\nexports.ER_SRS_NOT_CARTESIAN_UNDEFINED = 3521;\nexports.ER_PK_INDEX_CANT_BE_INVISIBLE = 3522;\nexports.ER_UNKNOWN_AUTHID = 3523;\nexports.ER_FAILED_ROLE_GRANT = 3524;\nexports.ER_OPEN_ROLE_TABLES = 3525;\nexports.ER_FAILED_DEFAULT_ROLES = 3526;\nexports.ER_COMPONENTS_NO_SCHEME = 3527;\nexports.ER_COMPONENTS_NO_SCHEME_SERVICE = 3528;\nexports.ER_COMPONENTS_CANT_LOAD = 3529;\nexports.ER_ROLE_NOT_GRANTED = 3530;\nexports.ER_FAILED_REVOKE_ROLE = 3531;\nexports.ER_RENAME_ROLE = 3532;\nexports.ER_COMPONENTS_CANT_ACQUIRE_SERVICE_IMPLEMENTATION = 3533;\nexports.ER_COMPONENTS_CANT_SATISFY_DEPENDENCY = 3534;\nexports.ER_COMPONENTS_LOAD_CANT_REGISTER_SERVICE_IMPLEMENTATION = 3535;\nexports.ER_COMPONENTS_LOAD_CANT_INITIALIZE = 3536;\nexports.ER_COMPONENTS_UNLOAD_NOT_LOADED = 3537;\nexports.ER_COMPONENTS_UNLOAD_CANT_DEINITIALIZE = 3538;\nexports.ER_COMPONENTS_CANT_RELEASE_SERVICE = 3539;\nexports.ER_COMPONENTS_UNLOAD_CANT_UNREGISTER_SERVICE = 3540;\nexports.ER_COMPONENTS_CANT_UNLOAD = 3541;\nexports.ER_WARN_UNLOAD_THE_NOT_PERSISTED = 3542;\nexports.ER_COMPONENT_TABLE_INCORRECT = 3543;\nexports.ER_COMPONENT_MANIPULATE_ROW_FAILED = 3544;\nexports.ER_COMPONENTS_UNLOAD_DUPLICATE_IN_GROUP = 3545;\nexports.ER_CANT_SET_GTID_PURGED_DUE_SETS_CONSTRAINTS = 3546;\nexports.ER_CANNOT_LOCK_USER_MANAGEMENT_CACHES = 3547;\nexports.ER_SRS_NOT_FOUND = 3548;\nexports.ER_VARIABLE_NOT_PERSISTED = 3549;\nexports.ER_IS_QUERY_INVALID_CLAUSE = 3550;\nexports.ER_UNABLE_TO_STORE_STATISTICS = 3551;\nexports.ER_NO_SYSTEM_SCHEMA_ACCESS = 3552;\nexports.ER_NO_SYSTEM_TABLESPACE_ACCESS = 3553;\nexports.ER_NO_SYSTEM_TABLE_ACCESS = 3554;\nexports.ER_NO_SYSTEM_TABLE_ACCESS_FOR_DICTIONARY_TABLE = 3555;\nexports.ER_NO_SYSTEM_TABLE_ACCESS_FOR_SYSTEM_TABLE = 3556;\nexports.ER_NO_SYSTEM_TABLE_ACCESS_FOR_TABLE = 3557;\nexports.ER_INVALID_OPTION_KEY = 3558;\nexports.ER_INVALID_OPTION_VALUE = 3559;\nexports.ER_INVALID_OPTION_KEY_VALUE_PAIR = 3560;\nexports.ER_INVALID_OPTION_START_CHARACTER = 3561;\nexports.ER_INVALID_OPTION_END_CHARACTER = 3562;\nexports.ER_INVALID_OPTION_CHARACTERS = 3563;\nexports.ER_DUPLICATE_OPTION_KEY = 3564;\nexports.ER_WARN_SRS_NOT_FOUND_AXIS_ORDER = 3565;\nexports.ER_NO_ACCESS_TO_NATIVE_FCT = 3566;\nexports.ER_RESET_SOURCE_TO_VALUE_OUT_OF_RANGE = 3567;\nexports.ER_UNRESOLVED_TABLE_LOCK = 3568;\nexports.ER_DUPLICATE_TABLE_LOCK = 3569;\nexports.ER_BINLOG_UNSAFE_SKIP_LOCKED = 3570;\nexports.ER_BINLOG_UNSAFE_NOWAIT = 3571;\nexports.ER_LOCK_NOWAIT = 3572;\nexports.ER_CTE_RECURSIVE_REQUIRES_UNION = 3573;\nexports.ER_CTE_RECURSIVE_REQUIRES_NONRECURSIVE_FIRST = 3574;\nexports.ER_CTE_RECURSIVE_FORBIDS_AGGREGATION = 3575;\nexports.ER_CTE_RECURSIVE_FORBIDDEN_JOIN_ORDER = 3576;\nexports.ER_CTE_RECURSIVE_REQUIRES_SINGLE_REFERENCE = 3577;\nexports.ER_SWITCH_TMP_ENGINE = 3578;\nexports.ER_WINDOW_NO_SUCH_WINDOW = 3579;\nexports.ER_WINDOW_CIRCULARITY_IN_WINDOW_GRAPH = 3580;\nexports.ER_WINDOW_NO_CHILD_PARTITIONING = 3581;\nexports.ER_WINDOW_NO_INHERIT_FRAME = 3582;\nexports.ER_WINDOW_NO_REDEFINE_ORDER_BY = 3583;\nexports.ER_WINDOW_FRAME_START_ILLEGAL = 3584;\nexports.ER_WINDOW_FRAME_END_ILLEGAL = 3585;\nexports.ER_WINDOW_FRAME_ILLEGAL = 3586;\nexports.ER_WINDOW_RANGE_FRAME_ORDER_TYPE = 3587;\nexports.ER_WINDOW_RANGE_FRAME_TEMPORAL_TYPE = 3588;\nexports.ER_WINDOW_RANGE_FRAME_NUMERIC_TYPE = 3589;\nexports.ER_WINDOW_RANGE_BOUND_NOT_CONSTANT = 3590;\nexports.ER_WINDOW_DUPLICATE_NAME = 3591;\nexports.ER_WINDOW_ILLEGAL_ORDER_BY = 3592;\nexports.ER_WINDOW_INVALID_WINDOW_FUNC_USE = 3593;\nexports.ER_WINDOW_INVALID_WINDOW_FUNC_ALIAS_USE = 3594;\nexports.ER_WINDOW_NESTED_WINDOW_FUNC_USE_IN_WINDOW_SPEC = 3595;\nexports.ER_WINDOW_ROWS_INTERVAL_USE = 3596;\nexports.ER_WINDOW_NO_GROUP_ORDER = 3597;\nexports.ER_WINDOW_EXPLAIN_JSON = 3598;\nexports.ER_WINDOW_FUNCTION_IGNORES_FRAME = 3599;\nexports.ER_WL9236_NOW = 3600;\nexports.ER_INVALID_NO_OF_ARGS = 3601;\nexports.ER_FIELD_IN_GROUPING_NOT_GROUP_BY = 3602;\nexports.ER_TOO_LONG_TABLESPACE_COMMENT = 3603;\nexports.ER_ENGINE_CANT_DROP_TABLE = 3604;\nexports.ER_ENGINE_CANT_DROP_MISSING_TABLE = 3605;\nexports.ER_TABLESPACE_DUP_FILENAME = 3606;\nexports.ER_DB_DROP_RMDIR2 = 3607;\nexports.ER_IMP_NO_FILES_MATCHED = 3608;\nexports.ER_IMP_SCHEMA_DOES_NOT_EXIST = 3609;\nexports.ER_IMP_TABLE_ALREADY_EXISTS = 3610;\nexports.ER_IMP_INCOMPATIBLE_MYSQLD_VERSION = 3611;\nexports.ER_IMP_INCOMPATIBLE_DD_VERSION = 3612;\nexports.ER_IMP_INCOMPATIBLE_SDI_VERSION = 3613;\nexports.ER_WARN_INVALID_HINT = 3614;\nexports.ER_VAR_DOES_NOT_EXIST = 3615;\nexports.ER_LONGITUDE_OUT_OF_RANGE = 3616;\nexports.ER_LATITUDE_OUT_OF_RANGE = 3617;\nexports.ER_NOT_IMPLEMENTED_FOR_GEOGRAPHIC_SRS = 3618;\nexports.ER_ILLEGAL_PRIVILEGE_LEVEL = 3619;\nexports.ER_NO_SYSTEM_VIEW_ACCESS = 3620;\nexports.ER_COMPONENT_FILTER_FLABBERGASTED = 3621;\nexports.ER_PART_EXPR_TOO_LONG = 3622;\nexports.ER_UDF_DROP_DYNAMICALLY_REGISTERED = 3623;\nexports.ER_UNABLE_TO_STORE_COLUMN_STATISTICS = 3624;\nexports.ER_UNABLE_TO_UPDATE_COLUMN_STATISTICS = 3625;\nexports.ER_UNABLE_TO_DROP_COLUMN_STATISTICS = 3626;\nexports.ER_UNABLE_TO_BUILD_HISTOGRAM = 3627;\nexports.ER_MANDATORY_ROLE = 3628;\nexports.ER_MISSING_TABLESPACE_FILE = 3629;\nexports.ER_PERSIST_ONLY_ACCESS_DENIED_ERROR = 3630;\nexports.ER_CMD_NEED_SUPER = 3631;\nexports.ER_PATH_IN_DATADIR = 3632;\nexports.ER_CLONE_DDL_IN_PROGRESS = 3633;\nexports.ER_CLONE_TOO_MANY_CONCURRENT_CLONES = 3634;\nexports.ER_APPLIER_LOG_EVENT_VALIDATION_ERROR = 3635;\nexports.ER_CTE_MAX_RECURSION_DEPTH = 3636;\nexports.ER_NOT_HINT_UPDATABLE_VARIABLE = 3637;\nexports.ER_CREDENTIALS_CONTRADICT_TO_HISTORY = 3638;\nexports.ER_WARNING_PASSWORD_HISTORY_CLAUSES_VOID = 3639;\nexports.ER_CLIENT_DOES_NOT_SUPPORT = 3640;\nexports.ER_I_S_SKIPPED_TABLESPACE = 3641;\nexports.ER_TABLESPACE_ENGINE_MISMATCH = 3642;\nexports.ER_WRONG_SRID_FOR_COLUMN = 3643;\nexports.ER_CANNOT_ALTER_SRID_DUE_TO_INDEX = 3644;\nexports.ER_WARN_BINLOG_PARTIAL_UPDATES_DISABLED = 3645;\nexports.ER_WARN_BINLOG_V1_ROW_EVENTS_DISABLED = 3646;\nexports.ER_WARN_BINLOG_PARTIAL_UPDATES_SUGGESTS_PARTIAL_IMAGES = 3647;\nexports.ER_COULD_NOT_APPLY_JSON_DIFF = 3648;\nexports.ER_CORRUPTED_JSON_DIFF = 3649;\nexports.ER_RESOURCE_GROUP_EXISTS = 3650;\nexports.ER_RESOURCE_GROUP_NOT_EXISTS = 3651;\nexports.ER_INVALID_VCPU_ID = 3652;\nexports.ER_INVALID_VCPU_RANGE = 3653;\nexports.ER_INVALID_THREAD_PRIORITY = 3654;\nexports.ER_DISALLOWED_OPERATION = 3655;\nexports.ER_RESOURCE_GROUP_BUSY = 3656;\nexports.ER_RESOURCE_GROUP_DISABLED = 3657;\nexports.ER_FEATURE_UNSUPPORTED = 3658;\nexports.ER_ATTRIBUTE_IGNORED = 3659;\nexports.ER_INVALID_THREAD_ID = 3660;\nexports.ER_RESOURCE_GROUP_BIND_FAILED = 3661;\nexports.ER_INVALID_USE_OF_FORCE_OPTION = 3662;\nexports.ER_GROUP_REPLICATION_COMMAND_FAILURE = 3663;\nexports.ER_SDI_OPERATION_FAILED = 3664;\nexports.ER_MISSING_JSON_TABLE_VALUE = 3665;\nexports.ER_WRONG_JSON_TABLE_VALUE = 3666;\nexports.ER_TF_MUST_HAVE_ALIAS = 3667;\nexports.ER_TF_FORBIDDEN_JOIN_TYPE = 3668;\nexports.ER_JT_VALUE_OUT_OF_RANGE = 3669;\nexports.ER_JT_MAX_NESTED_PATH = 3670;\nexports.ER_PASSWORD_EXPIRATION_NOT_SUPPORTED_BY_AUTH_METHOD = 3671;\nexports.ER_INVALID_GEOJSON_CRS_NOT_TOP_LEVEL = 3672;\nexports.ER_BAD_NULL_ERROR_NOT_IGNORED = 3673;\nexports.WARN_USELESS_SPATIAL_INDEX = 3674;\nexports.ER_DISK_FULL_NOWAIT = 3675;\nexports.ER_PARSE_ERROR_IN_DIGEST_FN = 3676;\nexports.ER_UNDISCLOSED_PARSE_ERROR_IN_DIGEST_FN = 3677;\nexports.ER_SCHEMA_DIR_EXISTS = 3678;\nexports.ER_SCHEMA_DIR_MISSING = 3679;\nexports.ER_SCHEMA_DIR_CREATE_FAILED = 3680;\nexports.ER_SCHEMA_DIR_UNKNOWN = 3681;\nexports.ER_ONLY_IMPLEMENTED_FOR_SRID_0_AND_4326 = 3682;\nexports.ER_BINLOG_EXPIRE_LOG_DAYS_AND_SECS_USED_TOGETHER = 3683;\nexports.ER_REGEXP_BUFFER_OVERFLOW = 3684;\nexports.ER_REGEXP_ILLEGAL_ARGUMENT = 3685;\nexports.ER_REGEXP_INDEX_OUTOFBOUNDS_ERROR = 3686;\nexports.ER_REGEXP_INTERNAL_ERROR = 3687;\nexports.ER_REGEXP_RULE_SYNTAX = 3688;\nexports.ER_REGEXP_BAD_ESCAPE_SEQUENCE = 3689;\nexports.ER_REGEXP_UNIMPLEMENTED = 3690;\nexports.ER_REGEXP_MISMATCHED_PAREN = 3691;\nexports.ER_REGEXP_BAD_INTERVAL = 3692;\nexports.ER_REGEXP_MAX_LT_MIN = 3693;\nexports.ER_REGEXP_INVALID_BACK_REF = 3694;\nexports.ER_REGEXP_LOOK_BEHIND_LIMIT = 3695;\nexports.ER_REGEXP_MISSING_CLOSE_BRACKET = 3696;\nexports.ER_REGEXP_INVALID_RANGE = 3697;\nexports.ER_REGEXP_STACK_OVERFLOW = 3698;\nexports.ER_REGEXP_TIME_OUT = 3699;\nexports.ER_REGEXP_PATTERN_TOO_BIG = 3700;\nexports.ER_CANT_SET_ERROR_LOG_SERVICE = 3701;\nexports.ER_EMPTY_PIPELINE_FOR_ERROR_LOG_SERVICE = 3702;\nexports.ER_COMPONENT_FILTER_DIAGNOSTICS = 3703;\nexports.ER_NOT_IMPLEMENTED_FOR_CARTESIAN_SRS = 3704;\nexports.ER_NOT_IMPLEMENTED_FOR_PROJECTED_SRS = 3705;\nexports.ER_NONPOSITIVE_RADIUS = 3706;\nexports.ER_RESTART_SERVER_FAILED = 3707;\nexports.ER_SRS_MISSING_MANDATORY_ATTRIBUTE = 3708;\nexports.ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS = 3709;\nexports.ER_SRS_NAME_CANT_BE_EMPTY_OR_WHITESPACE = 3710;\nexports.ER_SRS_ORGANIZATION_CANT_BE_EMPTY_OR_WHITESPACE = 3711;\nexports.ER_SRS_ID_ALREADY_EXISTS = 3712;\nexports.ER_WARN_SRS_ID_ALREADY_EXISTS = 3713;\nexports.ER_CANT_MODIFY_SRID_0 = 3714;\nexports.ER_WARN_RESERVED_SRID_RANGE = 3715;\nexports.ER_CANT_MODIFY_SRS_USED_BY_COLUMN = 3716;\nexports.ER_SRS_INVALID_CHARACTER_IN_ATTRIBUTE = 3717;\nexports.ER_SRS_ATTRIBUTE_STRING_TOO_LONG = 3718;\nexports.ER_DEPRECATED_UTF8_ALIAS = 3719;\nexports.ER_DEPRECATED_NATIONAL = 3720;\nexports.ER_INVALID_DEFAULT_UTF8MB4_COLLATION = 3721;\nexports.ER_UNABLE_TO_COLLECT_LOG_STATUS = 3722;\nexports.ER_RESERVED_TABLESPACE_NAME = 3723;\nexports.ER_UNABLE_TO_SET_OPTION = 3724;\nexports.ER_REPLICA_POSSIBLY_DIVERGED_AFTER_DDL = 3725;\nexports.ER_SRS_NOT_GEOGRAPHIC = 3726;\nexports.ER_POLYGON_TOO_LARGE = 3727;\nexports.ER_SPATIAL_UNIQUE_INDEX = 3728;\nexports.ER_INDEX_TYPE_NOT_SUPPORTED_FOR_SPATIAL_INDEX = 3729;\nexports.ER_FK_CANNOT_DROP_PARENT = 3730;\nexports.ER_GEOMETRY_PARAM_LONGITUDE_OUT_OF_RANGE = 3731;\nexports.ER_GEOMETRY_PARAM_LATITUDE_OUT_OF_RANGE = 3732;\nexports.ER_FK_CANNOT_USE_VIRTUAL_COLUMN = 3733;\nexports.ER_FK_NO_COLUMN_PARENT = 3734;\nexports.ER_CANT_SET_ERROR_SUPPRESSION_LIST = 3735;\nexports.ER_SRS_GEOGCS_INVALID_AXES = 3736;\nexports.ER_SRS_INVALID_SEMI_MAJOR_AXIS = 3737;\nexports.ER_SRS_INVALID_INVERSE_FLATTENING = 3738;\nexports.ER_SRS_INVALID_ANGULAR_UNIT = 3739;\nexports.ER_SRS_INVALID_PRIME_MERIDIAN = 3740;\nexports.ER_TRANSFORM_SOURCE_SRS_NOT_SUPPORTED = 3741;\nexports.ER_TRANSFORM_TARGET_SRS_NOT_SUPPORTED = 3742;\nexports.ER_TRANSFORM_SOURCE_SRS_MISSING_TOWGS84 = 3743;\nexports.ER_TRANSFORM_TARGET_SRS_MISSING_TOWGS84 = 3744;\nexports.ER_TEMP_TABLE_PREVENTS_SWITCH_SESSION_BINLOG_FORMAT = 3745;\nexports.ER_TEMP_TABLE_PREVENTS_SWITCH_GLOBAL_BINLOG_FORMAT = 3746;\nexports.ER_RUNNING_APPLIER_PREVENTS_SWITCH_GLOBAL_BINLOG_FORMAT = 3747;\nexports.ER_CLIENT_GTID_UNSAFE_CREATE_DROP_TEMP_TABLE_IN_TRX_IN_SBR = 3748;\nexports.ER_XA_CANT_CREATE_MDL_BACKUP = 3749;\nexports.ER_TABLE_WITHOUT_PK = 3750;\nexports.ER_WARN_DATA_TRUNCATED_FUNCTIONAL_INDEX = 3751;\nexports.ER_WARN_DATA_OUT_OF_RANGE_FUNCTIONAL_INDEX = 3752;\nexports.ER_FUNCTIONAL_INDEX_ON_JSON_OR_GEOMETRY_FUNCTION = 3753;\nexports.ER_FUNCTIONAL_INDEX_REF_AUTO_INCREMENT = 3754;\nexports.ER_CANNOT_DROP_COLUMN_FUNCTIONAL_INDEX = 3755;\nexports.ER_FUNCTIONAL_INDEX_PRIMARY_KEY = 3756;\nexports.ER_FUNCTIONAL_INDEX_ON_LOB = 3757;\nexports.ER_FUNCTIONAL_INDEX_FUNCTION_IS_NOT_ALLOWED = 3758;\nexports.ER_FULLTEXT_FUNCTIONAL_INDEX = 3759;\nexports.ER_SPATIAL_FUNCTIONAL_INDEX = 3760;\nexports.ER_WRONG_KEY_COLUMN_FUNCTIONAL_INDEX = 3761;\nexports.ER_FUNCTIONAL_INDEX_ON_FIELD = 3762;\nexports.ER_GENERATED_COLUMN_NAMED_FUNCTION_IS_NOT_ALLOWED = 3763;\nexports.ER_GENERATED_COLUMN_ROW_VALUE = 3764;\nexports.ER_GENERATED_COLUMN_VARIABLES = 3765;\nexports.ER_DEPENDENT_BY_DEFAULT_GENERATED_VALUE = 3766;\nexports.ER_DEFAULT_VAL_GENERATED_NON_PRIOR = 3767;\nexports.ER_DEFAULT_VAL_GENERATED_REF_AUTO_INC = 3768;\nexports.ER_DEFAULT_VAL_GENERATED_FUNCTION_IS_NOT_ALLOWED = 3769;\nexports.ER_DEFAULT_VAL_GENERATED_NAMED_FUNCTION_IS_NOT_ALLOWED = 3770;\nexports.ER_DEFAULT_VAL_GENERATED_ROW_VALUE = 3771;\nexports.ER_DEFAULT_VAL_GENERATED_VARIABLES = 3772;\nexports.ER_DEFAULT_AS_VAL_GENERATED = 3773;\nexports.ER_UNSUPPORTED_ACTION_ON_DEFAULT_VAL_GENERATED = 3774;\nexports.ER_GTID_UNSAFE_ALTER_ADD_COL_WITH_DEFAULT_EXPRESSION = 3775;\nexports.ER_FK_CANNOT_CHANGE_ENGINE = 3776;\nexports.ER_WARN_DEPRECATED_USER_SET_EXPR = 3777;\nexports.ER_WARN_DEPRECATED_UTF8MB3_COLLATION = 3778;\nexports.ER_WARN_DEPRECATED_NESTED_COMMENT_SYNTAX = 3779;\nexports.ER_FK_INCOMPATIBLE_COLUMNS = 3780;\nexports.ER_GR_HOLD_WAIT_TIMEOUT = 3781;\nexports.ER_GR_HOLD_KILLED = 3782;\nexports.ER_GR_HOLD_MEMBER_STATUS_ERROR = 3783;\nexports.ER_RPL_ENCRYPTION_FAILED_TO_FETCH_KEY = 3784;\nexports.ER_RPL_ENCRYPTION_KEY_NOT_FOUND = 3785;\nexports.ER_RPL_ENCRYPTION_KEYRING_INVALID_KEY = 3786;\nexports.ER_RPL_ENCRYPTION_HEADER_ERROR = 3787;\nexports.ER_RPL_ENCRYPTION_FAILED_TO_ROTATE_LOGS = 3788;\nexports.ER_RPL_ENCRYPTION_KEY_EXISTS_UNEXPECTED = 3789;\nexports.ER_RPL_ENCRYPTION_FAILED_TO_GENERATE_KEY = 3790;\nexports.ER_RPL_ENCRYPTION_FAILED_TO_STORE_KEY = 3791;\nexports.ER_RPL_ENCRYPTION_FAILED_TO_REMOVE_KEY = 3792;\nexports.ER_RPL_ENCRYPTION_UNABLE_TO_CHANGE_OPTION = 3793;\nexports.ER_RPL_ENCRYPTION_MASTER_KEY_RECOVERY_FAILED = 3794;\nexports.ER_SLOW_LOG_MODE_IGNORED_WHEN_NOT_LOGGING_TO_FILE = 3795;\nexports.ER_GRP_TRX_CONSISTENCY_NOT_ALLOWED = 3796;\nexports.ER_GRP_TRX_CONSISTENCY_BEFORE = 3797;\nexports.ER_GRP_TRX_CONSISTENCY_AFTER_ON_TRX_BEGIN = 3798;\nexports.ER_GRP_TRX_CONSISTENCY_BEGIN_NOT_ALLOWED = 3799;\nexports.ER_FUNCTIONAL_INDEX_ROW_VALUE_IS_NOT_ALLOWED = 3800;\nexports.ER_RPL_ENCRYPTION_FAILED_TO_ENCRYPT = 3801;\nexports.ER_PAGE_TRACKING_NOT_STARTED = 3802;\nexports.ER_PAGE_TRACKING_RANGE_NOT_TRACKED = 3803;\nexports.ER_PAGE_TRACKING_CANNOT_PURGE = 3804;\nexports.ER_RPL_ENCRYPTION_CANNOT_ROTATE_BINLOG_MASTER_KEY = 3805;\nexports.ER_BINLOG_MASTER_KEY_RECOVERY_OUT_OF_COMBINATION = 3806;\nexports.ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_OPERATE_KEY = 3807;\nexports.ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_ROTATE_LOGS = 3808;\nexports.ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_REENCRYPT_LOG = 3809;\nexports.ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_CLEANUP_UNUSED_KEYS = 3810;\nexports.ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_CLEANUP_AUX_KEY = 3811;\nexports.ER_NON_BOOLEAN_EXPR_FOR_CHECK_CONSTRAINT = 3812;\nexports.ER_COLUMN_CHECK_CONSTRAINT_REFERENCES_OTHER_COLUMN = 3813;\nexports.ER_CHECK_CONSTRAINT_NAMED_FUNCTION_IS_NOT_ALLOWED = 3814;\nexports.ER_CHECK_CONSTRAINT_FUNCTION_IS_NOT_ALLOWED = 3815;\nexports.ER_CHECK_CONSTRAINT_VARIABLES = 3816;\nexports.ER_CHECK_CONSTRAINT_ROW_VALUE = 3817;\nexports.ER_CHECK_CONSTRAINT_REFERS_AUTO_INCREMENT_COLUMN = 3818;\nexports.ER_CHECK_CONSTRAINT_VIOLATED = 3819;\nexports.ER_CHECK_CONSTRAINT_REFERS_UNKNOWN_COLUMN = 3820;\nexports.ER_CHECK_CONSTRAINT_NOT_FOUND = 3821;\nexports.ER_CHECK_CONSTRAINT_DUP_NAME = 3822;\nexports.ER_CHECK_CONSTRAINT_CLAUSE_USING_FK_REFER_ACTION_COLUMN = 3823;\nexports.WARN_UNENCRYPTED_TABLE_IN_ENCRYPTED_DB = 3824;\nexports.ER_INVALID_ENCRYPTION_REQUEST = 3825;\nexports.ER_CANNOT_SET_TABLE_ENCRYPTION = 3826;\nexports.ER_CANNOT_SET_DATABASE_ENCRYPTION = 3827;\nexports.ER_CANNOT_SET_TABLESPACE_ENCRYPTION = 3828;\nexports.ER_TABLESPACE_CANNOT_BE_ENCRYPTED = 3829;\nexports.ER_TABLESPACE_CANNOT_BE_DECRYPTED = 3830;\nexports.ER_TABLESPACE_TYPE_UNKNOWN = 3831;\nexports.ER_TARGET_TABLESPACE_UNENCRYPTED = 3832;\nexports.ER_CANNOT_USE_ENCRYPTION_CLAUSE = 3833;\nexports.ER_INVALID_MULTIPLE_CLAUSES = 3834;\nexports.ER_UNSUPPORTED_USE_OF_GRANT_AS = 3835;\nexports.ER_UKNOWN_AUTH_ID_OR_ACCESS_DENIED_FOR_GRANT_AS = 3836;\nexports.ER_DEPENDENT_BY_FUNCTIONAL_INDEX = 3837;\nexports.ER_PLUGIN_NOT_EARLY = 3838;\nexports.ER_INNODB_REDO_LOG_ARCHIVE_START_SUBDIR_PATH = 3839;\nexports.ER_INNODB_REDO_LOG_ARCHIVE_START_TIMEOUT = 3840;\nexports.ER_INNODB_REDO_LOG_ARCHIVE_DIRS_INVALID = 3841;\nexports.ER_INNODB_REDO_LOG_ARCHIVE_LABEL_NOT_FOUND = 3842;\nexports.ER_INNODB_REDO_LOG_ARCHIVE_DIR_EMPTY = 3843;\nexports.ER_INNODB_REDO_LOG_ARCHIVE_NO_SUCH_DIR = 3844;\nexports.ER_INNODB_REDO_LOG_ARCHIVE_DIR_CLASH = 3845;\nexports.ER_INNODB_REDO_LOG_ARCHIVE_DIR_PERMISSIONS = 3846;\nexports.ER_INNODB_REDO_LOG_ARCHIVE_FILE_CREATE = 3847;\nexports.ER_INNODB_REDO_LOG_ARCHIVE_ACTIVE = 3848;\nexports.ER_INNODB_REDO_LOG_ARCHIVE_INACTIVE = 3849;\nexports.ER_INNODB_REDO_LOG_ARCHIVE_FAILED = 3850;\nexports.ER_INNODB_REDO_LOG_ARCHIVE_SESSION = 3851;\nexports.ER_STD_REGEX_ERROR = 3852;\nexports.ER_INVALID_JSON_TYPE = 3853;\nexports.ER_CANNOT_CONVERT_STRING = 3854;\nexports.ER_DEPENDENT_BY_PARTITION_FUNC = 3855;\nexports.ER_WARN_DEPRECATED_FLOAT_AUTO_INCREMENT = 3856;\nexports.ER_RPL_CANT_STOP_REPLICA_WHILE_LOCKED_BACKUP = 3857;\nexports.ER_WARN_DEPRECATED_FLOAT_DIGITS = 3858;\nexports.ER_WARN_DEPRECATED_FLOAT_UNSIGNED = 3859;\nexports.ER_WARN_DEPRECATED_INTEGER_DISPLAY_WIDTH = 3860;\nexports.ER_WARN_DEPRECATED_ZEROFILL = 3861;\nexports.ER_CLONE_DONOR = 3862;\nexports.ER_CLONE_PROTOCOL = 3863;\nexports.ER_CLONE_DONOR_VERSION = 3864;\nexports.ER_CLONE_OS = 3865;\nexports.ER_CLONE_PLATFORM = 3866;\nexports.ER_CLONE_CHARSET = 3867;\nexports.ER_CLONE_CONFIG = 3868;\nexports.ER_CLONE_SYS_CONFIG = 3869;\nexports.ER_CLONE_PLUGIN_MATCH = 3870;\nexports.ER_CLONE_LOOPBACK = 3871;\nexports.ER_CLONE_ENCRYPTION = 3872;\nexports.ER_CLONE_DISK_SPACE = 3873;\nexports.ER_CLONE_IN_PROGRESS = 3874;\nexports.ER_CLONE_DISALLOWED = 3875;\nexports.ER_CANNOT_GRANT_ROLES_TO_ANONYMOUS_USER = 3876;\nexports.ER_SECONDARY_ENGINE_PLUGIN = 3877;\nexports.ER_SECOND_PASSWORD_CANNOT_BE_EMPTY = 3878;\nexports.ER_DB_ACCESS_DENIED = 3879;\nexports.ER_DA_AUTH_ID_WITH_SYSTEM_USER_PRIV_IN_MANDATORY_ROLES = 3880;\nexports.ER_DA_RPL_GTID_TABLE_CANNOT_OPEN = 3881;\nexports.ER_GEOMETRY_IN_UNKNOWN_LENGTH_UNIT = 3882;\nexports.ER_DA_PLUGIN_INSTALL_ERROR = 3883;\nexports.ER_NO_SESSION_TEMP = 3884;\nexports.ER_DA_UNKNOWN_ERROR_NUMBER = 3885;\nexports.ER_COLUMN_CHANGE_SIZE = 3886;\nexports.ER_REGEXP_INVALID_CAPTURE_GROUP_NAME = 3887;\nexports.ER_DA_SSL_LIBRARY_ERROR = 3888;\nexports.ER_SECONDARY_ENGINE = 3889;\nexports.ER_SECONDARY_ENGINE_DDL = 3890;\nexports.ER_INCORRECT_CURRENT_PASSWORD = 3891;\nexports.ER_MISSING_CURRENT_PASSWORD = 3892;\nexports.ER_CURRENT_PASSWORD_NOT_REQUIRED = 3893;\nexports.ER_PASSWORD_CANNOT_BE_RETAINED_ON_PLUGIN_CHANGE = 3894;\nexports.ER_CURRENT_PASSWORD_CANNOT_BE_RETAINED = 3895;\nexports.ER_PARTIAL_REVOKES_EXIST = 3896;\nexports.ER_CANNOT_GRANT_SYSTEM_PRIV_TO_MANDATORY_ROLE = 3897;\nexports.ER_XA_REPLICATION_FILTERS = 3898;\nexports.ER_UNSUPPORTED_SQL_MODE = 3899;\nexports.ER_REGEXP_INVALID_FLAG = 3900;\nexports.ER_PARTIAL_REVOKE_AND_DB_GRANT_BOTH_EXISTS = 3901;\nexports.ER_UNIT_NOT_FOUND = 3902;\nexports.ER_INVALID_JSON_VALUE_FOR_FUNC_INDEX = 3903;\nexports.ER_JSON_VALUE_OUT_OF_RANGE_FOR_FUNC_INDEX = 3904;\nexports.ER_EXCEEDED_MV_KEYS_NUM = 3905;\nexports.ER_EXCEEDED_MV_KEYS_SPACE = 3906;\nexports.ER_FUNCTIONAL_INDEX_DATA_IS_TOO_LONG = 3907;\nexports.ER_WRONG_MVI_VALUE = 3908;\nexports.ER_WARN_FUNC_INDEX_NOT_APPLICABLE = 3909;\nexports.ER_GRP_RPL_UDF_ERROR = 3910;\nexports.ER_UPDATE_GTID_PURGED_WITH_GR = 3911;\nexports.ER_GROUPING_ON_TIMESTAMP_IN_DST = 3912;\nexports.ER_TABLE_NAME_CAUSES_TOO_LONG_PATH = 3913;\nexports.ER_AUDIT_LOG_INSUFFICIENT_PRIVILEGE = 3914;\nexports.ER_AUDIT_LOG_PASSWORD_HAS_BEEN_COPIED = 3915;\nexports.ER_DA_GRP_RPL_STARTED_AUTO_REJOIN = 3916;\nexports.ER_SYSVAR_CHANGE_DURING_QUERY = 3917;\nexports.ER_GLOBSTAT_CHANGE_DURING_QUERY = 3918;\nexports.ER_GRP_RPL_MESSAGE_SERVICE_INIT_FAILURE = 3919;\nexports.ER_CHANGE_SOURCE_WRONG_COMPRESSION_ALGORITHM_CLIENT = 3920;\nexports.ER_CHANGE_SOURCE_WRONG_COMPRESSION_LEVEL_CLIENT = 3921;\nexports.ER_WRONG_COMPRESSION_ALGORITHM_CLIENT = 3922;\nexports.ER_WRONG_COMPRESSION_LEVEL_CLIENT = 3923;\nexports.ER_CHANGE_SOURCE_WRONG_COMPRESSION_ALGORITHM_LIST_CLIENT = 3924;\nexports.ER_CLIENT_PRIVILEGE_CHECKS_USER_CANNOT_BE_ANONYMOUS = 3925;\nexports.ER_CLIENT_PRIVILEGE_CHECKS_USER_DOES_NOT_EXIST = 3926;\nexports.ER_CLIENT_PRIVILEGE_CHECKS_USER_CORRUPT = 3927;\nexports.ER_CLIENT_PRIVILEGE_CHECKS_USER_NEEDS_RPL_APPLIER_PRIV = 3928;\nexports.ER_WARN_DA_PRIVILEGE_NOT_REGISTERED = 3929;\nexports.ER_CLIENT_KEYRING_UDF_KEY_INVALID = 3930;\nexports.ER_CLIENT_KEYRING_UDF_KEY_TYPE_INVALID = 3931;\nexports.ER_CLIENT_KEYRING_UDF_KEY_TOO_LONG = 3932;\nexports.ER_CLIENT_KEYRING_UDF_KEY_TYPE_TOO_LONG = 3933;\nexports.ER_JSON_SCHEMA_VALIDATION_ERROR_WITH_DETAILED_REPORT = 3934;\nexports.ER_DA_UDF_INVALID_CHARSET_SPECIFIED = 3935;\nexports.ER_DA_UDF_INVALID_CHARSET = 3936;\nexports.ER_DA_UDF_INVALID_COLLATION = 3937;\nexports.ER_DA_UDF_INVALID_EXTENSION_ARGUMENT_TYPE = 3938;\nexports.ER_MULTIPLE_CONSTRAINTS_WITH_SAME_NAME = 3939;\nexports.ER_CONSTRAINT_NOT_FOUND = 3940;\nexports.ER_ALTER_CONSTRAINT_ENFORCEMENT_NOT_SUPPORTED = 3941;\nexports.ER_TABLE_VALUE_CONSTRUCTOR_MUST_HAVE_COLUMNS = 3942;\nexports.ER_TABLE_VALUE_CONSTRUCTOR_CANNOT_HAVE_DEFAULT = 3943;\nexports.ER_CLIENT_QUERY_FAILURE_INVALID_NON_ROW_FORMAT = 3944;\nexports.ER_REQUIRE_ROW_FORMAT_INVALID_VALUE = 3945;\nexports.ER_FAILED_TO_DETERMINE_IF_ROLE_IS_MANDATORY = 3946;\nexports.ER_FAILED_TO_FETCH_MANDATORY_ROLE_LIST = 3947;\nexports.ER_CLIENT_LOCAL_FILES_DISABLED = 3948;\nexports.ER_IMP_INCOMPATIBLE_CFG_VERSION = 3949;\nexports.ER_DA_OOM = 3950;\nexports.ER_DA_UDF_INVALID_ARGUMENT_TO_SET_CHARSET = 3951;\nexports.ER_DA_UDF_INVALID_RETURN_TYPE_TO_SET_CHARSET = 3952;\nexports.ER_MULTIPLE_INTO_CLAUSES = 3953;\nexports.ER_MISPLACED_INTO = 3954;\nexports.ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK = 3955;\nexports.ER_WARN_DEPRECATED_YEAR_UNSIGNED = 3956;\nexports.ER_CLONE_NETWORK_PACKET = 3957;\nexports.ER_SDI_OPERATION_FAILED_MISSING_RECORD = 3958;\nexports.ER_DEPENDENT_BY_CHECK_CONSTRAINT = 3959;\nexports.ER_GRP_OPERATION_NOT_ALLOWED_GR_MUST_STOP = 3960;\nexports.ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY = 3961;\nexports.ER_WARN_DEPRECATED_INNER_INTO = 3962;\nexports.ER_WARN_DEPRECATED_VALUES_FUNCTION_ALWAYS_NULL = 3963;\nexports.ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS = 3964;\nexports.ER_WARN_DEPRECATED_FOUND_ROWS = 3965;\nexports.ER_MISSING_JSON_VALUE = 3966;\nexports.ER_MULTIPLE_JSON_VALUES = 3967;\nexports.ER_HOSTNAME_TOO_LONG = 3968;\nexports.ER_WARN_CLIENT_DEPRECATED_PARTITION_PREFIX_KEY = 3969;\nexports.ER_GROUP_REPLICATION_USER_EMPTY_MSG = 3970;\nexports.ER_GROUP_REPLICATION_USER_MANDATORY_MSG = 3971;\nexports.ER_GROUP_REPLICATION_PASSWORD_LENGTH = 3972;\nexports.ER_SUBQUERY_TRANSFORM_REJECTED = 3973;\nexports.ER_DA_GRP_RPL_RECOVERY_ENDPOINT_FORMAT = 3974;\nexports.ER_DA_GRP_RPL_RECOVERY_ENDPOINT_INVALID = 3975;\nexports.ER_WRONG_VALUE_FOR_VAR_PLUS_ACTIONABLE_PART = 3976;\nexports.ER_STATEMENT_NOT_ALLOWED_AFTER_START_TRANSACTION = 3977;\nexports.ER_FOREIGN_KEY_WITH_ATOMIC_CREATE_SELECT = 3978;\nexports.ER_NOT_ALLOWED_WITH_START_TRANSACTION = 3979;\nexports.ER_INVALID_JSON_ATTRIBUTE = 3980;\nexports.ER_ENGINE_ATTRIBUTE_NOT_SUPPORTED = 3981;\nexports.ER_INVALID_USER_ATTRIBUTE_JSON = 3982;\nexports.ER_INNODB_REDO_DISABLED = 3983;\nexports.ER_INNODB_REDO_ARCHIVING_ENABLED = 3984;\nexports.ER_MDL_OUT_OF_RESOURCES = 3985;\nexports.ER_IMPLICIT_COMPARISON_FOR_JSON = 3986;\nexports.ER_FUNCTION_DOES_NOT_SUPPORT_CHARACTER_SET = 3987;\nexports.ER_IMPOSSIBLE_STRING_CONVERSION = 3988;\nexports.ER_SCHEMA_READ_ONLY = 3989;\nexports.ER_RPL_ASYNC_RECONNECT_GTID_MODE_OFF = 3990;\nexports.ER_RPL_ASYNC_RECONNECT_AUTO_POSITION_OFF = 3991;\nexports.ER_DISABLE_GTID_MODE_REQUIRES_ASYNC_RECONNECT_OFF = 3992;\nexports.ER_DISABLE_AUTO_POSITION_REQUIRES_ASYNC_RECONNECT_OFF = 3993;\nexports.ER_INVALID_PARAMETER_USE = 3994;\nexports.ER_CHARACTER_SET_MISMATCH = 3995;\nexports.ER_WARN_VAR_VALUE_CHANGE_NOT_SUPPORTED = 3996;\nexports.ER_INVALID_TIME_ZONE_INTERVAL = 3997;\nexports.ER_INVALID_CAST = 3998;\nexports.ER_HYPERGRAPH_NOT_SUPPORTED_YET = 3999;\nexports.ER_WARN_HYPERGRAPH_EXPERIMENTAL = 4000;\nexports.ER_DA_NO_ERROR_LOG_PARSER_CONFIGURED = 4001;\nexports.ER_DA_ERROR_LOG_TABLE_DISABLED = 4002;\nexports.ER_DA_ERROR_LOG_MULTIPLE_FILTERS = 4003;\nexports.ER_DA_CANT_OPEN_ERROR_LOG = 4004;\nexports.ER_USER_REFERENCED_AS_DEFINER = 4005;\nexports.ER_CANNOT_USER_REFERENCED_AS_DEFINER = 4006;\nexports.ER_REGEX_NUMBER_TOO_BIG = 4007;\nexports.ER_SPVAR_NONINTEGER_TYPE = 4008;\nexports.WARN_UNSUPPORTED_ACL_TABLES_READ = 4009;\nexports.ER_BINLOG_UNSAFE_ACL_TABLE_READ_IN_DML_DDL = 4010;\nexports.ER_STOP_REPLICA_MONITOR_IO_THREAD_TIMEOUT = 4011;\nexports.ER_STARTING_REPLICA_MONITOR_IO_THREAD = 4012;\nexports.ER_CANT_USE_ANONYMOUS_TO_GTID_WITH_GTID_MODE_NOT_ON = 4013;\nexports.ER_CANT_COMBINE_ANONYMOUS_TO_GTID_AND_AUTOPOSITION = 4014;\nexports.ER_ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_REQUIRES_GTID_MODE_ON = 4015;\nexports.ER_SQL_REPLICA_SKIP_COUNTER_USED_WITH_GTID_MODE_ON = 4016;\nexports.ER_USING_ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_AS_LOCAL_OR_UUID = 4017;\nexports.ER_CANT_SET_ANONYMOUS_TO_GTID_AND_WAIT_UNTIL_SQL_THD_AFTER_GTIDS = 4018;\nexports.ER_CANT_SET_SQL_AFTER_OR_BEFORE_GTIDS_WITH_ANONYMOUS_TO_GTID = 4019;\nexports.ER_ANONYMOUS_TO_GTID_UUID_SAME_AS_GROUP_NAME = 4020;\nexports.ER_CANT_USE_SAME_UUID_AS_GROUP_NAME = 4021;\nexports.ER_GRP_RPL_RECOVERY_CHANNEL_STILL_RUNNING = 4022;\nexports.ER_INNODB_INVALID_AUTOEXTEND_SIZE_VALUE = 4023;\nexports.ER_INNODB_INCOMPATIBLE_WITH_TABLESPACE = 4024;\nexports.ER_INNODB_AUTOEXTEND_SIZE_OUT_OF_RANGE = 4025;\nexports.ER_CANNOT_USE_AUTOEXTEND_SIZE_CLAUSE = 4026;\nexports.ER_ROLE_GRANTED_TO_ITSELF = 4027;\nexports.ER_TABLE_MUST_HAVE_A_VISIBLE_COLUMN = 4028;\nexports.ER_INNODB_COMPRESSION_FAILURE = 4029;\nexports.ER_WARN_ASYNC_CONN_FAILOVER_NETWORK_NAMESPACE = 4030;\nexports.ER_CLIENT_INTERACTION_TIMEOUT = 4031;\nexports.ER_INVALID_CAST_TO_GEOMETRY = 4032;\nexports.ER_INVALID_CAST_POLYGON_RING_DIRECTION = 4033;\nexports.ER_GIS_DIFFERENT_SRIDS_AGGREGATION = 4034;\nexports.ER_RELOAD_KEYRING_FAILURE = 4035;\nexports.ER_SDI_GET_KEYS_INVALID_TABLESPACE = 4036;\nexports.ER_CHANGE_RPL_SRC_WRONG_COMPRESSION_ALGORITHM_SIZE = 4037;\nexports.ER_WARN_DEPRECATED_TLS_VERSION_FOR_CHANNEL_CLI = 4038;\nexports.ER_CANT_USE_SAME_UUID_AS_VIEW_CHANGE_UUID = 4039;\nexports.ER_ANONYMOUS_TO_GTID_UUID_SAME_AS_VIEW_CHANGE_UUID = 4040;\nexports.ER_GRP_RPL_VIEW_CHANGE_UUID_FAIL_GET_VARIABLE = 4041;\nexports.ER_WARN_ADUIT_LOG_MAX_SIZE_AND_PRUNE_SECONDS = 4042;\nexports.ER_WARN_ADUIT_LOG_MAX_SIZE_CLOSE_TO_ROTATE_ON_SIZE = 4043;\nexports.ER_KERBEROS_CREATE_USER = 4044;\nexports.ER_INSTALL_PLUGIN_CONFLICT_CLIENT = 4045;\nexports.ER_DA_ERROR_LOG_COMPONENT_FLUSH_FAILED = 4046;\nexports.ER_WARN_SQL_AFTER_MTS_GAPS_GAP_NOT_CALCULATED = 4047;\nexports.ER_INVALID_ASSIGNMENT_TARGET = 4048;\nexports.ER_OPERATION_NOT_ALLOWED_ON_GR_SECONDARY = 4049;\nexports.ER_GRP_RPL_FAILOVER_CHANNEL_STATUS_PROPAGATION = 4050;\nexports.ER_WARN_AUDIT_LOG_FORMAT_UNIX_TIMESTAMP_ONLY_WHEN_JSON = 4051;\nexports.ER_INVALID_MFA_PLUGIN_SPECIFIED = 4052;\nexports.ER_IDENTIFIED_BY_UNSUPPORTED = 4053;\nexports.ER_INVALID_PLUGIN_FOR_REGISTRATION = 4054;\nexports.ER_PLUGIN_REQUIRES_REGISTRATION = 4055;\nexports.ER_MFA_METHOD_EXISTS = 4056;\nexports.ER_MFA_METHOD_NOT_EXISTS = 4057;\nexports.ER_AUTHENTICATION_POLICY_MISMATCH = 4058;\nexports.ER_PLUGIN_REGISTRATION_DONE = 4059;\nexports.ER_INVALID_USER_FOR_REGISTRATION = 4060;\nexports.ER_USER_REGISTRATION_FAILED = 4061;\nexports.ER_MFA_METHODS_INVALID_ORDER = 4062;\nexports.ER_MFA_METHODS_IDENTICAL = 4063;\nexports.ER_INVALID_MFA_OPERATIONS_FOR_PASSWORDLESS_USER = 4064;\nexports.ER_CHANGE_REPLICATION_SOURCE_NO_OPTIONS_FOR_GTID_ONLY = 4065;\nexports.ER_CHANGE_REP_SOURCE_CANT_DISABLE_REQ_ROW_FORMAT_WITH_GTID_ONLY = 4066;\nexports.ER_CHANGE_REP_SOURCE_CANT_DISABLE_AUTO_POSITION_WITH_GTID_ONLY = 4067;\nexports.ER_CHANGE_REP_SOURCE_CANT_DISABLE_GTID_ONLY_WITHOUT_POSITIONS = 4068;\nexports.ER_CHANGE_REP_SOURCE_CANT_DISABLE_AUTO_POS_WITHOUT_POSITIONS = 4069;\nexports.ER_CHANGE_REP_SOURCE_GR_CHANNEL_WITH_GTID_MODE_NOT_ON = 4070;\nexports.ER_CANT_USE_GTID_ONLY_WITH_GTID_MODE_NOT_ON = 4071;\nexports.ER_WARN_C_DISABLE_GTID_ONLY_WITH_SOURCE_AUTO_POS_INVALID_POS = 4072;\nexports.ER_DA_SSL_FIPS_MODE_ERROR = 4073;\nexports.ER_VALUE_OUT_OF_RANGE = 4074;\nexports.ER_FULLTEXT_WITH_ROLLUP = 4075;\nexports.ER_REGEXP_MISSING_RESOURCE = 4076;\nexports.ER_WARN_REGEXP_USING_DEFAULT = 4077;\nexports.ER_REGEXP_MISSING_FILE = 4078;\nexports.ER_WARN_DEPRECATED_COLLATION = 4079;\nexports.ER_CONCURRENT_PROCEDURE_USAGE = 4080;\nexports.ER_DA_GLOBAL_CONN_LIMIT = 4081;\nexports.ER_DA_CONN_LIMIT = 4082;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COLUMN_TYPE_INSTANT = 4083;\nexports.ER_WARN_SF_UDF_NAME_COLLISION = 4084;\nexports.ER_CANNOT_PURGE_BINLOG_WITH_BACKUP_LOCK = 4085;\nexports.ER_TOO_MANY_WINDOWS = 4086;\nexports.ER_MYSQLBACKUP_CLIENT_MSG = 4087;\nexports.ER_COMMENT_CONTAINS_INVALID_STRING = 4088;\nexports.ER_DEFINITION_CONTAINS_INVALID_STRING = 4089;\nexports.ER_CANT_EXECUTE_COMMAND_WITH_ASSIGNED_GTID_NEXT = 4090;\nexports.ER_XA_TEMP_TABLE = 4091;\nexports.ER_INNODB_MAX_ROW_VERSION = 4092;\nexports.ER_INNODB_INSTANT_ADD_NOT_SUPPORTED_MAX_SIZE = 4093;\nexports.ER_OPERATION_NOT_ALLOWED_WHILE_PRIMARY_CHANGE_IS_RUNNING = 4094;\nexports.ER_WARN_DEPRECATED_DATETIME_DELIMITER = 4095;\nexports.ER_WARN_DEPRECATED_SUPERFLUOUS_DELIMITER = 4096;\nexports.ER_CANNOT_PERSIST_SENSITIVE_VARIABLES = 4097;\nexports.ER_WARN_CANNOT_SECURELY_PERSIST_SENSITIVE_VARIABLES = 4098;\nexports.ER_WARN_TRG_ALREADY_EXISTS = 4099;\nexports.ER_IF_NOT_EXISTS_UNSUPPORTED_TRG_EXISTS_ON_DIFFERENT_TABLE = 4100;\nexports.ER_IF_NOT_EXISTS_UNSUPPORTED_UDF_NATIVE_FCT_NAME_COLLISION = 4101;\nexports.ER_SET_PASSWORD_AUTH_PLUGIN_ERROR = 4102;\nexports.ER_REDUCED_DBLWR_FILE_CORRUPTED = 4103;\nexports.ER_REDUCED_DBLWR_PAGE_FOUND = 4104;\nexports.ER_SRS_INVALID_LATITUDE_OF_ORIGIN = 4105;\nexports.ER_SRS_INVALID_LONGITUDE_OF_ORIGIN = 4106;\nexports.ER_SRS_UNUSED_PROJ_PARAMETER_PRESENT = 4107;\nexports.ER_GIPK_COLUMN_EXISTS = 4108;\nexports.ER_GIPK_FAILED_AUTOINC_COLUMN_EXISTS = 4109;\nexports.ER_GIPK_COLUMN_ALTER_NOT_ALLOWED = 4110;\nexports.ER_DROP_PK_COLUMN_TO_DROP_GIPK = 4111;\nexports.ER_CREATE_SELECT_WITH_GIPK_DISALLOWED_IN_SBR = 4112;\nexports.ER_DA_EXPIRE_LOGS_DAYS_IGNORED = 4113;\nexports.ER_CTE_RECURSIVE_NOT_UNION = 4114;\nexports.ER_COMMAND_BACKEND_FAILED_TO_FETCH_SECURITY_CTX = 4115;\nexports.ER_COMMAND_SERVICE_BACKEND_FAILED = 4116;\nexports.ER_CLIENT_FILE_PRIVILEGE_FOR_REPLICATION_CHECKS = 4117;\nexports.ER_GROUP_REPLICATION_FORCE_MEMBERS_COMMAND_FAILURE = 4118;\nexports.ER_WARN_DEPRECATED_IDENT = 4119;\nexports.ER_INTERSECT_ALL_MAX_DUPLICATES_EXCEEDED = 4120;\nexports.ER_TP_QUERY_THRS_PER_GRP_EXCEEDS_TXN_THR_LIMIT = 4121;\nexports.ER_BAD_TIMESTAMP_FORMAT = 4122;\nexports.ER_SHAPE_PRIDICTION_UDF = 4123;\nexports.ER_SRS_INVALID_HEIGHT = 4124;\nexports.ER_SRS_INVALID_SCALING = 4125;\nexports.ER_SRS_INVALID_ZONE_WIDTH = 4126;\nexports.ER_SRS_INVALID_LATITUDE_POLAR_STERE_VAR_A = 4127;\nexports.ER_WARN_DEPRECATED_CLIENT_NO_SCHEMA_OPTION = 4128;\nexports.ER_TABLE_NOT_EMPTY = 4129;\nexports.ER_TABLE_NO_PRIMARY_KEY = 4130;\nexports.ER_TABLE_IN_SHARED_TABLESPACE = 4131;\nexports.ER_INDEX_OTHER_THAN_PK = 4132;\nexports.ER_LOAD_BULK_DATA_UNSORTED = 4133;\nexports.ER_BULK_EXECUTOR_ERROR = 4134;\nexports.ER_BULK_READER_LIBCURL_INIT_FAILED = 4135;\nexports.ER_BULK_READER_LIBCURL_ERROR = 4136;\nexports.ER_BULK_READER_SERVER_ERROR = 4137;\nexports.ER_BULK_READER_COMMUNICATION_ERROR = 4138;\nexports.ER_BULK_LOAD_DATA_FAILED = 4139;\nexports.ER_BULK_LOADER_COLUMN_TOO_BIG_FOR_LEFTOVER_BUFFER = 4140;\nexports.ER_BULK_LOADER_COMPONENT_ERROR = 4141;\nexports.ER_BULK_LOADER_FILE_CONTAINS_LESS_LINES_THAN_IGNORE_CLAUSE = 4142;\nexports.ER_BULK_PARSER_MISSING_ENCLOSED_BY = 4143;\nexports.ER_BULK_PARSER_ROW_BUFFER_MAX_TOTAL_COLS_EXCEEDED = 4144;\nexports.ER_BULK_PARSER_COPY_BUFFER_SIZE_EXCEEDED = 4145;\nexports.ER_BULK_PARSER_UNEXPECTED_END_OF_INPUT = 4146;\nexports.ER_BULK_PARSER_UNEXPECTED_ROW_TERMINATOR = 4147;\nexports.ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_ENDING_ENCLOSED_BY = 4148;\nexports.ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_NULL_ESCAPE = 4149;\nexports.ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_COLUMN_TERMINATOR = 4150;\nexports.ER_BULK_PARSER_INCOMPLETE_ESCAPE_SEQUENCE = 4151;\nexports.ER_LOAD_BULK_DATA_FAILED = 4152;\nexports.ER_LOAD_BULK_DATA_WRONG_VALUE_FOR_FIELD = 4153;\nexports.ER_LOAD_BULK_DATA_WARN_NULL_TO_NOTNULL = 4154;\nexports.ER_REQUIRE_TABLE_PRIMARY_KEY_CHECK_GENERATE_WITH_GR = 4155;\nexports.ER_CANT_CHANGE_SYS_VAR_IN_READ_ONLY_MODE = 4156;\nexports.ER_INNODB_INSTANT_ADD_DROP_NOT_SUPPORTED_MAX_SIZE = 4157;\nexports.ER_INNODB_INSTANT_ADD_NOT_SUPPORTED_MAX_FIELDS = 4158;\nexports.ER_CANT_SET_PERSISTED = 4159;\nexports.ER_INSTALL_COMPONENT_SET_NULL_VALUE = 4160;\nexports.ER_INSTALL_COMPONENT_SET_UNUSED_VALUE = 4161;\nexports.ER_WARN_DEPRECATED_USER_DEFINED_COLLATIONS = 4162;\n// Lookup-by-number table\nexports[1] = \"EE_CANTCREATEFILE\";\nexports[2] = \"EE_READ\";\nexports[3] = \"EE_WRITE\";\nexports[4] = \"EE_BADCLOSE\";\nexports[5] = \"EE_OUTOFMEMORY\";\nexports[6] = \"EE_DELETE\";\nexports[7] = \"EE_LINK\";\nexports[9] = \"EE_EOFERR\";\nexports[10] = \"EE_CANTLOCK\";\nexports[11] = \"EE_CANTUNLOCK\";\nexports[12] = \"EE_DIR\";\nexports[13] = \"EE_STAT\";\nexports[14] = \"EE_CANT_CHSIZE\";\nexports[15] = \"EE_CANT_OPEN_STREAM\";\nexports[16] = \"EE_GETWD\";\nexports[17] = \"EE_SETWD\";\nexports[18] = \"EE_LINK_WARNING\";\nexports[19] = \"EE_OPEN_WARNING\";\nexports[20] = \"EE_DISK_FULL\";\nexports[21] = \"EE_CANT_MKDIR\";\nexports[22] = \"EE_UNKNOWN_CHARSET\";\nexports[23] = \"EE_OUT_OF_FILERESOURCES\";\nexports[24] = \"EE_CANT_READLINK\";\nexports[25] = \"EE_CANT_SYMLINK\";\nexports[26] = \"EE_REALPATH\";\nexports[27] = \"EE_SYNC\";\nexports[28] = \"EE_UNKNOWN_COLLATION\";\nexports[29] = \"EE_FILENOTFOUND\";\nexports[30] = \"EE_FILE_NOT_CLOSED\";\nexports[31] = \"EE_CHANGE_OWNERSHIP\";\nexports[32] = \"EE_CHANGE_PERMISSIONS\";\nexports[33] = \"EE_CANT_SEEK\";\nexports[34] = \"EE_CAPACITY_EXCEEDED\";\nexports[35] = \"EE_DISK_FULL_WITH_RETRY_MSG\";\nexports[36] = \"EE_FAILED_TO_CREATE_TIMER\";\nexports[37] = \"EE_FAILED_TO_DELETE_TIMER\";\nexports[38] = \"EE_FAILED_TO_CREATE_TIMER_QUEUE\";\nexports[39] = \"EE_FAILED_TO_START_TIMER_NOTIFY_THREAD\";\nexports[40] = \"EE_FAILED_TO_CREATE_TIMER_NOTIFY_THREAD_INTERRUPT_EVENT\";\nexports[41] = \"EE_EXITING_TIMER_NOTIFY_THREAD\";\nexports[42] = \"EE_WIN_LIBRARY_LOAD_FAILED\";\nexports[43] = \"EE_WIN_RUN_TIME_ERROR_CHECK\";\nexports[44] = \"EE_FAILED_TO_DETERMINE_LARGE_PAGE_SIZE\";\nexports[45] = \"EE_FAILED_TO_KILL_ALL_THREADS\";\nexports[46] = \"EE_FAILED_TO_CREATE_IO_COMPLETION_PORT\";\nexports[47] = \"EE_FAILED_TO_OPEN_DEFAULTS_FILE\";\nexports[48] = \"EE_FAILED_TO_HANDLE_DEFAULTS_FILE\";\nexports[49] = \"EE_WRONG_DIRECTIVE_IN_CONFIG_FILE\";\nexports[50] = \"EE_SKIPPING_DIRECTIVE_DUE_TO_MAX_INCLUDE_RECURSION\";\nexports[51] = \"EE_INCORRECT_GRP_DEFINITION_IN_CONFIG_FILE\";\nexports[52] = \"EE_OPTION_WITHOUT_GRP_IN_CONFIG_FILE\";\nexports[53] = \"EE_CONFIG_FILE_PERMISSION_ERROR\";\nexports[54] = \"EE_IGNORE_WORLD_WRITABLE_CONFIG_FILE\";\nexports[55] = \"EE_USING_DISABLED_OPTION\";\nexports[56] = \"EE_USING_DISABLED_SHORT_OPTION\";\nexports[57] = \"EE_USING_PASSWORD_ON_CLI_IS_INSECURE\";\nexports[58] = \"EE_UNKNOWN_SUFFIX_FOR_VARIABLE\";\nexports[59] = \"EE_SSL_ERROR_FROM_FILE\";\nexports[60] = \"EE_SSL_ERROR\";\nexports[61] = \"EE_NET_SEND_ERROR_IN_BOOTSTRAP\";\nexports[62] = \"EE_PACKETS_OUT_OF_ORDER\";\nexports[63] = \"EE_UNKNOWN_PROTOCOL_OPTION\";\nexports[64] = \"EE_FAILED_TO_LOCATE_SERVER_PUBLIC_KEY\";\nexports[65] = \"EE_PUBLIC_KEY_NOT_IN_PEM_FORMAT\";\nexports[66] = \"EE_DEBUG_INFO\";\nexports[67] = \"EE_UNKNOWN_VARIABLE\";\nexports[68] = \"EE_UNKNOWN_OPTION\";\nexports[69] = \"EE_UNKNOWN_SHORT_OPTION\";\nexports[70] = \"EE_OPTION_WITHOUT_ARGUMENT\";\nexports[71] = \"EE_OPTION_REQUIRES_ARGUMENT\";\nexports[72] = \"EE_SHORT_OPTION_REQUIRES_ARGUMENT\";\nexports[73] = \"EE_OPTION_IGNORED_DUE_TO_INVALID_VALUE\";\nexports[74] = \"EE_OPTION_WITH_EMPTY_VALUE\";\nexports[75] = \"EE_FAILED_TO_ASSIGN_MAX_VALUE_TO_OPTION\";\nexports[76] = \"EE_INCORRECT_BOOLEAN_VALUE_FOR_OPTION\";\nexports[77] = \"EE_FAILED_TO_SET_OPTION_VALUE\";\nexports[78] = \"EE_INCORRECT_INT_VALUE_FOR_OPTION\";\nexports[79] = \"EE_INCORRECT_UINT_VALUE_FOR_OPTION\";\nexports[80] = \"EE_ADJUSTED_SIGNED_VALUE_FOR_OPTION\";\nexports[81] = \"EE_ADJUSTED_UNSIGNED_VALUE_FOR_OPTION\";\nexports[82] = \"EE_ADJUSTED_ULONGLONG_VALUE_FOR_OPTION\";\nexports[83] = \"EE_ADJUSTED_DOUBLE_VALUE_FOR_OPTION\";\nexports[84] = \"EE_INVALID_DECIMAL_VALUE_FOR_OPTION\";\nexports[85] = \"EE_COLLATION_PARSER_ERROR\";\nexports[86] = \"EE_FAILED_TO_RESET_BEFORE_PRIMARY_IGNORABLE_CHAR\";\nexports[87] = \"EE_FAILED_TO_RESET_BEFORE_TERTIARY_IGNORABLE_CHAR\";\nexports[88] = \"EE_SHIFT_CHAR_OUT_OF_RANGE\";\nexports[89] = \"EE_RESET_CHAR_OUT_OF_RANGE\";\nexports[90] = \"EE_UNKNOWN_LDML_TAG\";\nexports[91] = \"EE_FAILED_TO_RESET_BEFORE_SECONDARY_IGNORABLE_CHAR\";\nexports[92] = \"EE_FAILED_PROCESSING_DIRECTIVE\";\nexports[93] = \"EE_PTHREAD_KILL_FAILED\";\nexports[120] = \"HA_ERR_KEY_NOT_FOUND\";\nexports[121] = \"HA_ERR_FOUND_DUPP_KEY\";\nexports[122] = \"HA_ERR_INTERNAL_ERROR\";\nexports[123] = \"HA_ERR_RECORD_CHANGED\";\nexports[124] = \"HA_ERR_WRONG_INDEX\";\nexports[125] = \"HA_ERR_ROLLED_BACK\";\nexports[126] = \"HA_ERR_CRASHED\";\nexports[127] = \"HA_ERR_WRONG_IN_RECORD\";\nexports[128] = \"HA_ERR_OUT_OF_MEM\";\nexports[130] = \"HA_ERR_NOT_A_TABLE\";\nexports[131] = \"HA_ERR_WRONG_COMMAND\";\nexports[132] = \"HA_ERR_OLD_FILE\";\nexports[133] = \"HA_ERR_NO_ACTIVE_RECORD\";\nexports[134] = \"HA_ERR_RECORD_DELETED\";\nexports[135] = \"HA_ERR_RECORD_FILE_FULL\";\nexports[136] = \"HA_ERR_INDEX_FILE_FULL\";\nexports[137] = \"HA_ERR_END_OF_FILE\";\nexports[138] = \"HA_ERR_UNSUPPORTED\";\nexports[139] = \"HA_ERR_TOO_BIG_ROW\";\nexports[140] = \"HA_WRONG_CREATE_OPTION\";\nexports[141] = \"HA_ERR_FOUND_DUPP_UNIQUE\";\nexports[142] = \"HA_ERR_UNKNOWN_CHARSET\";\nexports[143] = \"HA_ERR_WRONG_MRG_TABLE_DEF\";\nexports[144] = \"HA_ERR_CRASHED_ON_REPAIR\";\nexports[145] = \"HA_ERR_CRASHED_ON_USAGE\";\nexports[146] = \"HA_ERR_LOCK_WAIT_TIMEOUT\";\nexports[147] = \"HA_ERR_LOCK_TABLE_FULL\";\nexports[148] = \"HA_ERR_READ_ONLY_TRANSACTION\";\nexports[149] = \"HA_ERR_LOCK_DEADLOCK\";\nexports[150] = \"HA_ERR_CANNOT_ADD_FOREIGN\";\nexports[151] = \"HA_ERR_NO_REFERENCED_ROW\";\nexports[152] = \"HA_ERR_ROW_IS_REFERENCED\";\nexports[153] = \"HA_ERR_NO_SAVEPOINT\";\nexports[154] = \"HA_ERR_NON_UNIQUE_BLOCK_SIZE\";\nexports[155] = \"HA_ERR_NO_SUCH_TABLE\";\nexports[156] = \"HA_ERR_TABLE_EXIST\";\nexports[157] = \"HA_ERR_NO_CONNECTION\";\nexports[158] = \"HA_ERR_NULL_IN_SPATIAL\";\nexports[159] = \"HA_ERR_TABLE_DEF_CHANGED\";\nexports[160] = \"HA_ERR_NO_PARTITION_FOUND\";\nexports[161] = \"HA_ERR_RBR_LOGGING_FAILED\";\nexports[162] = \"HA_ERR_DROP_INDEX_FK\";\nexports[163] = \"HA_ERR_FOREIGN_DUPLICATE_KEY\";\nexports[164] = \"HA_ERR_TABLE_NEEDS_UPGRADE\";\nexports[165] = \"HA_ERR_TABLE_READONLY\";\nexports[166] = \"HA_ERR_AUTOINC_READ_FAILED\";\nexports[167] = \"HA_ERR_AUTOINC_ERANGE\";\nexports[168] = \"HA_ERR_GENERIC\";\nexports[169] = \"HA_ERR_RECORD_IS_THE_SAME\";\nexports[170] = \"HA_ERR_LOGGING_IMPOSSIBLE\";\nexports[171] = \"HA_ERR_CORRUPT_EVENT\";\nexports[172] = \"HA_ERR_NEW_FILE\";\nexports[173] = \"HA_ERR_ROWS_EVENT_APPLY\";\nexports[174] = \"HA_ERR_INITIALIZATION\";\nexports[175] = \"HA_ERR_FILE_TOO_SHORT\";\nexports[176] = \"HA_ERR_WRONG_CRC\";\nexports[177] = \"HA_ERR_TOO_MANY_CONCURRENT_TRXS\";\nexports[178] = \"HA_ERR_NOT_IN_LOCK_PARTITIONS\";\nexports[179] = \"HA_ERR_INDEX_COL_TOO_LONG\";\nexports[180] = \"HA_ERR_INDEX_CORRUPT\";\nexports[181] = \"HA_ERR_UNDO_REC_TOO_BIG\";\nexports[182] = \"HA_FTS_INVALID_DOCID\";\nexports[183] = \"HA_ERR_TABLE_IN_FK_CHECK\";\nexports[184] = \"HA_ERR_TABLESPACE_EXISTS\";\nexports[185] = \"HA_ERR_TOO_MANY_FIELDS\";\nexports[186] = \"HA_ERR_ROW_IN_WRONG_PARTITION\";\nexports[187] = \"HA_ERR_INNODB_READ_ONLY\";\nexports[188] = \"HA_ERR_FTS_EXCEED_RESULT_CACHE_LIMIT\";\nexports[189] = \"HA_ERR_TEMP_FILE_WRITE_FAILURE\";\nexports[190] = \"HA_ERR_INNODB_FORCED_RECOVERY\";\nexports[191] = \"HA_ERR_FTS_TOO_MANY_WORDS_IN_PHRASE\";\nexports[192] = \"HA_ERR_FK_DEPTH_EXCEEDED\";\nexports[193] = \"HA_MISSING_CREATE_OPTION\";\nexports[194] = \"HA_ERR_SE_OUT_OF_MEMORY\";\nexports[195] = \"HA_ERR_TABLE_CORRUPT\";\nexports[196] = \"HA_ERR_QUERY_INTERRUPTED\";\nexports[197] = \"HA_ERR_TABLESPACE_MISSING\";\nexports[198] = \"HA_ERR_TABLESPACE_IS_NOT_EMPTY\";\nexports[199] = \"HA_ERR_WRONG_FILE_NAME\";\nexports[200] = \"HA_ERR_NOT_ALLOWED_COMMAND\";\nexports[201] = \"HA_ERR_COMPUTE_FAILED\";\nexports[202] = \"HA_ERR_ROW_FORMAT_CHANGED\";\nexports[203] = \"HA_ERR_NO_WAIT_LOCK\";\nexports[204] = \"HA_ERR_DISK_FULL_NOWAIT\";\nexports[205] = \"HA_ERR_NO_SESSION_TEMP\";\nexports[206] = \"HA_ERR_WRONG_TABLE_NAME\";\nexports[207] = \"HA_ERR_TOO_LONG_PATH\";\nexports[208] = \"HA_ERR_SAMPLING_INIT_FAILED\";\nexports[209] = \"HA_ERR_FTS_TOO_MANY_NESTED_EXP\";\nexports[1000] = \"ER_HASHCHK\";\nexports[1001] = \"ER_NISAMCHK\";\nexports[1002] = \"ER_NO\";\nexports[1003] = \"ER_YES\";\nexports[1004] = \"ER_CANT_CREATE_FILE\";\nexports[1005] = \"ER_CANT_CREATE_TABLE\";\nexports[1006] = \"ER_CANT_CREATE_DB\";\nexports[1007] = \"ER_DB_CREATE_EXISTS\";\nexports[1008] = \"ER_DB_DROP_EXISTS\";\nexports[1009] = \"ER_DB_DROP_DELETE\";\nexports[1010] = \"ER_DB_DROP_RMDIR\";\nexports[1011] = \"ER_CANT_DELETE_FILE\";\nexports[1012] = \"ER_CANT_FIND_SYSTEM_REC\";\nexports[1013] = \"ER_CANT_GET_STAT\";\nexports[1014] = \"ER_CANT_GET_WD\";\nexports[1015] = \"ER_CANT_LOCK\";\nexports[1016] = \"ER_CANT_OPEN_FILE\";\nexports[1017] = \"ER_FILE_NOT_FOUND\";\nexports[1018] = \"ER_CANT_READ_DIR\";\nexports[1019] = \"ER_CANT_SET_WD\";\nexports[1020] = \"ER_CHECKREAD\";\nexports[1021] = \"ER_DISK_FULL\";\nexports[1022] = \"ER_DUP_KEY\";\nexports[1023] = \"ER_ERROR_ON_CLOSE\";\nexports[1024] = \"ER_ERROR_ON_READ\";\nexports[1025] = \"ER_ERROR_ON_RENAME\";\nexports[1026] = \"ER_ERROR_ON_WRITE\";\nexports[1027] = \"ER_FILE_USED\";\nexports[1028] = \"ER_FILSORT_ABORT\";\nexports[1029] = \"ER_FORM_NOT_FOUND\";\nexports[1030] = \"ER_GET_ERRNO\";\nexports[1031] = \"ER_ILLEGAL_HA\";\nexports[1032] = \"ER_KEY_NOT_FOUND\";\nexports[1033] = \"ER_NOT_FORM_FILE\";\nexports[1034] = \"ER_NOT_KEYFILE\";\nexports[1035] = \"ER_OLD_KEYFILE\";\nexports[1036] = \"ER_OPEN_AS_READONLY\";\nexports[1037] = \"ER_OUTOFMEMORY\";\nexports[1038] = \"ER_OUT_OF_SORTMEMORY\";\nexports[1039] = \"ER_UNEXPECTED_EOF\";\nexports[1040] = \"ER_CON_COUNT_ERROR\";\nexports[1041] = \"ER_OUT_OF_RESOURCES\";\nexports[1042] = \"ER_BAD_HOST_ERROR\";\nexports[1043] = \"ER_HANDSHAKE_ERROR\";\nexports[1044] = \"ER_DBACCESS_DENIED_ERROR\";\nexports[1045] = \"ER_ACCESS_DENIED_ERROR\";\nexports[1046] = \"ER_NO_DB_ERROR\";\nexports[1047] = \"ER_UNKNOWN_COM_ERROR\";\nexports[1048] = \"ER_BAD_NULL_ERROR\";\nexports[1049] = \"ER_BAD_DB_ERROR\";\nexports[1050] = \"ER_TABLE_EXISTS_ERROR\";\nexports[1051] = \"ER_BAD_TABLE_ERROR\";\nexports[1052] = \"ER_NON_UNIQ_ERROR\";\nexports[1053] = \"ER_SERVER_SHUTDOWN\";\nexports[1054] = \"ER_BAD_FIELD_ERROR\";\nexports[1055] = \"ER_WRONG_FIELD_WITH_GROUP\";\nexports[1056] = \"ER_WRONG_GROUP_FIELD\";\nexports[1057] = \"ER_WRONG_SUM_SELECT\";\nexports[1058] = \"ER_WRONG_VALUE_COUNT\";\nexports[1059] = \"ER_TOO_LONG_IDENT\";\nexports[1060] = \"ER_DUP_FIELDNAME\";\nexports[1061] = \"ER_DUP_KEYNAME\";\nexports[1062] = \"ER_DUP_ENTRY\";\nexports[1063] = \"ER_WRONG_FIELD_SPEC\";\nexports[1064] = \"ER_PARSE_ERROR\";\nexports[1065] = \"ER_EMPTY_QUERY\";\nexports[1066] = \"ER_NONUNIQ_TABLE\";\nexports[1067] = \"ER_INVALID_DEFAULT\";\nexports[1068] = \"ER_MULTIPLE_PRI_KEY\";\nexports[1069] = \"ER_TOO_MANY_KEYS\";\nexports[1070] = \"ER_TOO_MANY_KEY_PARTS\";\nexports[1071] = \"ER_TOO_LONG_KEY\";\nexports[1072] = \"ER_KEY_COLUMN_DOES_NOT_EXITS\";\nexports[1073] = \"ER_BLOB_USED_AS_KEY\";\nexports[1074] = \"ER_TOO_BIG_FIELDLENGTH\";\nexports[1075] = \"ER_WRONG_AUTO_KEY\";\nexports[1076] = \"ER_READY\";\nexports[1077] = \"ER_NORMAL_SHUTDOWN\";\nexports[1078] = \"ER_GOT_SIGNAL\";\nexports[1079] = \"ER_SHUTDOWN_COMPLETE\";\nexports[1080] = \"ER_FORCING_CLOSE\";\nexports[1081] = \"ER_IPSOCK_ERROR\";\nexports[1082] = \"ER_NO_SUCH_INDEX\";\nexports[1083] = \"ER_WRONG_FIELD_TERMINATORS\";\nexports[1084] = \"ER_BLOBS_AND_NO_TERMINATED\";\nexports[1085] = \"ER_TEXTFILE_NOT_READABLE\";\nexports[1086] = \"ER_FILE_EXISTS_ERROR\";\nexports[1087] = \"ER_LOAD_INFO\";\nexports[1088] = \"ER_ALTER_INFO\";\nexports[1089] = \"ER_WRONG_SUB_KEY\";\nexports[1090] = \"ER_CANT_REMOVE_ALL_FIELDS\";\nexports[1091] = \"ER_CANT_DROP_FIELD_OR_KEY\";\nexports[1092] = \"ER_INSERT_INFO\";\nexports[1093] = \"ER_UPDATE_TABLE_USED\";\nexports[1094] = \"ER_NO_SUCH_THREAD\";\nexports[1095] = \"ER_KILL_DENIED_ERROR\";\nexports[1096] = \"ER_NO_TABLES_USED\";\nexports[1097] = \"ER_TOO_BIG_SET\";\nexports[1098] = \"ER_NO_UNIQUE_LOGFILE\";\nexports[1099] = \"ER_TABLE_NOT_LOCKED_FOR_WRITE\";\nexports[1100] = \"ER_TABLE_NOT_LOCKED\";\nexports[1101] = \"ER_BLOB_CANT_HAVE_DEFAULT\";\nexports[1102] = \"ER_WRONG_DB_NAME\";\nexports[1103] = \"ER_WRONG_TABLE_NAME\";\nexports[1104] = \"ER_TOO_BIG_SELECT\";\nexports[1105] = \"ER_UNKNOWN_ERROR\";\nexports[1106] = \"ER_UNKNOWN_PROCEDURE\";\nexports[1107] = \"ER_WRONG_PARAMCOUNT_TO_PROCEDURE\";\nexports[1108] = \"ER_WRONG_PARAMETERS_TO_PROCEDURE\";\nexports[1109] = \"ER_UNKNOWN_TABLE\";\nexports[1110] = \"ER_FIELD_SPECIFIED_TWICE\";\nexports[1111] = \"ER_INVALID_GROUP_FUNC_USE\";\nexports[1112] = \"ER_UNSUPPORTED_EXTENSION\";\nexports[1113] = \"ER_TABLE_MUST_HAVE_COLUMNS\";\nexports[1114] = \"ER_RECORD_FILE_FULL\";\nexports[1115] = \"ER_UNKNOWN_CHARACTER_SET\";\nexports[1116] = \"ER_TOO_MANY_TABLES\";\nexports[1117] = \"ER_TOO_MANY_FIELDS\";\nexports[1118] = \"ER_TOO_BIG_ROWSIZE\";\nexports[1119] = \"ER_STACK_OVERRUN\";\nexports[1120] = \"ER_WRONG_OUTER_JOIN\";\nexports[1121] = \"ER_NULL_COLUMN_IN_INDEX\";\nexports[1122] = \"ER_CANT_FIND_UDF\";\nexports[1123] = \"ER_CANT_INITIALIZE_UDF\";\nexports[1124] = \"ER_UDF_NO_PATHS\";\nexports[1125] = \"ER_UDF_EXISTS\";\nexports[1126] = \"ER_CANT_OPEN_LIBRARY\";\nexports[1127] = \"ER_CANT_FIND_DL_ENTRY\";\nexports[1128] = \"ER_FUNCTION_NOT_DEFINED\";\nexports[1129] = \"ER_HOST_IS_BLOCKED\";\nexports[1130] = \"ER_HOST_NOT_PRIVILEGED\";\nexports[1131] = \"ER_PASSWORD_ANONYMOUS_USER\";\nexports[1132] = \"ER_PASSWORD_NOT_ALLOWED\";\nexports[1133] = \"ER_PASSWORD_NO_MATCH\";\nexports[1134] = \"ER_UPDATE_INFO\";\nexports[1135] = \"ER_CANT_CREATE_THREAD\";\nexports[1136] = \"ER_WRONG_VALUE_COUNT_ON_ROW\";\nexports[1137] = \"ER_CANT_REOPEN_TABLE\";\nexports[1138] = \"ER_INVALID_USE_OF_NULL\";\nexports[1139] = \"ER_REGEXP_ERROR\";\nexports[1140] = \"ER_MIX_OF_GROUP_FUNC_AND_FIELDS\";\nexports[1141] = \"ER_NONEXISTING_GRANT\";\nexports[1142] = \"ER_TABLEACCESS_DENIED_ERROR\";\nexports[1143] = \"ER_COLUMNACCESS_DENIED_ERROR\";\nexports[1144] = \"ER_ILLEGAL_GRANT_FOR_TABLE\";\nexports[1145] = \"ER_GRANT_WRONG_HOST_OR_USER\";\nexports[1146] = \"ER_NO_SUCH_TABLE\";\nexports[1147] = \"ER_NONEXISTING_TABLE_GRANT\";\nexports[1148] = \"ER_NOT_ALLOWED_COMMAND\";\nexports[1149] = \"ER_SYNTAX_ERROR\";\nexports[1150] = \"ER_UNUSED1\";\nexports[1151] = \"ER_UNUSED2\";\nexports[1152] = \"ER_ABORTING_CONNECTION\";\nexports[1153] = \"ER_NET_PACKET_TOO_LARGE\";\nexports[1154] = \"ER_NET_READ_ERROR_FROM_PIPE\";\nexports[1155] = \"ER_NET_FCNTL_ERROR\";\nexports[1156] = \"ER_NET_PACKETS_OUT_OF_ORDER\";\nexports[1157] = \"ER_NET_UNCOMPRESS_ERROR\";\nexports[1158] = \"ER_NET_READ_ERROR\";\nexports[1159] = \"ER_NET_READ_INTERRUPTED\";\nexports[1160] = \"ER_NET_ERROR_ON_WRITE\";\nexports[1161] = \"ER_NET_WRITE_INTERRUPTED\";\nexports[1162] = \"ER_TOO_LONG_STRING\";\nexports[1163] = \"ER_TABLE_CANT_HANDLE_BLOB\";\nexports[1164] = \"ER_TABLE_CANT_HANDLE_AUTO_INCREMENT\";\nexports[1165] = \"ER_UNUSED3\";\nexports[1166] = \"ER_WRONG_COLUMN_NAME\";\nexports[1167] = \"ER_WRONG_KEY_COLUMN\";\nexports[1168] = \"ER_WRONG_MRG_TABLE\";\nexports[1169] = \"ER_DUP_UNIQUE\";\nexports[1170] = \"ER_BLOB_KEY_WITHOUT_LENGTH\";\nexports[1171] = \"ER_PRIMARY_CANT_HAVE_NULL\";\nexports[1172] = \"ER_TOO_MANY_ROWS\";\nexports[1173] = \"ER_REQUIRES_PRIMARY_KEY\";\nexports[1174] = \"ER_NO_RAID_COMPILED\";\nexports[1175] = \"ER_UPDATE_WITHOUT_KEY_IN_SAFE_MODE\";\nexports[1176] = \"ER_KEY_DOES_NOT_EXITS\";\nexports[1177] = \"ER_CHECK_NO_SUCH_TABLE\";\nexports[1178] = \"ER_CHECK_NOT_IMPLEMENTED\";\nexports[1179] = \"ER_CANT_DO_THIS_DURING_AN_TRANSACTION\";\nexports[1180] = \"ER_ERROR_DURING_COMMIT\";\nexports[1181] = \"ER_ERROR_DURING_ROLLBACK\";\nexports[1182] = \"ER_ERROR_DURING_FLUSH_LOGS\";\nexports[1183] = \"ER_ERROR_DURING_CHECKPOINT\";\nexports[1184] = \"ER_NEW_ABORTING_CONNECTION\";\nexports[1185] = \"ER_DUMP_NOT_IMPLEMENTED\";\nexports[1186] = \"ER_FLUSH_MASTER_BINLOG_CLOSED\";\nexports[1187] = \"ER_INDEX_REBUILD\";\nexports[1188] = \"ER_SOURCE\";\nexports[1189] = \"ER_SOURCE_NET_READ\";\nexports[1190] = \"ER_SOURCE_NET_WRITE\";\nexports[1191] = \"ER_FT_MATCHING_KEY_NOT_FOUND\";\nexports[1192] = \"ER_LOCK_OR_ACTIVE_TRANSACTION\";\nexports[1193] = \"ER_UNKNOWN_SYSTEM_VARIABLE\";\nexports[1194] = \"ER_CRASHED_ON_USAGE\";\nexports[1195] = \"ER_CRASHED_ON_REPAIR\";\nexports[1196] = \"ER_WARNING_NOT_COMPLETE_ROLLBACK\";\nexports[1197] = \"ER_TRANS_CACHE_FULL\";\nexports[1198] = \"ER_SLAVE_MUST_STOP\";\nexports[1199] = \"ER_REPLICA_NOT_RUNNING\";\nexports[1200] = \"ER_BAD_REPLICA\";\nexports[1201] = \"ER_CONNECTION_METADATA\";\nexports[1202] = \"ER_REPLICA_THREAD\";\nexports[1203] = \"ER_TOO_MANY_USER_CONNECTIONS\";\nexports[1204] = \"ER_SET_CONSTANTS_ONLY\";\nexports[1205] = \"ER_LOCK_WAIT_TIMEOUT\";\nexports[1206] = \"ER_LOCK_TABLE_FULL\";\nexports[1207] = \"ER_READ_ONLY_TRANSACTION\";\nexports[1208] = \"ER_DROP_DB_WITH_READ_LOCK\";\nexports[1209] = \"ER_CREATE_DB_WITH_READ_LOCK\";\nexports[1210] = \"ER_WRONG_ARGUMENTS\";\nexports[1211] = \"ER_NO_PERMISSION_TO_CREATE_USER\";\nexports[1212] = \"ER_UNION_TABLES_IN_DIFFERENT_DIR\";\nexports[1213] = \"ER_LOCK_DEADLOCK\";\nexports[1214] = \"ER_TABLE_CANT_HANDLE_FT\";\nexports[1215] = \"ER_CANNOT_ADD_FOREIGN\";\nexports[1216] = \"ER_NO_REFERENCED_ROW\";\nexports[1217] = \"ER_ROW_IS_REFERENCED\";\nexports[1218] = \"ER_CONNECT_TO_SOURCE\";\nexports[1219] = \"ER_QUERY_ON_MASTER\";\nexports[1220] = \"ER_ERROR_WHEN_EXECUTING_COMMAND\";\nexports[1221] = \"ER_WRONG_USAGE\";\nexports[1222] = \"ER_WRONG_NUMBER_OF_COLUMNS_IN_SELECT\";\nexports[1223] = \"ER_CANT_UPDATE_WITH_READLOCK\";\nexports[1224] = \"ER_MIXING_NOT_ALLOWED\";\nexports[1225] = \"ER_DUP_ARGUMENT\";\nexports[1226] = \"ER_USER_LIMIT_REACHED\";\nexports[1227] = \"ER_SPECIFIC_ACCESS_DENIED_ERROR\";\nexports[1228] = \"ER_LOCAL_VARIABLE\";\nexports[1229] = \"ER_GLOBAL_VARIABLE\";\nexports[1230] = \"ER_NO_DEFAULT\";\nexports[1231] = \"ER_WRONG_VALUE_FOR_VAR\";\nexports[1232] = \"ER_WRONG_TYPE_FOR_VAR\";\nexports[1233] = \"ER_VAR_CANT_BE_READ\";\nexports[1234] = \"ER_CANT_USE_OPTION_HERE\";\nexports[1235] = \"ER_NOT_SUPPORTED_YET\";\nexports[1236] = \"ER_SOURCE_FATAL_ERROR_READING_BINLOG\";\nexports[1237] = \"ER_REPLICA_IGNORED_TABLE\";\nexports[1238] = \"ER_INCORRECT_GLOBAL_LOCAL_VAR\";\nexports[1239] = \"ER_WRONG_FK_DEF\";\nexports[1240] = \"ER_KEY_REF_DO_NOT_MATCH_TABLE_REF\";\nexports[1241] = \"ER_OPERAND_COLUMNS\";\nexports[1242] = \"ER_SUBQUERY_NO_1_ROW\";\nexports[1243] = \"ER_UNKNOWN_STMT_HANDLER\";\nexports[1244] = \"ER_CORRUPT_HELP_DB\";\nexports[1245] = \"ER_CYCLIC_REFERENCE\";\nexports[1246] = \"ER_AUTO_CONVERT\";\nexports[1247] = \"ER_ILLEGAL_REFERENCE\";\nexports[1248] = \"ER_DERIVED_MUST_HAVE_ALIAS\";\nexports[1249] = \"ER_SELECT_REDUCED\";\nexports[1250] = \"ER_TABLENAME_NOT_ALLOWED_HERE\";\nexports[1251] = \"ER_NOT_SUPPORTED_AUTH_MODE\";\nexports[1252] = \"ER_SPATIAL_CANT_HAVE_NULL\";\nexports[1253] = \"ER_COLLATION_CHARSET_MISMATCH\";\nexports[1254] = \"ER_SLAVE_WAS_RUNNING\";\nexports[1255] = \"ER_SLAVE_WAS_NOT_RUNNING\";\nexports[1256] = \"ER_TOO_BIG_FOR_UNCOMPRESS\";\nexports[1257] = \"ER_ZLIB_Z_MEM_ERROR\";\nexports[1258] = \"ER_ZLIB_Z_BUF_ERROR\";\nexports[1259] = \"ER_ZLIB_Z_DATA_ERROR\";\nexports[1260] = \"ER_CUT_VALUE_GROUP_CONCAT\";\nexports[1261] = \"ER_WARN_TOO_FEW_RECORDS\";\nexports[1262] = \"ER_WARN_TOO_MANY_RECORDS\";\nexports[1263] = \"ER_WARN_NULL_TO_NOTNULL\";\nexports[1264] = \"ER_WARN_DATA_OUT_OF_RANGE\";\nexports[1265] = \"WARN_DATA_TRUNCATED\";\nexports[1266] = \"ER_WARN_USING_OTHER_HANDLER\";\nexports[1267] = \"ER_CANT_AGGREGATE_2COLLATIONS\";\nexports[1268] = \"ER_DROP_USER\";\nexports[1269] = \"ER_REVOKE_GRANTS\";\nexports[1270] = \"ER_CANT_AGGREGATE_3COLLATIONS\";\nexports[1271] = \"ER_CANT_AGGREGATE_NCOLLATIONS\";\nexports[1272] = \"ER_VARIABLE_IS_NOT_STRUCT\";\nexports[1273] = \"ER_UNKNOWN_COLLATION\";\nexports[1274] = \"ER_REPLICA_IGNORED_SSL_PARAMS\";\nexports[1275] = \"ER_SERVER_IS_IN_SECURE_AUTH_MODE\";\nexports[1276] = \"ER_WARN_FIELD_RESOLVED\";\nexports[1277] = \"ER_BAD_REPLICA_UNTIL_COND\";\nexports[1278] = \"ER_MISSING_SKIP_REPLICA\";\nexports[1279] = \"ER_UNTIL_COND_IGNORED\";\nexports[1280] = \"ER_WRONG_NAME_FOR_INDEX\";\nexports[1281] = \"ER_WRONG_NAME_FOR_CATALOG\";\nexports[1282] = \"ER_WARN_QC_RESIZE\";\nexports[1283] = \"ER_BAD_FT_COLUMN\";\nexports[1284] = \"ER_UNKNOWN_KEY_CACHE\";\nexports[1285] = \"ER_WARN_HOSTNAME_WONT_WORK\";\nexports[1286] = \"ER_UNKNOWN_STORAGE_ENGINE\";\nexports[1287] = \"ER_WARN_DEPRECATED_SYNTAX\";\nexports[1288] = \"ER_NON_UPDATABLE_TABLE\";\nexports[1289] = \"ER_FEATURE_DISABLED\";\nexports[1290] = \"ER_OPTION_PREVENTS_STATEMENT\";\nexports[1291] = \"ER_DUPLICATED_VALUE_IN_TYPE\";\nexports[1292] = \"ER_TRUNCATED_WRONG_VALUE\";\nexports[1293] = \"ER_TOO_MUCH_AUTO_TIMESTAMP_COLS\";\nexports[1294] = \"ER_INVALID_ON_UPDATE\";\nexports[1295] = \"ER_UNSUPPORTED_PS\";\nexports[1296] = \"ER_GET_ERRMSG\";\nexports[1297] = \"ER_GET_TEMPORARY_ERRMSG\";\nexports[1298] = \"ER_UNKNOWN_TIME_ZONE\";\nexports[1299] = \"ER_WARN_INVALID_TIMESTAMP\";\nexports[1300] = \"ER_INVALID_CHARACTER_STRING\";\nexports[1301] = \"ER_WARN_ALLOWED_PACKET_OVERFLOWED\";\nexports[1302] = \"ER_CONFLICTING_DECLARATIONS\";\nexports[1303] = \"ER_SP_NO_RECURSIVE_CREATE\";\nexports[1304] = \"ER_SP_ALREADY_EXISTS\";\nexports[1305] = \"ER_SP_DOES_NOT_EXIST\";\nexports[1306] = \"ER_SP_DROP_FAILED\";\nexports[1307] = \"ER_SP_STORE_FAILED\";\nexports[1308] = \"ER_SP_LILABEL_MISMATCH\";\nexports[1309] = \"ER_SP_LABEL_REDEFINE\";\nexports[1310] = \"ER_SP_LABEL_MISMATCH\";\nexports[1311] = \"ER_SP_UNINIT_VAR\";\nexports[1312] = \"ER_SP_BADSELECT\";\nexports[1313] = \"ER_SP_BADRETURN\";\nexports[1314] = \"ER_SP_BADSTATEMENT\";\nexports[1315] = \"ER_UPDATE_LOG_DEPRECATED_IGNORED\";\nexports[1316] = \"ER_UPDATE_LOG_DEPRECATED_TRANSLATED\";\nexports[1317] = \"ER_QUERY_INTERRUPTED\";\nexports[1318] = \"ER_SP_WRONG_NO_OF_ARGS\";\nexports[1319] = \"ER_SP_COND_MISMATCH\";\nexports[1320] = \"ER_SP_NORETURN\";\nexports[1321] = \"ER_SP_NORETURNEND\";\nexports[1322] = \"ER_SP_BAD_CURSOR_QUERY\";\nexports[1323] = \"ER_SP_BAD_CURSOR_SELECT\";\nexports[1324] = \"ER_SP_CURSOR_MISMATCH\";\nexports[1325] = \"ER_SP_CURSOR_ALREADY_OPEN\";\nexports[1326] = \"ER_SP_CURSOR_NOT_OPEN\";\nexports[1327] = \"ER_SP_UNDECLARED_VAR\";\nexports[1328] = \"ER_SP_WRONG_NO_OF_FETCH_ARGS\";\nexports[1329] = \"ER_SP_FETCH_NO_DATA\";\nexports[1330] = \"ER_SP_DUP_PARAM\";\nexports[1331] = \"ER_SP_DUP_VAR\";\nexports[1332] = \"ER_SP_DUP_COND\";\nexports[1333] = \"ER_SP_DUP_CURS\";\nexports[1334] = \"ER_SP_CANT_ALTER\";\nexports[1335] = \"ER_SP_SUBSELECT_NYI\";\nexports[1336] = \"ER_STMT_NOT_ALLOWED_IN_SF_OR_TRG\";\nexports[1337] = \"ER_SP_VARCOND_AFTER_CURSHNDLR\";\nexports[1338] = \"ER_SP_CURSOR_AFTER_HANDLER\";\nexports[1339] = \"ER_SP_CASE_NOT_FOUND\";\nexports[1340] = \"ER_FPARSER_TOO_BIG_FILE\";\nexports[1341] = \"ER_FPARSER_BAD_HEADER\";\nexports[1342] = \"ER_FPARSER_EOF_IN_COMMENT\";\nexports[1343] = \"ER_FPARSER_ERROR_IN_PARAMETER\";\nexports[1344] = \"ER_FPARSER_EOF_IN_UNKNOWN_PARAMETER\";\nexports[1345] = \"ER_VIEW_NO_EXPLAIN\";\nexports[1346] = \"ER_FRM_UNKNOWN_TYPE\";\nexports[1347] = \"ER_WRONG_OBJECT\";\nexports[1348] = \"ER_NONUPDATEABLE_COLUMN\";\nexports[1349] = \"ER_VIEW_SELECT_DERIVED\";\nexports[1350] = \"ER_VIEW_SELECT_CLAUSE\";\nexports[1351] = \"ER_VIEW_SELECT_VARIABLE\";\nexports[1352] = \"ER_VIEW_SELECT_TMPTABLE\";\nexports[1353] = \"ER_VIEW_WRONG_LIST\";\nexports[1354] = \"ER_WARN_VIEW_MERGE\";\nexports[1355] = \"ER_WARN_VIEW_WITHOUT_KEY\";\nexports[1356] = \"ER_VIEW_INVALID\";\nexports[1357] = \"ER_SP_NO_DROP_SP\";\nexports[1358] = \"ER_SP_GOTO_IN_HNDLR\";\nexports[1359] = \"ER_TRG_ALREADY_EXISTS\";\nexports[1360] = \"ER_TRG_DOES_NOT_EXIST\";\nexports[1361] = \"ER_TRG_ON_VIEW_OR_TEMP_TABLE\";\nexports[1362] = \"ER_TRG_CANT_CHANGE_ROW\";\nexports[1363] = \"ER_TRG_NO_SUCH_ROW_IN_TRG\";\nexports[1364] = \"ER_NO_DEFAULT_FOR_FIELD\";\nexports[1365] = \"ER_DIVISION_BY_ZERO\";\nexports[1366] = \"ER_TRUNCATED_WRONG_VALUE_FOR_FIELD\";\nexports[1367] = \"ER_ILLEGAL_VALUE_FOR_TYPE\";\nexports[1368] = \"ER_VIEW_NONUPD_CHECK\";\nexports[1369] = \"ER_VIEW_CHECK_FAILED\";\nexports[1370] = \"ER_PROCACCESS_DENIED_ERROR\";\nexports[1371] = \"ER_RELAY_LOG_FAIL\";\nexports[1372] = \"ER_PASSWD_LENGTH\";\nexports[1373] = \"ER_UNKNOWN_TARGET_BINLOG\";\nexports[1374] = \"ER_IO_ERR_LOG_INDEX_READ\";\nexports[1375] = \"ER_BINLOG_PURGE_PROHIBITED\";\nexports[1376] = \"ER_FSEEK_FAIL\";\nexports[1377] = \"ER_BINLOG_PURGE_FATAL_ERR\";\nexports[1378] = \"ER_LOG_IN_USE\";\nexports[1379] = \"ER_LOG_PURGE_UNKNOWN_ERR\";\nexports[1380] = \"ER_RELAY_LOG_INIT\";\nexports[1381] = \"ER_NO_BINARY_LOGGING\";\nexports[1382] = \"ER_RESERVED_SYNTAX\";\nexports[1383] = \"ER_WSAS_FAILED\";\nexports[1384] = \"ER_DIFF_GROUPS_PROC\";\nexports[1385] = \"ER_NO_GROUP_FOR_PROC\";\nexports[1386] = \"ER_ORDER_WITH_PROC\";\nexports[1387] = \"ER_LOGGING_PROHIBIT_CHANGING_OF\";\nexports[1388] = \"ER_NO_FILE_MAPPING\";\nexports[1389] = \"ER_WRONG_MAGIC\";\nexports[1390] = \"ER_PS_MANY_PARAM\";\nexports[1391] = \"ER_KEY_PART_0\";\nexports[1392] = \"ER_VIEW_CHECKSUM\";\nexports[1393] = \"ER_VIEW_MULTIUPDATE\";\nexports[1394] = \"ER_VIEW_NO_INSERT_FIELD_LIST\";\nexports[1395] = \"ER_VIEW_DELETE_MERGE_VIEW\";\nexports[1396] = \"ER_CANNOT_USER\";\nexports[1397] = \"ER_XAER_NOTA\";\nexports[1398] = \"ER_XAER_INVAL\";\nexports[1399] = \"ER_XAER_RMFAIL\";\nexports[1400] = \"ER_XAER_OUTSIDE\";\nexports[1401] = \"ER_XAER_RMERR\";\nexports[1402] = \"ER_XA_RBROLLBACK\";\nexports[1403] = \"ER_NONEXISTING_PROC_GRANT\";\nexports[1404] = \"ER_PROC_AUTO_GRANT_FAIL\";\nexports[1405] = \"ER_PROC_AUTO_REVOKE_FAIL\";\nexports[1406] = \"ER_DATA_TOO_LONG\";\nexports[1407] = \"ER_SP_BAD_SQLSTATE\";\nexports[1408] = \"ER_STARTUP\";\nexports[1409] = \"ER_LOAD_FROM_FIXED_SIZE_ROWS_TO_VAR\";\nexports[1410] = \"ER_CANT_CREATE_USER_WITH_GRANT\";\nexports[1411] = \"ER_WRONG_VALUE_FOR_TYPE\";\nexports[1412] = \"ER_TABLE_DEF_CHANGED\";\nexports[1413] = \"ER_SP_DUP_HANDLER\";\nexports[1414] = \"ER_SP_NOT_VAR_ARG\";\nexports[1415] = \"ER_SP_NO_RETSET\";\nexports[1416] = \"ER_CANT_CREATE_GEOMETRY_OBJECT\";\nexports[1417] = \"ER_FAILED_ROUTINE_BREAK_BINLOG\";\nexports[1418] = \"ER_BINLOG_UNSAFE_ROUTINE\";\nexports[1419] = \"ER_BINLOG_CREATE_ROUTINE_NEED_SUPER\";\nexports[1420] = \"ER_EXEC_STMT_WITH_OPEN_CURSOR\";\nexports[1421] = \"ER_STMT_HAS_NO_OPEN_CURSOR\";\nexports[1422] = \"ER_COMMIT_NOT_ALLOWED_IN_SF_OR_TRG\";\nexports[1423] = \"ER_NO_DEFAULT_FOR_VIEW_FIELD\";\nexports[1424] = \"ER_SP_NO_RECURSION\";\nexports[1425] = \"ER_TOO_BIG_SCALE\";\nexports[1426] = \"ER_TOO_BIG_PRECISION\";\nexports[1427] = \"ER_M_BIGGER_THAN_D\";\nexports[1428] = \"ER_WRONG_LOCK_OF_SYSTEM_TABLE\";\nexports[1429] = \"ER_CONNECT_TO_FOREIGN_DATA_SOURCE\";\nexports[1430] = \"ER_QUERY_ON_FOREIGN_DATA_SOURCE\";\nexports[1431] = \"ER_FOREIGN_DATA_SOURCE_DOESNT_EXIST\";\nexports[1432] = \"ER_FOREIGN_DATA_STRING_INVALID_CANT_CREATE\";\nexports[1433] = \"ER_FOREIGN_DATA_STRING_INVALID\";\nexports[1434] = \"ER_CANT_CREATE_FEDERATED_TABLE\";\nexports[1435] = \"ER_TRG_IN_WRONG_SCHEMA\";\nexports[1436] = \"ER_STACK_OVERRUN_NEED_MORE\";\nexports[1437] = \"ER_TOO_LONG_BODY\";\nexports[1438] = \"ER_WARN_CANT_DROP_DEFAULT_KEYCACHE\";\nexports[1439] = \"ER_TOO_BIG_DISPLAYWIDTH\";\nexports[1440] = \"ER_XAER_DUPID\";\nexports[1441] = \"ER_DATETIME_FUNCTION_OVERFLOW\";\nexports[1442] = \"ER_CANT_UPDATE_USED_TABLE_IN_SF_OR_TRG\";\nexports[1443] = \"ER_VIEW_PREVENT_UPDATE\";\nexports[1444] = \"ER_PS_NO_RECURSION\";\nexports[1445] = \"ER_SP_CANT_SET_AUTOCOMMIT\";\nexports[1446] = \"ER_MALFORMED_DEFINER\";\nexports[1447] = \"ER_VIEW_FRM_NO_USER\";\nexports[1448] = \"ER_VIEW_OTHER_USER\";\nexports[1449] = \"ER_NO_SUCH_USER\";\nexports[1450] = \"ER_FORBID_SCHEMA_CHANGE\";\nexports[1451] = \"ER_ROW_IS_REFERENCED_2\";\nexports[1452] = \"ER_NO_REFERENCED_ROW_2\";\nexports[1453] = \"ER_SP_BAD_VAR_SHADOW\";\nexports[1454] = \"ER_TRG_NO_DEFINER\";\nexports[1455] = \"ER_OLD_FILE_FORMAT\";\nexports[1456] = \"ER_SP_RECURSION_LIMIT\";\nexports[1457] = \"ER_SP_PROC_TABLE_CORRUPT\";\nexports[1458] = \"ER_SP_WRONG_NAME\";\nexports[1459] = \"ER_TABLE_NEEDS_UPGRADE\";\nexports[1460] = \"ER_SP_NO_AGGREGATE\";\nexports[1461] = \"ER_MAX_PREPARED_STMT_COUNT_REACHED\";\nexports[1462] = \"ER_VIEW_RECURSIVE\";\nexports[1463] = \"ER_NON_GROUPING_FIELD_USED\";\nexports[1464] = \"ER_TABLE_CANT_HANDLE_SPKEYS\";\nexports[1465] = \"ER_NO_TRIGGERS_ON_SYSTEM_SCHEMA\";\nexports[1466] = \"ER_REMOVED_SPACES\";\nexports[1467] = \"ER_AUTOINC_READ_FAILED\";\nexports[1468] = \"ER_USERNAME\";\nexports[1469] = \"ER_HOSTNAME\";\nexports[1470] = \"ER_WRONG_STRING_LENGTH\";\nexports[1471] = \"ER_NON_INSERTABLE_TABLE\";\nexports[1472] = \"ER_ADMIN_WRONG_MRG_TABLE\";\nexports[1473] = \"ER_TOO_HIGH_LEVEL_OF_NESTING_FOR_SELECT\";\nexports[1474] = \"ER_NAME_BECOMES_EMPTY\";\nexports[1475] = \"ER_AMBIGUOUS_FIELD_TERM\";\nexports[1476] = \"ER_FOREIGN_SERVER_EXISTS\";\nexports[1477] = \"ER_FOREIGN_SERVER_DOESNT_EXIST\";\nexports[1478] = \"ER_ILLEGAL_HA_CREATE_OPTION\";\nexports[1479] = \"ER_PARTITION_REQUIRES_VALUES_ERROR\";\nexports[1480] = \"ER_PARTITION_WRONG_VALUES_ERROR\";\nexports[1481] = \"ER_PARTITION_MAXVALUE_ERROR\";\nexports[1482] = \"ER_PARTITION_SUBPARTITION_ERROR\";\nexports[1483] = \"ER_PARTITION_SUBPART_MIX_ERROR\";\nexports[1484] = \"ER_PARTITION_WRONG_NO_PART_ERROR\";\nexports[1485] = \"ER_PARTITION_WRONG_NO_SUBPART_ERROR\";\nexports[1486] = \"ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR\";\nexports[1487] = \"ER_NO_CONST_EXPR_IN_RANGE_OR_LIST_ERROR\";\nexports[1488] = \"ER_FIELD_NOT_FOUND_PART_ERROR\";\nexports[1489] = \"ER_LIST_OF_FIELDS_ONLY_IN_HASH_ERROR\";\nexports[1490] = \"ER_INCONSISTENT_PARTITION_INFO_ERROR\";\nexports[1491] = \"ER_PARTITION_FUNC_NOT_ALLOWED_ERROR\";\nexports[1492] = \"ER_PARTITIONS_MUST_BE_DEFINED_ERROR\";\nexports[1493] = \"ER_RANGE_NOT_INCREASING_ERROR\";\nexports[1494] = \"ER_INCONSISTENT_TYPE_OF_FUNCTIONS_ERROR\";\nexports[1495] = \"ER_MULTIPLE_DEF_CONST_IN_LIST_PART_ERROR\";\nexports[1496] = \"ER_PARTITION_ENTRY_ERROR\";\nexports[1497] = \"ER_MIX_HANDLER_ERROR\";\nexports[1498] = \"ER_PARTITION_NOT_DEFINED_ERROR\";\nexports[1499] = \"ER_TOO_MANY_PARTITIONS_ERROR\";\nexports[1500] = \"ER_SUBPARTITION_ERROR\";\nexports[1501] = \"ER_CANT_CREATE_HANDLER_FILE\";\nexports[1502] = \"ER_BLOB_FIELD_IN_PART_FUNC_ERROR\";\nexports[1503] = \"ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF\";\nexports[1504] = \"ER_NO_PARTS_ERROR\";\nexports[1505] = \"ER_PARTITION_MGMT_ON_NONPARTITIONED\";\nexports[1506] = \"ER_FOREIGN_KEY_ON_PARTITIONED\";\nexports[1507] = \"ER_DROP_PARTITION_NON_EXISTENT\";\nexports[1508] = \"ER_DROP_LAST_PARTITION\";\nexports[1509] = \"ER_COALESCE_ONLY_ON_HASH_PARTITION\";\nexports[1510] = \"ER_REORG_HASH_ONLY_ON_SAME_NO\";\nexports[1511] = \"ER_REORG_NO_PARAM_ERROR\";\nexports[1512] = \"ER_ONLY_ON_RANGE_LIST_PARTITION\";\nexports[1513] = \"ER_ADD_PARTITION_SUBPART_ERROR\";\nexports[1514] = \"ER_ADD_PARTITION_NO_NEW_PARTITION\";\nexports[1515] = \"ER_COALESCE_PARTITION_NO_PARTITION\";\nexports[1516] = \"ER_REORG_PARTITION_NOT_EXIST\";\nexports[1517] = \"ER_SAME_NAME_PARTITION\";\nexports[1518] = \"ER_NO_BINLOG_ERROR\";\nexports[1519] = \"ER_CONSECUTIVE_REORG_PARTITIONS\";\nexports[1520] = \"ER_REORG_OUTSIDE_RANGE\";\nexports[1521] = \"ER_PARTITION_FUNCTION_FAILURE\";\nexports[1522] = \"ER_PART_STATE_ERROR\";\nexports[1523] = \"ER_LIMITED_PART_RANGE\";\nexports[1524] = \"ER_PLUGIN_IS_NOT_LOADED\";\nexports[1525] = \"ER_WRONG_VALUE\";\nexports[1526] = \"ER_NO_PARTITION_FOR_GIVEN_VALUE\";\nexports[1527] = \"ER_FILEGROUP_OPTION_ONLY_ONCE\";\nexports[1528] = \"ER_CREATE_FILEGROUP_FAILED\";\nexports[1529] = \"ER_DROP_FILEGROUP_FAILED\";\nexports[1530] = \"ER_TABLESPACE_AUTO_EXTEND_ERROR\";\nexports[1531] = \"ER_WRONG_SIZE_NUMBER\";\nexports[1532] = \"ER_SIZE_OVERFLOW_ERROR\";\nexports[1533] = \"ER_ALTER_FILEGROUP_FAILED\";\nexports[1534] = \"ER_BINLOG_ROW_LOGGING_FAILED\";\nexports[1535] = \"ER_BINLOG_ROW_WRONG_TABLE_DEF\";\nexports[1536] = \"ER_BINLOG_ROW_RBR_TO_SBR\";\nexports[1537] = \"ER_EVENT_ALREADY_EXISTS\";\nexports[1538] = \"ER_EVENT_STORE_FAILED\";\nexports[1539] = \"ER_EVENT_DOES_NOT_EXIST\";\nexports[1540] = \"ER_EVENT_CANT_ALTER\";\nexports[1541] = \"ER_EVENT_DROP_FAILED\";\nexports[1542] = \"ER_EVENT_INTERVAL_NOT_POSITIVE_OR_TOO_BIG\";\nexports[1543] = \"ER_EVENT_ENDS_BEFORE_STARTS\";\nexports[1544] = \"ER_EVENT_EXEC_TIME_IN_THE_PAST\";\nexports[1545] = \"ER_EVENT_OPEN_TABLE_FAILED\";\nexports[1546] = \"ER_EVENT_NEITHER_M_EXPR_NOR_M_AT\";\nexports[1547] = \"ER_COL_COUNT_DOESNT_MATCH_CORRUPTED\";\nexports[1548] = \"ER_CANNOT_LOAD_FROM_TABLE\";\nexports[1549] = \"ER_EVENT_CANNOT_DELETE\";\nexports[1550] = \"ER_EVENT_COMPILE_ERROR\";\nexports[1551] = \"ER_EVENT_SAME_NAME\";\nexports[1552] = \"ER_EVENT_DATA_TOO_LONG\";\nexports[1553] = \"ER_DROP_INDEX_FK\";\nexports[1554] = \"ER_WARN_DEPRECATED_SYNTAX_WITH_VER\";\nexports[1555] = \"ER_CANT_WRITE_LOCK_LOG_TABLE\";\nexports[1556] = \"ER_CANT_LOCK_LOG_TABLE\";\nexports[1557] = \"ER_FOREIGN_DUPLICATE_KEY\";\nexports[1558] = \"ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE\";\nexports[1559] = \"ER_TEMP_TABLE_PREVENTS_SWITCH_OUT_OF_RBR\";\nexports[1560] = \"ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_FORMAT\";\nexports[1561] = \"ER_NDB_CANT_SWITCH_BINLOG_FORMAT\";\nexports[1562] = \"ER_PARTITION_NO_TEMPORARY\";\nexports[1563] = \"ER_PARTITION_CONST_DOMAIN_ERROR\";\nexports[1564] = \"ER_PARTITION_FUNCTION_IS_NOT_ALLOWED\";\nexports[1565] = \"ER_DDL_LOG_ERROR\";\nexports[1566] = \"ER_NULL_IN_VALUES_LESS_THAN\";\nexports[1567] = \"ER_WRONG_PARTITION_NAME\";\nexports[1568] = \"ER_CANT_CHANGE_TX_CHARACTERISTICS\";\nexports[1569] = \"ER_DUP_ENTRY_AUTOINCREMENT_CASE\";\nexports[1570] = \"ER_EVENT_MODIFY_QUEUE_ERROR\";\nexports[1571] = \"ER_EVENT_SET_VAR_ERROR\";\nexports[1572] = \"ER_PARTITION_MERGE_ERROR\";\nexports[1573] = \"ER_CANT_ACTIVATE_LOG\";\nexports[1574] = \"ER_RBR_NOT_AVAILABLE\";\nexports[1575] = \"ER_BASE64_DECODE_ERROR\";\nexports[1576] = \"ER_EVENT_RECURSION_FORBIDDEN\";\nexports[1577] = \"ER_EVENTS_DB_ERROR\";\nexports[1578] = \"ER_ONLY_INTEGERS_ALLOWED\";\nexports[1579] = \"ER_UNSUPORTED_LOG_ENGINE\";\nexports[1580] = \"ER_BAD_LOG_STATEMENT\";\nexports[1581] = \"ER_CANT_RENAME_LOG_TABLE\";\nexports[1582] = \"ER_WRONG_PARAMCOUNT_TO_NATIVE_FCT\";\nexports[1583] = \"ER_WRONG_PARAMETERS_TO_NATIVE_FCT\";\nexports[1584] = \"ER_WRONG_PARAMETERS_TO_STORED_FCT\";\nexports[1585] = \"ER_NATIVE_FCT_NAME_COLLISION\";\nexports[1586] = \"ER_DUP_ENTRY_WITH_KEY_NAME\";\nexports[1587] = \"ER_BINLOG_PURGE_EMFILE\";\nexports[1588] = \"ER_EVENT_CANNOT_CREATE_IN_THE_PAST\";\nexports[1589] = \"ER_EVENT_CANNOT_ALTER_IN_THE_PAST\";\nexports[1590] = \"ER_SLAVE_INCIDENT\";\nexports[1591] = \"ER_NO_PARTITION_FOR_GIVEN_VALUE_SILENT\";\nexports[1592] = \"ER_BINLOG_UNSAFE_STATEMENT\";\nexports[1593] = \"ER_BINLOG_FATAL_ERROR\";\nexports[1594] = \"ER_SLAVE_RELAY_LOG_READ_FAILURE\";\nexports[1595] = \"ER_SLAVE_RELAY_LOG_WRITE_FAILURE\";\nexports[1596] = \"ER_SLAVE_CREATE_EVENT_FAILURE\";\nexports[1597] = \"ER_SLAVE_MASTER_COM_FAILURE\";\nexports[1598] = \"ER_BINLOG_LOGGING_IMPOSSIBLE\";\nexports[1599] = \"ER_VIEW_NO_CREATION_CTX\";\nexports[1600] = \"ER_VIEW_INVALID_CREATION_CTX\";\nexports[1601] = \"ER_SR_INVALID_CREATION_CTX\";\nexports[1602] = \"ER_TRG_CORRUPTED_FILE\";\nexports[1603] = \"ER_TRG_NO_CREATION_CTX\";\nexports[1604] = \"ER_TRG_INVALID_CREATION_CTX\";\nexports[1605] = \"ER_EVENT_INVALID_CREATION_CTX\";\nexports[1606] = \"ER_TRG_CANT_OPEN_TABLE\";\nexports[1607] = \"ER_CANT_CREATE_SROUTINE\";\nexports[1608] = \"ER_NEVER_USED\";\nexports[1609] = \"ER_NO_FORMAT_DESCRIPTION_EVENT_BEFORE_BINLOG_STATEMENT\";\nexports[1610] = \"ER_REPLICA_CORRUPT_EVENT\";\nexports[1611] = \"ER_LOAD_DATA_INVALID_COLUMN\";\nexports[1612] = \"ER_LOG_PURGE_NO_FILE\";\nexports[1613] = \"ER_XA_RBTIMEOUT\";\nexports[1614] = \"ER_XA_RBDEADLOCK\";\nexports[1615] = \"ER_NEED_REPREPARE\";\nexports[1616] = \"ER_DELAYED_NOT_SUPPORTED\";\nexports[1617] = \"WARN_NO_CONNECTION_METADATA\";\nexports[1618] = \"WARN_OPTION_IGNORED\";\nexports[1619] = \"ER_PLUGIN_DELETE_BUILTIN\";\nexports[1620] = \"WARN_PLUGIN_BUSY\";\nexports[1621] = \"ER_VARIABLE_IS_READONLY\";\nexports[1622] = \"ER_WARN_ENGINE_TRANSACTION_ROLLBACK\";\nexports[1623] = \"ER_SLAVE_HEARTBEAT_FAILURE\";\nexports[1624] = \"ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE\";\nexports[1625] = \"ER_NDB_REPLICATION_SCHEMA_ERROR\";\nexports[1626] = \"ER_CONFLICT_FN_PARSE_ERROR\";\nexports[1627] = \"ER_EXCEPTIONS_WRITE_ERROR\";\nexports[1628] = \"ER_TOO_LONG_TABLE_COMMENT\";\nexports[1629] = \"ER_TOO_LONG_FIELD_COMMENT\";\nexports[1630] = \"ER_FUNC_INEXISTENT_NAME_COLLISION\";\nexports[1631] = \"ER_DATABASE_NAME\";\nexports[1632] = \"ER_TABLE_NAME\";\nexports[1633] = \"ER_PARTITION_NAME\";\nexports[1634] = \"ER_SUBPARTITION_NAME\";\nexports[1635] = \"ER_TEMPORARY_NAME\";\nexports[1636] = \"ER_RENAMED_NAME\";\nexports[1637] = \"ER_TOO_MANY_CONCURRENT_TRXS\";\nexports[1638] = \"WARN_NON_ASCII_SEPARATOR_NOT_IMPLEMENTED\";\nexports[1639] = \"ER_DEBUG_SYNC_TIMEOUT\";\nexports[1640] = \"ER_DEBUG_SYNC_HIT_LIMIT\";\nexports[1641] = \"ER_DUP_SIGNAL_SET\";\nexports[1642] = \"ER_SIGNAL_WARN\";\nexports[1643] = \"ER_SIGNAL_NOT_FOUND\";\nexports[1644] = \"ER_SIGNAL_EXCEPTION\";\nexports[1645] = \"ER_RESIGNAL_WITHOUT_ACTIVE_HANDLER\";\nexports[1646] = \"ER_SIGNAL_BAD_CONDITION_TYPE\";\nexports[1647] = \"WARN_COND_ITEM_TRUNCATED\";\nexports[1648] = \"ER_COND_ITEM_TOO_LONG\";\nexports[1649] = \"ER_UNKNOWN_LOCALE\";\nexports[1650] = \"ER_REPLICA_IGNORE_SERVER_IDS\";\nexports[1651] = \"ER_QUERY_CACHE_DISABLED\";\nexports[1652] = \"ER_SAME_NAME_PARTITION_FIELD\";\nexports[1653] = \"ER_PARTITION_COLUMN_LIST_ERROR\";\nexports[1654] = \"ER_WRONG_TYPE_COLUMN_VALUE_ERROR\";\nexports[1655] = \"ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR\";\nexports[1656] = \"ER_MAXVALUE_IN_VALUES_IN\";\nexports[1657] = \"ER_TOO_MANY_VALUES_ERROR\";\nexports[1658] = \"ER_ROW_SINGLE_PARTITION_FIELD_ERROR\";\nexports[1659] = \"ER_FIELD_TYPE_NOT_ALLOWED_AS_PARTITION_FIELD\";\nexports[1660] = \"ER_PARTITION_FIELDS_TOO_LONG\";\nexports[1661] = \"ER_BINLOG_ROW_ENGINE_AND_STMT_ENGINE\";\nexports[1662] = \"ER_BINLOG_ROW_MODE_AND_STMT_ENGINE\";\nexports[1663] = \"ER_BINLOG_UNSAFE_AND_STMT_ENGINE\";\nexports[1664] = \"ER_BINLOG_ROW_INJECTION_AND_STMT_ENGINE\";\nexports[1665] = \"ER_BINLOG_STMT_MODE_AND_ROW_ENGINE\";\nexports[1666] = \"ER_BINLOG_ROW_INJECTION_AND_STMT_MODE\";\nexports[1667] = \"ER_BINLOG_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE\";\nexports[1668] = \"ER_BINLOG_UNSAFE_LIMIT\";\nexports[1669] = \"ER_UNUSED4\";\nexports[1670] = \"ER_BINLOG_UNSAFE_SYSTEM_TABLE\";\nexports[1671] = \"ER_BINLOG_UNSAFE_AUTOINC_COLUMNS\";\nexports[1672] = \"ER_BINLOG_UNSAFE_UDF\";\nexports[1673] = \"ER_BINLOG_UNSAFE_SYSTEM_VARIABLE\";\nexports[1674] = \"ER_BINLOG_UNSAFE_SYSTEM_FUNCTION\";\nexports[1675] = \"ER_BINLOG_UNSAFE_NONTRANS_AFTER_TRANS\";\nexports[1676] = \"ER_MESSAGE_AND_STATEMENT\";\nexports[1677] = \"ER_SLAVE_CONVERSION_FAILED\";\nexports[1678] = \"ER_REPLICA_CANT_CREATE_CONVERSION\";\nexports[1679] = \"ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_FORMAT\";\nexports[1680] = \"ER_PATH_LENGTH\";\nexports[1681] = \"ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT\";\nexports[1682] = \"ER_WRONG_NATIVE_TABLE_STRUCTURE\";\nexports[1683] = \"ER_WRONG_PERFSCHEMA_USAGE\";\nexports[1684] = \"ER_WARN_I_S_SKIPPED_TABLE\";\nexports[1685] = \"ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_DIRECT\";\nexports[1686] = \"ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_DIRECT\";\nexports[1687] = \"ER_SPATIAL_MUST_HAVE_GEOM_COL\";\nexports[1688] = \"ER_TOO_LONG_INDEX_COMMENT\";\nexports[1689] = \"ER_LOCK_ABORTED\";\nexports[1690] = \"ER_DATA_OUT_OF_RANGE\";\nexports[1691] = \"ER_WRONG_SPVAR_TYPE_IN_LIMIT\";\nexports[1692] = \"ER_BINLOG_UNSAFE_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE\";\nexports[1693] = \"ER_BINLOG_UNSAFE_MIXED_STATEMENT\";\nexports[1694] = \"ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_SQL_LOG_BIN\";\nexports[1695] = \"ER_STORED_FUNCTION_PREVENTS_SWITCH_SQL_LOG_BIN\";\nexports[1696] = \"ER_FAILED_READ_FROM_PAR_FILE\";\nexports[1697] = \"ER_VALUES_IS_NOT_INT_TYPE_ERROR\";\nexports[1698] = \"ER_ACCESS_DENIED_NO_PASSWORD_ERROR\";\nexports[1699] = \"ER_SET_PASSWORD_AUTH_PLUGIN\";\nexports[1700] = \"ER_GRANT_PLUGIN_USER_EXISTS\";\nexports[1701] = \"ER_TRUNCATE_ILLEGAL_FK\";\nexports[1702] = \"ER_PLUGIN_IS_PERMANENT\";\nexports[1703] = \"ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN\";\nexports[1704] = \"ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX\";\nexports[1705] = \"ER_STMT_CACHE_FULL\";\nexports[1706] = \"ER_MULTI_UPDATE_KEY_CONFLICT\";\nexports[1707] = \"ER_TABLE_NEEDS_REBUILD\";\nexports[1708] = \"WARN_OPTION_BELOW_LIMIT\";\nexports[1709] = \"ER_INDEX_COLUMN_TOO_LONG\";\nexports[1710] = \"ER_ERROR_IN_TRIGGER_BODY\";\nexports[1711] = \"ER_ERROR_IN_UNKNOWN_TRIGGER_BODY\";\nexports[1712] = \"ER_INDEX_CORRUPT\";\nexports[1713] = \"ER_UNDO_RECORD_TOO_BIG\";\nexports[1714] = \"ER_BINLOG_UNSAFE_INSERT_IGNORE_SELECT\";\nexports[1715] = \"ER_BINLOG_UNSAFE_INSERT_SELECT_UPDATE\";\nexports[1716] = \"ER_BINLOG_UNSAFE_REPLACE_SELECT\";\nexports[1717] = \"ER_BINLOG_UNSAFE_CREATE_IGNORE_SELECT\";\nexports[1718] = \"ER_BINLOG_UNSAFE_CREATE_REPLACE_SELECT\";\nexports[1719] = \"ER_BINLOG_UNSAFE_UPDATE_IGNORE\";\nexports[1720] = \"ER_PLUGIN_NO_UNINSTALL\";\nexports[1721] = \"ER_PLUGIN_NO_INSTALL\";\nexports[1722] = \"ER_BINLOG_UNSAFE_WRITE_AUTOINC_SELECT\";\nexports[1723] = \"ER_BINLOG_UNSAFE_CREATE_SELECT_AUTOINC\";\nexports[1724] = \"ER_BINLOG_UNSAFE_INSERT_TWO_KEYS\";\nexports[1725] = \"ER_TABLE_IN_FK_CHECK\";\nexports[1726] = \"ER_UNSUPPORTED_ENGINE\";\nexports[1727] = \"ER_BINLOG_UNSAFE_AUTOINC_NOT_FIRST\";\nexports[1728] = \"ER_CANNOT_LOAD_FROM_TABLE_V2\";\nexports[1729] = \"ER_SOURCE_DELAY_VALUE_OUT_OF_RANGE\";\nexports[1730] = \"ER_ONLY_FD_AND_RBR_EVENTS_ALLOWED_IN_BINLOG_STATEMENT\";\nexports[1731] = \"ER_PARTITION_EXCHANGE_DIFFERENT_OPTION\";\nexports[1732] = \"ER_PARTITION_EXCHANGE_PART_TABLE\";\nexports[1733] = \"ER_PARTITION_EXCHANGE_TEMP_TABLE\";\nexports[1734] = \"ER_PARTITION_INSTEAD_OF_SUBPARTITION\";\nexports[1735] = \"ER_UNKNOWN_PARTITION\";\nexports[1736] = \"ER_TABLES_DIFFERENT_METADATA\";\nexports[1737] = \"ER_ROW_DOES_NOT_MATCH_PARTITION\";\nexports[1738] = \"ER_BINLOG_CACHE_SIZE_GREATER_THAN_MAX\";\nexports[1739] = \"ER_WARN_INDEX_NOT_APPLICABLE\";\nexports[1740] = \"ER_PARTITION_EXCHANGE_FOREIGN_KEY\";\nexports[1741] = \"ER_NO_SUCH_KEY_VALUE\";\nexports[1742] = \"ER_RPL_INFO_DATA_TOO_LONG\";\nexports[1743] = \"ER_NETWORK_READ_EVENT_CHECKSUM_FAILURE\";\nexports[1744] = \"ER_BINLOG_READ_EVENT_CHECKSUM_FAILURE\";\nexports[1745] = \"ER_BINLOG_STMT_CACHE_SIZE_GREATER_THAN_MAX\";\nexports[1746] = \"ER_CANT_UPDATE_TABLE_IN_CREATE_TABLE_SELECT\";\nexports[1747] = \"ER_PARTITION_CLAUSE_ON_NONPARTITIONED\";\nexports[1748] = \"ER_ROW_DOES_NOT_MATCH_GIVEN_PARTITION_SET\";\nexports[1749] = \"ER_NO_SUCH_PARTITION\";\nexports[1750] = \"ER_CHANGE_RPL_INFO_REPOSITORY_FAILURE\";\nexports[1751] = \"ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_CREATED_TEMP_TABLE\";\nexports[1752] = \"ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_DROPPED_TEMP_TABLE\";\nexports[1753] = \"ER_MTA_FEATURE_IS_NOT_SUPPORTED\";\nexports[1754] = \"ER_MTA_UPDATED_DBS_GREATER_MAX\";\nexports[1755] = \"ER_MTA_CANT_PARALLEL\";\nexports[1756] = \"ER_MTA_INCONSISTENT_DATA\";\nexports[1757] = \"ER_FULLTEXT_NOT_SUPPORTED_WITH_PARTITIONING\";\nexports[1758] = \"ER_DA_INVALID_CONDITION_NUMBER\";\nexports[1759] = \"ER_INSECURE_PLAIN_TEXT\";\nexports[1760] = \"ER_INSECURE_CHANGE_SOURCE\";\nexports[1761] = \"ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO\";\nexports[1762] = \"ER_FOREIGN_DUPLICATE_KEY_WITHOUT_CHILD_INFO\";\nexports[1763] = \"ER_SQLTHREAD_WITH_SECURE_REPLICA\";\nexports[1764] = \"ER_TABLE_HAS_NO_FT\";\nexports[1765] = \"ER_VARIABLE_NOT_SETTABLE_IN_SF_OR_TRIGGER\";\nexports[1766] = \"ER_VARIABLE_NOT_SETTABLE_IN_TRANSACTION\";\nexports[1767] = \"ER_GTID_NEXT_IS_NOT_IN_GTID_NEXT_LIST\";\nexports[1768] = \"ER_CANT_CHANGE_GTID_NEXT_IN_TRANSACTION\";\nexports[1769] = \"ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION\";\nexports[1770] = \"ER_GTID_NEXT_CANT_BE_AUTOMATIC_IF_GTID_NEXT_LIST_IS_NON_NULL\";\nexports[1771] = \"ER_SKIPPING_LOGGED_TRANSACTION\";\nexports[1772] = \"ER_MALFORMED_GTID_SET_SPECIFICATION\";\nexports[1773] = \"ER_MALFORMED_GTID_SET_ENCODING\";\nexports[1774] = \"ER_MALFORMED_GTID_SPECIFICATION\";\nexports[1775] = \"ER_GNO_EXHAUSTED\";\nexports[1776] = \"ER_BAD_REPLICA_AUTO_POSITION\";\nexports[1777] = \"ER_AUTO_POSITION_REQUIRES_GTID_MODE_NOT_OFF\";\nexports[1778] = \"ER_CANT_DO_IMPLICIT_COMMIT_IN_TRX_WHEN_GTID_NEXT_IS_SET\";\nexports[1779] = \"ER_GTID_MODE_ON_REQUIRES_ENFORCE_GTID_CONSISTENCY_ON\";\nexports[1780] = \"ER_GTID_MODE_REQUIRES_BINLOG\";\nexports[1781] = \"ER_CANT_SET_GTID_NEXT_TO_GTID_WHEN_GTID_MODE_IS_OFF\";\nexports[1782] = \"ER_CANT_SET_GTID_NEXT_TO_ANONYMOUS_WHEN_GTID_MODE_IS_ON\";\nexports[1783] = \"ER_CANT_SET_GTID_NEXT_LIST_TO_NON_NULL_WHEN_GTID_MODE_IS_OFF\";\nexports[1784] = \"ER_FOUND_GTID_EVENT_WHEN_GTID_MODE_IS_OFF\";\nexports[1785] = \"ER_GTID_UNSAFE_NON_TRANSACTIONAL_TABLE\";\nexports[1786] = \"ER_GTID_UNSAFE_CREATE_SELECT\";\nexports[1787] = \"ER_GTID_UNSAFE_CREATE_DROP_TEMP_TABLE_IN_TRANSACTION\";\nexports[1788] = \"ER_GTID_MODE_CAN_ONLY_CHANGE_ONE_STEP_AT_A_TIME\";\nexports[1789] = \"ER_SOURCE_HAS_PURGED_REQUIRED_GTIDS\";\nexports[1790] = \"ER_CANT_SET_GTID_NEXT_WHEN_OWNING_GTID\";\nexports[1791] = \"ER_UNKNOWN_EXPLAIN_FORMAT\";\nexports[1792] = \"ER_CANT_EXECUTE_IN_READ_ONLY_TRANSACTION\";\nexports[1793] = \"ER_TOO_LONG_TABLE_PARTITION_COMMENT\";\nexports[1794] = \"ER_REPLICA_CONFIGURATION\";\nexports[1795] = \"ER_INNODB_FT_LIMIT\";\nexports[1796] = \"ER_INNODB_NO_FT_TEMP_TABLE\";\nexports[1797] = \"ER_INNODB_FT_WRONG_DOCID_COLUMN\";\nexports[1798] = \"ER_INNODB_FT_WRONG_DOCID_INDEX\";\nexports[1799] = \"ER_INNODB_ONLINE_LOG_TOO_BIG\";\nexports[1800] = \"ER_UNKNOWN_ALTER_ALGORITHM\";\nexports[1801] = \"ER_UNKNOWN_ALTER_LOCK\";\nexports[1802] = \"ER_MTA_CHANGE_SOURCE_CANT_RUN_WITH_GAPS\";\nexports[1803] = \"ER_MTA_RECOVERY_FAILURE\";\nexports[1804] = \"ER_MTA_RESET_WORKERS\";\nexports[1805] = \"ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2\";\nexports[1806] = \"ER_REPLICA_SILENT_RETRY_TRANSACTION\";\nexports[1807] = \"ER_DISCARD_FK_CHECKS_RUNNING\";\nexports[1808] = \"ER_TABLE_SCHEMA_MISMATCH\";\nexports[1809] = \"ER_TABLE_IN_SYSTEM_TABLESPACE\";\nexports[1810] = \"ER_IO_READ_ERROR\";\nexports[1811] = \"ER_IO_WRITE_ERROR\";\nexports[1812] = \"ER_TABLESPACE_MISSING\";\nexports[1813] = \"ER_TABLESPACE_EXISTS\";\nexports[1814] = \"ER_TABLESPACE_DISCARDED\";\nexports[1815] = \"ER_INTERNAL_ERROR\";\nexports[1816] = \"ER_INNODB_IMPORT_ERROR\";\nexports[1817] = \"ER_INNODB_INDEX_CORRUPT\";\nexports[1818] = \"ER_INVALID_YEAR_COLUMN_LENGTH\";\nexports[1819] = \"ER_NOT_VALID_PASSWORD\";\nexports[1820] = \"ER_MUST_CHANGE_PASSWORD\";\nexports[1821] = \"ER_FK_NO_INDEX_CHILD\";\nexports[1822] = \"ER_FK_NO_INDEX_PARENT\";\nexports[1823] = \"ER_FK_FAIL_ADD_SYSTEM\";\nexports[1824] = \"ER_FK_CANNOT_OPEN_PARENT\";\nexports[1825] = \"ER_FK_INCORRECT_OPTION\";\nexports[1826] = \"ER_FK_DUP_NAME\";\nexports[1827] = \"ER_PASSWORD_FORMAT\";\nexports[1828] = \"ER_FK_COLUMN_CANNOT_DROP\";\nexports[1829] = \"ER_FK_COLUMN_CANNOT_DROP_CHILD\";\nexports[1830] = \"ER_FK_COLUMN_NOT_NULL\";\nexports[1831] = \"ER_DUP_INDEX\";\nexports[1832] = \"ER_FK_COLUMN_CANNOT_CHANGE\";\nexports[1833] = \"ER_FK_COLUMN_CANNOT_CHANGE_CHILD\";\nexports[1834] = \"ER_UNUSED5\";\nexports[1835] = \"ER_MALFORMED_PACKET\";\nexports[1836] = \"ER_READ_ONLY_MODE\";\nexports[1837] = \"ER_GTID_NEXT_TYPE_UNDEFINED_GTID\";\nexports[1838] = \"ER_VARIABLE_NOT_SETTABLE_IN_SP\";\nexports[1839] = \"ER_CANT_SET_GTID_PURGED_WHEN_GTID_MODE_IS_OFF\";\nexports[1840] = \"ER_CANT_SET_GTID_PURGED_WHEN_GTID_EXECUTED_IS_NOT_EMPTY\";\nexports[1841] = \"ER_CANT_SET_GTID_PURGED_WHEN_OWNED_GTIDS_IS_NOT_EMPTY\";\nexports[1842] = \"ER_GTID_PURGED_WAS_CHANGED\";\nexports[1843] = \"ER_GTID_EXECUTED_WAS_CHANGED\";\nexports[1844] = \"ER_BINLOG_STMT_MODE_AND_NO_REPL_TABLES\";\nexports[1845] = \"ER_ALTER_OPERATION_NOT_SUPPORTED\";\nexports[1846] = \"ER_ALTER_OPERATION_NOT_SUPPORTED_REASON\";\nexports[1847] = \"ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COPY\";\nexports[1848] = \"ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_PARTITION\";\nexports[1849] = \"ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_RENAME\";\nexports[1850] = \"ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COLUMN_TYPE\";\nexports[1851] = \"ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_CHECK\";\nexports[1852] = \"ER_UNUSED6\";\nexports[1853] = \"ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOPK\";\nexports[1854] = \"ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_AUTOINC\";\nexports[1855] = \"ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_HIDDEN_FTS\";\nexports[1856] = \"ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_CHANGE_FTS\";\nexports[1857] = \"ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FTS\";\nexports[1858] = \"ER_SQL_REPLICA_SKIP_COUNTER_NOT_SETTABLE_IN_GTID_MODE\";\nexports[1859] = \"ER_DUP_UNKNOWN_IN_INDEX\";\nexports[1860] = \"ER_IDENT_CAUSES_TOO_LONG_PATH\";\nexports[1861] = \"ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOT_NULL\";\nexports[1862] = \"ER_MUST_CHANGE_PASSWORD_LOGIN\";\nexports[1863] = \"ER_ROW_IN_WRONG_PARTITION\";\nexports[1864] = \"ER_MTA_EVENT_BIGGER_PENDING_JOBS_SIZE_MAX\";\nexports[1865] = \"ER_INNODB_NO_FT_USES_PARSER\";\nexports[1866] = \"ER_BINLOG_LOGICAL_CORRUPTION\";\nexports[1867] = \"ER_WARN_PURGE_LOG_IN_USE\";\nexports[1868] = \"ER_WARN_PURGE_LOG_IS_ACTIVE\";\nexports[1869] = \"ER_AUTO_INCREMENT_CONFLICT\";\nexports[1870] = \"WARN_ON_BLOCKHOLE_IN_RBR\";\nexports[1871] = \"ER_REPLICA_CM_INIT_REPOSITORY\";\nexports[1872] = \"ER_REPLICA_AM_INIT_REPOSITORY\";\nexports[1873] = \"ER_ACCESS_DENIED_CHANGE_USER_ERROR\";\nexports[1874] = \"ER_INNODB_READ_ONLY\";\nexports[1875] = \"ER_STOP_REPLICA_SQL_THREAD_TIMEOUT\";\nexports[1876] = \"ER_STOP_REPLICA_IO_THREAD_TIMEOUT\";\nexports[1877] = \"ER_TABLE_CORRUPT\";\nexports[1878] = \"ER_TEMP_FILE_WRITE_FAILURE\";\nexports[1879] = \"ER_INNODB_FT_AUX_NOT_HEX_ID\";\nexports[1880] = \"ER_OLD_TEMPORALS_UPGRADED\";\nexports[1881] = \"ER_INNODB_FORCED_RECOVERY\";\nexports[1882] = \"ER_AES_INVALID_IV\";\nexports[1883] = \"ER_PLUGIN_CANNOT_BE_UNINSTALLED\";\nexports[1884] = \"ER_GTID_UNSAFE_BINLOG_SPLITTABLE_STATEMENT_AND_ASSIGNED_GTID\";\nexports[1885] = \"ER_REPLICA_HAS_MORE_GTIDS_THAN_SOURCE\";\nexports[1886] = \"ER_MISSING_KEY\";\nexports[1887] = \"WARN_NAMED_PIPE_ACCESS_EVERYONE\";\nexports[3000] = \"ER_FILE_CORRUPT\";\nexports[3001] = \"ER_ERROR_ON_SOURCE\";\nexports[3002] = \"ER_INCONSISTENT_ERROR\";\nexports[3003] = \"ER_STORAGE_ENGINE_NOT_LOADED\";\nexports[3004] = \"ER_GET_STACKED_DA_WITHOUT_ACTIVE_HANDLER\";\nexports[3005] = \"ER_WARN_LEGACY_SYNTAX_CONVERTED\";\nexports[3006] = \"ER_BINLOG_UNSAFE_FULLTEXT_PLUGIN\";\nexports[3007] = \"ER_CANNOT_DISCARD_TEMPORARY_TABLE\";\nexports[3008] = \"ER_FK_DEPTH_EXCEEDED\";\nexports[3009] = \"ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE_V2\";\nexports[3010] = \"ER_WARN_TRIGGER_DOESNT_HAVE_CREATED\";\nexports[3011] = \"ER_REFERENCED_TRG_DOES_NOT_EXIST\";\nexports[3012] = \"ER_EXPLAIN_NOT_SUPPORTED\";\nexports[3013] = \"ER_INVALID_FIELD_SIZE\";\nexports[3014] = \"ER_MISSING_HA_CREATE_OPTION\";\nexports[3015] = \"ER_ENGINE_OUT_OF_MEMORY\";\nexports[3016] = \"ER_PASSWORD_EXPIRE_ANONYMOUS_USER\";\nexports[3017] = \"ER_REPLICA_SQL_THREAD_MUST_STOP\";\nexports[3018] = \"ER_NO_FT_MATERIALIZED_SUBQUERY\";\nexports[3019] = \"ER_INNODB_UNDO_LOG_FULL\";\nexports[3020] = \"ER_INVALID_ARGUMENT_FOR_LOGARITHM\";\nexports[3021] = \"ER_REPLICA_CHANNEL_IO_THREAD_MUST_STOP\";\nexports[3022] = \"ER_WARN_OPEN_TEMP_TABLES_MUST_BE_ZERO\";\nexports[3023] = \"ER_WARN_ONLY_SOURCE_LOG_FILE_NO_POS\";\nexports[3024] = \"ER_QUERY_TIMEOUT\";\nexports[3025] = \"ER_NON_RO_SELECT_DISABLE_TIMER\";\nexports[3026] = \"ER_DUP_LIST_ENTRY\";\nexports[3027] = \"ER_SQL_MODE_NO_EFFECT\";\nexports[3028] = \"ER_AGGREGATE_ORDER_FOR_UNION\";\nexports[3029] = \"ER_AGGREGATE_ORDER_NON_AGG_QUERY\";\nexports[3030] = \"ER_REPLICA_WORKER_STOPPED_PREVIOUS_THD_ERROR\";\nexports[3031] = \"ER_DONT_SUPPORT_REPLICA_PRESERVE_COMMIT_ORDER\";\nexports[3032] = \"ER_SERVER_OFFLINE_MODE\";\nexports[3033] = \"ER_GIS_DIFFERENT_SRIDS\";\nexports[3034] = \"ER_GIS_UNSUPPORTED_ARGUMENT\";\nexports[3035] = \"ER_GIS_UNKNOWN_ERROR\";\nexports[3036] = \"ER_GIS_UNKNOWN_EXCEPTION\";\nexports[3037] = \"ER_GIS_INVALID_DATA\";\nexports[3038] = \"ER_BOOST_GEOMETRY_EMPTY_INPUT_EXCEPTION\";\nexports[3039] = \"ER_BOOST_GEOMETRY_CENTROID_EXCEPTION\";\nexports[3040] = \"ER_BOOST_GEOMETRY_OVERLAY_INVALID_INPUT_EXCEPTION\";\nexports[3041] = \"ER_BOOST_GEOMETRY_TURN_INFO_EXCEPTION\";\nexports[3042] = \"ER_BOOST_GEOMETRY_SELF_INTERSECTION_POINT_EXCEPTION\";\nexports[3043] = \"ER_BOOST_GEOMETRY_UNKNOWN_EXCEPTION\";\nexports[3044] = \"ER_STD_BAD_ALLOC_ERROR\";\nexports[3045] = \"ER_STD_DOMAIN_ERROR\";\nexports[3046] = \"ER_STD_LENGTH_ERROR\";\nexports[3047] = \"ER_STD_INVALID_ARGUMENT\";\nexports[3048] = \"ER_STD_OUT_OF_RANGE_ERROR\";\nexports[3049] = \"ER_STD_OVERFLOW_ERROR\";\nexports[3050] = \"ER_STD_RANGE_ERROR\";\nexports[3051] = \"ER_STD_UNDERFLOW_ERROR\";\nexports[3052] = \"ER_STD_LOGIC_ERROR\";\nexports[3053] = \"ER_STD_RUNTIME_ERROR\";\nexports[3054] = \"ER_STD_UNKNOWN_EXCEPTION\";\nexports[3055] = \"ER_GIS_DATA_WRONG_ENDIANESS\";\nexports[3056] = \"ER_CHANGE_SOURCE_PASSWORD_LENGTH\";\nexports[3057] = \"ER_USER_LOCK_WRONG_NAME\";\nexports[3058] = \"ER_USER_LOCK_DEADLOCK\";\nexports[3059] = \"ER_REPLACE_INACCESSIBLE_ROWS\";\nexports[3060] = \"ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_GIS\";\nexports[3061] = \"ER_ILLEGAL_USER_VAR\";\nexports[3062] = \"ER_GTID_MODE_OFF\";\nexports[3063] = \"ER_UNSUPPORTED_BY_REPLICATION_THREAD\";\nexports[3064] = \"ER_INCORRECT_TYPE\";\nexports[3065] = \"ER_FIELD_IN_ORDER_NOT_SELECT\";\nexports[3066] = \"ER_AGGREGATE_IN_ORDER_NOT_SELECT\";\nexports[3067] = \"ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN\";\nexports[3068] = \"ER_NET_OK_PACKET_TOO_LARGE\";\nexports[3069] = \"ER_INVALID_JSON_DATA\";\nexports[3070] = \"ER_INVALID_GEOJSON_MISSING_MEMBER\";\nexports[3071] = \"ER_INVALID_GEOJSON_WRONG_TYPE\";\nexports[3072] = \"ER_INVALID_GEOJSON_UNSPECIFIED\";\nexports[3073] = \"ER_DIMENSION_UNSUPPORTED\";\nexports[3074] = \"ER_REPLICA_CHANNEL_DOES_NOT_EXIST\";\nexports[3075] = \"ER_SLAVE_MULTIPLE_CHANNELS_HOST_PORT\";\nexports[3076] = \"ER_REPLICA_CHANNEL_NAME_INVALID_OR_TOO_LONG\";\nexports[3077] = \"ER_REPLICA_NEW_CHANNEL_WRONG_REPOSITORY\";\nexports[3078] = \"ER_SLAVE_CHANNEL_DELETE\";\nexports[3079] = \"ER_REPLICA_MULTIPLE_CHANNELS_CMD\";\nexports[3080] = \"ER_REPLICA_MAX_CHANNELS_EXCEEDED\";\nexports[3081] = \"ER_REPLICA_CHANNEL_MUST_STOP\";\nexports[3082] = \"ER_REPLICA_CHANNEL_NOT_RUNNING\";\nexports[3083] = \"ER_REPLICA_CHANNEL_WAS_RUNNING\";\nexports[3084] = \"ER_REPLICA_CHANNEL_WAS_NOT_RUNNING\";\nexports[3085] = \"ER_REPLICA_CHANNEL_SQL_THREAD_MUST_STOP\";\nexports[3086] = \"ER_REPLICA_CHANNEL_SQL_SKIP_COUNTER\";\nexports[3087] = \"ER_WRONG_FIELD_WITH_GROUP_V2\";\nexports[3088] = \"ER_MIX_OF_GROUP_FUNC_AND_FIELDS_V2\";\nexports[3089] = \"ER_WARN_DEPRECATED_SYSVAR_UPDATE\";\nexports[3090] = \"ER_WARN_DEPRECATED_SQLMODE\";\nexports[3091] = \"ER_CANNOT_LOG_PARTIAL_DROP_DATABASE_WITH_GTID\";\nexports[3092] = \"ER_GROUP_REPLICATION_CONFIGURATION\";\nexports[3093] = \"ER_GROUP_REPLICATION_RUNNING\";\nexports[3094] = \"ER_GROUP_REPLICATION_APPLIER_INIT_ERROR\";\nexports[3095] = \"ER_GROUP_REPLICATION_STOP_APPLIER_THREAD_TIMEOUT\";\nexports[3096] = \"ER_GROUP_REPLICATION_COMMUNICATION_LAYER_SESSION_ERROR\";\nexports[3097] = \"ER_GROUP_REPLICATION_COMMUNICATION_LAYER_JOIN_ERROR\";\nexports[3098] = \"ER_BEFORE_DML_VALIDATION_ERROR\";\nexports[3099] = \"ER_PREVENTS_VARIABLE_WITHOUT_RBR\";\nexports[3100] = \"ER_RUN_HOOK_ERROR\";\nexports[3101] = \"ER_TRANSACTION_ROLLBACK_DURING_COMMIT\";\nexports[3102] = \"ER_GENERATED_COLUMN_FUNCTION_IS_NOT_ALLOWED\";\nexports[3103] = \"ER_UNSUPPORTED_ALTER_INPLACE_ON_VIRTUAL_COLUMN\";\nexports[3104] = \"ER_WRONG_FK_OPTION_FOR_GENERATED_COLUMN\";\nexports[3105] = \"ER_NON_DEFAULT_VALUE_FOR_GENERATED_COLUMN\";\nexports[3106] = \"ER_UNSUPPORTED_ACTION_ON_GENERATED_COLUMN\";\nexports[3107] = \"ER_GENERATED_COLUMN_NON_PRIOR\";\nexports[3108] = \"ER_DEPENDENT_BY_GENERATED_COLUMN\";\nexports[3109] = \"ER_GENERATED_COLUMN_REF_AUTO_INC\";\nexports[3110] = \"ER_FEATURE_NOT_AVAILABLE\";\nexports[3111] = \"ER_CANT_SET_GTID_MODE\";\nexports[3112] = \"ER_CANT_USE_AUTO_POSITION_WITH_GTID_MODE_OFF\";\nexports[3113] = \"ER_CANT_REPLICATE_ANONYMOUS_WITH_AUTO_POSITION\";\nexports[3114] = \"ER_CANT_REPLICATE_ANONYMOUS_WITH_GTID_MODE_ON\";\nexports[3115] = \"ER_CANT_REPLICATE_GTID_WITH_GTID_MODE_OFF\";\nexports[3116] = \"ER_CANT_ENFORCE_GTID_CONSISTENCY_WITH_ONGOING_GTID_VIOLATING_TX\";\nexports[3117] = \"ER_ENFORCE_GTID_CONSISTENCY_WARN_WITH_ONGOING_GTID_VIOLATING_TX\";\nexports[3118] = \"ER_ACCOUNT_HAS_BEEN_LOCKED\";\nexports[3119] = \"ER_WRONG_TABLESPACE_NAME\";\nexports[3120] = \"ER_TABLESPACE_IS_NOT_EMPTY\";\nexports[3121] = \"ER_WRONG_FILE_NAME\";\nexports[3122] = \"ER_BOOST_GEOMETRY_INCONSISTENT_TURNS_EXCEPTION\";\nexports[3123] = \"ER_WARN_OPTIMIZER_HINT_SYNTAX_ERROR\";\nexports[3124] = \"ER_WARN_BAD_MAX_EXECUTION_TIME\";\nexports[3125] = \"ER_WARN_UNSUPPORTED_MAX_EXECUTION_TIME\";\nexports[3126] = \"ER_WARN_CONFLICTING_HINT\";\nexports[3127] = \"ER_WARN_UNKNOWN_QB_NAME\";\nexports[3128] = \"ER_UNRESOLVED_HINT_NAME\";\nexports[3129] = \"ER_WARN_ON_MODIFYING_GTID_EXECUTED_TABLE\";\nexports[3130] = \"ER_PLUGGABLE_PROTOCOL_COMMAND_NOT_SUPPORTED\";\nexports[3131] = \"ER_LOCKING_SERVICE_WRONG_NAME\";\nexports[3132] = \"ER_LOCKING_SERVICE_DEADLOCK\";\nexports[3133] = \"ER_LOCKING_SERVICE_TIMEOUT\";\nexports[3134] = \"ER_GIS_MAX_POINTS_IN_GEOMETRY_OVERFLOWED\";\nexports[3135] = \"ER_SQL_MODE_MERGED\";\nexports[3136] = \"ER_VTOKEN_PLUGIN_TOKEN_MISMATCH\";\nexports[3137] = \"ER_VTOKEN_PLUGIN_TOKEN_NOT_FOUND\";\nexports[3138] = \"ER_CANT_SET_VARIABLE_WHEN_OWNING_GTID\";\nexports[3139] = \"ER_REPLICA_CHANNEL_OPERATION_NOT_ALLOWED\";\nexports[3140] = \"ER_INVALID_JSON_TEXT\";\nexports[3141] = \"ER_INVALID_JSON_TEXT_IN_PARAM\";\nexports[3142] = \"ER_INVALID_JSON_BINARY_DATA\";\nexports[3143] = \"ER_INVALID_JSON_PATH\";\nexports[3144] = \"ER_INVALID_JSON_CHARSET\";\nexports[3145] = \"ER_INVALID_JSON_CHARSET_IN_FUNCTION\";\nexports[3146] = \"ER_INVALID_TYPE_FOR_JSON\";\nexports[3147] = \"ER_INVALID_CAST_TO_JSON\";\nexports[3148] = \"ER_INVALID_JSON_PATH_CHARSET\";\nexports[3149] = \"ER_INVALID_JSON_PATH_WILDCARD\";\nexports[3150] = \"ER_JSON_VALUE_TOO_BIG\";\nexports[3151] = \"ER_JSON_KEY_TOO_BIG\";\nexports[3152] = \"ER_JSON_USED_AS_KEY\";\nexports[3153] = \"ER_JSON_VACUOUS_PATH\";\nexports[3154] = \"ER_JSON_BAD_ONE_OR_ALL_ARG\";\nexports[3155] = \"ER_NUMERIC_JSON_VALUE_OUT_OF_RANGE\";\nexports[3156] = \"ER_INVALID_JSON_VALUE_FOR_CAST\";\nexports[3157] = \"ER_JSON_DOCUMENT_TOO_DEEP\";\nexports[3158] = \"ER_JSON_DOCUMENT_NULL_KEY\";\nexports[3159] = \"ER_SECURE_TRANSPORT_REQUIRED\";\nexports[3160] = \"ER_NO_SECURE_TRANSPORTS_CONFIGURED\";\nexports[3161] = \"ER_DISABLED_STORAGE_ENGINE\";\nexports[3162] = \"ER_USER_DOES_NOT_EXIST\";\nexports[3163] = \"ER_USER_ALREADY_EXISTS\";\nexports[3164] = \"ER_AUDIT_API_ABORT\";\nexports[3165] = \"ER_INVALID_JSON_PATH_ARRAY_CELL\";\nexports[3166] = \"ER_BUFPOOL_RESIZE_INPROGRESS\";\nexports[3167] = \"ER_FEATURE_DISABLED_SEE_DOC\";\nexports[3168] = \"ER_SERVER_ISNT_AVAILABLE\";\nexports[3169] = \"ER_SESSION_WAS_KILLED\";\nexports[3170] = \"ER_CAPACITY_EXCEEDED\";\nexports[3171] = \"ER_CAPACITY_EXCEEDED_IN_RANGE_OPTIMIZER\";\nexports[3172] = \"ER_TABLE_NEEDS_UPG_PART\";\nexports[3173] = \"ER_CANT_WAIT_FOR_EXECUTED_GTID_SET_WHILE_OWNING_A_GTID\";\nexports[3174] = \"ER_CANNOT_ADD_FOREIGN_BASE_COL_VIRTUAL\";\nexports[3175] = \"ER_CANNOT_CREATE_VIRTUAL_INDEX_CONSTRAINT\";\nexports[3176] = \"ER_ERROR_ON_MODIFYING_GTID_EXECUTED_TABLE\";\nexports[3177] = \"ER_LOCK_REFUSED_BY_ENGINE\";\nexports[3178] = \"ER_UNSUPPORTED_ALTER_ONLINE_ON_VIRTUAL_COLUMN\";\nexports[3179] = \"ER_MASTER_KEY_ROTATION_NOT_SUPPORTED_BY_SE\";\nexports[3180] = \"ER_MASTER_KEY_ROTATION_ERROR_BY_SE\";\nexports[3181] = \"ER_MASTER_KEY_ROTATION_BINLOG_FAILED\";\nexports[3182] = \"ER_MASTER_KEY_ROTATION_SE_UNAVAILABLE\";\nexports[3183] = \"ER_TABLESPACE_CANNOT_ENCRYPT\";\nexports[3184] = \"ER_INVALID_ENCRYPTION_OPTION\";\nexports[3185] = \"ER_CANNOT_FIND_KEY_IN_KEYRING\";\nexports[3186] = \"ER_CAPACITY_EXCEEDED_IN_PARSER\";\nexports[3187] = \"ER_UNSUPPORTED_ALTER_ENCRYPTION_INPLACE\";\nexports[3188] = \"ER_KEYRING_UDF_KEYRING_SERVICE_ERROR\";\nexports[3189] = \"ER_USER_COLUMN_OLD_LENGTH\";\nexports[3190] = \"ER_CANT_RESET_SOURCE\";\nexports[3191] = \"ER_GROUP_REPLICATION_MAX_GROUP_SIZE\";\nexports[3192] = \"ER_CANNOT_ADD_FOREIGN_BASE_COL_STORED\";\nexports[3193] = \"ER_TABLE_REFERENCED\";\nexports[3194] = \"ER_PARTITION_ENGINE_DEPRECATED_FOR_TABLE\";\nexports[3195] = \"ER_WARN_USING_GEOMFROMWKB_TO_SET_SRID_ZERO\";\nexports[3196] = \"ER_WARN_USING_GEOMFROMWKB_TO_SET_SRID\";\nexports[3197] = \"ER_XA_RETRY\";\nexports[3198] = \"ER_KEYRING_AWS_UDF_AWS_KMS_ERROR\";\nexports[3199] = \"ER_BINLOG_UNSAFE_XA\";\nexports[3200] = \"ER_UDF_ERROR\";\nexports[3201] = \"ER_KEYRING_MIGRATION_FAILURE\";\nexports[3202] = \"ER_KEYRING_ACCESS_DENIED_ERROR\";\nexports[3203] = \"ER_KEYRING_MIGRATION_STATUS\";\nexports[3204] = \"ER_PLUGIN_FAILED_TO_OPEN_TABLES\";\nexports[3205] = \"ER_PLUGIN_FAILED_TO_OPEN_TABLE\";\nexports[3206] = \"ER_AUDIT_LOG_NO_KEYRING_PLUGIN_INSTALLED\";\nexports[3207] = \"ER_AUDIT_LOG_ENCRYPTION_PASSWORD_HAS_NOT_BEEN_SET\";\nexports[3208] = \"ER_AUDIT_LOG_COULD_NOT_CREATE_AES_KEY\";\nexports[3209] = \"ER_AUDIT_LOG_ENCRYPTION_PASSWORD_CANNOT_BE_FETCHED\";\nexports[3210] = \"ER_AUDIT_LOG_JSON_FILTERING_NOT_ENABLED\";\nexports[3211] = \"ER_AUDIT_LOG_UDF_INSUFFICIENT_PRIVILEGE\";\nexports[3212] = \"ER_AUDIT_LOG_SUPER_PRIVILEGE_REQUIRED\";\nexports[3213] = \"ER_COULD_NOT_REINITIALIZE_AUDIT_LOG_FILTERS\";\nexports[3214] = \"ER_AUDIT_LOG_UDF_INVALID_ARGUMENT_TYPE\";\nexports[3215] = \"ER_AUDIT_LOG_UDF_INVALID_ARGUMENT_COUNT\";\nexports[3216] = \"ER_AUDIT_LOG_HAS_NOT_BEEN_INSTALLED\";\nexports[3217] = \"ER_AUDIT_LOG_UDF_READ_INVALID_MAX_ARRAY_LENGTH_ARG_TYPE\";\nexports[3218] = \"ER_AUDIT_LOG_UDF_READ_INVALID_MAX_ARRAY_LENGTH_ARG_VALUE\";\nexports[3219] = \"ER_AUDIT_LOG_JSON_FILTER_PARSING_ERROR\";\nexports[3220] = \"ER_AUDIT_LOG_JSON_FILTER_NAME_CANNOT_BE_EMPTY\";\nexports[3221] = \"ER_AUDIT_LOG_JSON_USER_NAME_CANNOT_BE_EMPTY\";\nexports[3222] = \"ER_AUDIT_LOG_JSON_FILTER_DOES_NOT_EXISTS\";\nexports[3223] = \"ER_AUDIT_LOG_USER_FIRST_CHARACTER_MUST_BE_ALPHANUMERIC\";\nexports[3224] = \"ER_AUDIT_LOG_USER_NAME_INVALID_CHARACTER\";\nexports[3225] = \"ER_AUDIT_LOG_HOST_NAME_INVALID_CHARACTER\";\nexports[3226] = \"WARN_DEPRECATED_MAXDB_SQL_MODE_FOR_TIMESTAMP\";\nexports[3227] = \"ER_XA_REPLICATION_FILTERS\";\nexports[3228] = \"ER_CANT_OPEN_ERROR_LOG\";\nexports[3229] = \"ER_GROUPING_ON_TIMESTAMP_IN_DST\";\nexports[3230] = \"ER_CANT_START_SERVER_NAMED_PIPE\";\nexports[3231] = \"ER_WRITE_SET_EXCEEDS_LIMIT\";\nexports[3232] = \"ER_DEPRECATED_TLS_VERSION_SESSION_57\";\nexports[3233] = \"ER_WARN_DEPRECATED_TLS_VERSION_57\";\nexports[3234] = \"ER_WARN_WRONG_NATIVE_TABLE_STRUCTURE\";\nexports[3235] = \"ER_AES_INVALID_KDF_NAME\";\nexports[3236] = \"ER_AES_INVALID_KDF_ITERATIONS\";\nexports[3237] = \"WARN_AES_KEY_SIZE\";\nexports[3238] = \"ER_AES_INVALID_KDF_OPTION_SIZE\";\nexports[3500] = \"ER_UNSUPPORT_COMPRESSED_TEMPORARY_TABLE\";\nexports[3501] = \"ER_ACL_OPERATION_FAILED\";\nexports[3502] = \"ER_UNSUPPORTED_INDEX_ALGORITHM\";\nexports[3503] = \"ER_NO_SUCH_DB\";\nexports[3504] = \"ER_TOO_BIG_ENUM\";\nexports[3505] = \"ER_TOO_LONG_SET_ENUM_VALUE\";\nexports[3506] = \"ER_INVALID_DD_OBJECT\";\nexports[3507] = \"ER_UPDATING_DD_TABLE\";\nexports[3508] = \"ER_INVALID_DD_OBJECT_ID\";\nexports[3509] = \"ER_INVALID_DD_OBJECT_NAME\";\nexports[3510] = \"ER_TABLESPACE_MISSING_WITH_NAME\";\nexports[3511] = \"ER_TOO_LONG_ROUTINE_COMMENT\";\nexports[3512] = \"ER_SP_LOAD_FAILED\";\nexports[3513] = \"ER_INVALID_BITWISE_OPERANDS_SIZE\";\nexports[3514] = \"ER_INVALID_BITWISE_AGGREGATE_OPERANDS_SIZE\";\nexports[3515] = \"ER_WARN_UNSUPPORTED_HINT\";\nexports[3516] = \"ER_UNEXPECTED_GEOMETRY_TYPE\";\nexports[3517] = \"ER_SRS_PARSE_ERROR\";\nexports[3518] = \"ER_SRS_PROJ_PARAMETER_MISSING\";\nexports[3519] = \"ER_WARN_SRS_NOT_FOUND\";\nexports[3520] = \"ER_SRS_NOT_CARTESIAN\";\nexports[3521] = \"ER_SRS_NOT_CARTESIAN_UNDEFINED\";\nexports[3522] = \"ER_PK_INDEX_CANT_BE_INVISIBLE\";\nexports[3523] = \"ER_UNKNOWN_AUTHID\";\nexports[3524] = \"ER_FAILED_ROLE_GRANT\";\nexports[3525] = \"ER_OPEN_ROLE_TABLES\";\nexports[3526] = \"ER_FAILED_DEFAULT_ROLES\";\nexports[3527] = \"ER_COMPONENTS_NO_SCHEME\";\nexports[3528] = \"ER_COMPONENTS_NO_SCHEME_SERVICE\";\nexports[3529] = \"ER_COMPONENTS_CANT_LOAD\";\nexports[3530] = \"ER_ROLE_NOT_GRANTED\";\nexports[3531] = \"ER_FAILED_REVOKE_ROLE\";\nexports[3532] = \"ER_RENAME_ROLE\";\nexports[3533] = \"ER_COMPONENTS_CANT_ACQUIRE_SERVICE_IMPLEMENTATION\";\nexports[3534] = \"ER_COMPONENTS_CANT_SATISFY_DEPENDENCY\";\nexports[3535] = \"ER_COMPONENTS_LOAD_CANT_REGISTER_SERVICE_IMPLEMENTATION\";\nexports[3536] = \"ER_COMPONENTS_LOAD_CANT_INITIALIZE\";\nexports[3537] = \"ER_COMPONENTS_UNLOAD_NOT_LOADED\";\nexports[3538] = \"ER_COMPONENTS_UNLOAD_CANT_DEINITIALIZE\";\nexports[3539] = \"ER_COMPONENTS_CANT_RELEASE_SERVICE\";\nexports[3540] = \"ER_COMPONENTS_UNLOAD_CANT_UNREGISTER_SERVICE\";\nexports[3541] = \"ER_COMPONENTS_CANT_UNLOAD\";\nexports[3542] = \"ER_WARN_UNLOAD_THE_NOT_PERSISTED\";\nexports[3543] = \"ER_COMPONENT_TABLE_INCORRECT\";\nexports[3544] = \"ER_COMPONENT_MANIPULATE_ROW_FAILED\";\nexports[3545] = \"ER_COMPONENTS_UNLOAD_DUPLICATE_IN_GROUP\";\nexports[3546] = \"ER_CANT_SET_GTID_PURGED_DUE_SETS_CONSTRAINTS\";\nexports[3547] = \"ER_CANNOT_LOCK_USER_MANAGEMENT_CACHES\";\nexports[3548] = \"ER_SRS_NOT_FOUND\";\nexports[3549] = \"ER_VARIABLE_NOT_PERSISTED\";\nexports[3550] = \"ER_IS_QUERY_INVALID_CLAUSE\";\nexports[3551] = \"ER_UNABLE_TO_STORE_STATISTICS\";\nexports[3552] = \"ER_NO_SYSTEM_SCHEMA_ACCESS\";\nexports[3553] = \"ER_NO_SYSTEM_TABLESPACE_ACCESS\";\nexports[3554] = \"ER_NO_SYSTEM_TABLE_ACCESS\";\nexports[3555] = \"ER_NO_SYSTEM_TABLE_ACCESS_FOR_DICTIONARY_TABLE\";\nexports[3556] = \"ER_NO_SYSTEM_TABLE_ACCESS_FOR_SYSTEM_TABLE\";\nexports[3557] = \"ER_NO_SYSTEM_TABLE_ACCESS_FOR_TABLE\";\nexports[3558] = \"ER_INVALID_OPTION_KEY\";\nexports[3559] = \"ER_INVALID_OPTION_VALUE\";\nexports[3560] = \"ER_INVALID_OPTION_KEY_VALUE_PAIR\";\nexports[3561] = \"ER_INVALID_OPTION_START_CHARACTER\";\nexports[3562] = \"ER_INVALID_OPTION_END_CHARACTER\";\nexports[3563] = \"ER_INVALID_OPTION_CHARACTERS\";\nexports[3564] = \"ER_DUPLICATE_OPTION_KEY\";\nexports[3565] = \"ER_WARN_SRS_NOT_FOUND_AXIS_ORDER\";\nexports[3566] = \"ER_NO_ACCESS_TO_NATIVE_FCT\";\nexports[3567] = \"ER_RESET_SOURCE_TO_VALUE_OUT_OF_RANGE\";\nexports[3568] = \"ER_UNRESOLVED_TABLE_LOCK\";\nexports[3569] = \"ER_DUPLICATE_TABLE_LOCK\";\nexports[3570] = \"ER_BINLOG_UNSAFE_SKIP_LOCKED\";\nexports[3571] = \"ER_BINLOG_UNSAFE_NOWAIT\";\nexports[3572] = \"ER_LOCK_NOWAIT\";\nexports[3573] = \"ER_CTE_RECURSIVE_REQUIRES_UNION\";\nexports[3574] = \"ER_CTE_RECURSIVE_REQUIRES_NONRECURSIVE_FIRST\";\nexports[3575] = \"ER_CTE_RECURSIVE_FORBIDS_AGGREGATION\";\nexports[3576] = \"ER_CTE_RECURSIVE_FORBIDDEN_JOIN_ORDER\";\nexports[3577] = \"ER_CTE_RECURSIVE_REQUIRES_SINGLE_REFERENCE\";\nexports[3578] = \"ER_SWITCH_TMP_ENGINE\";\nexports[3579] = \"ER_WINDOW_NO_SUCH_WINDOW\";\nexports[3580] = \"ER_WINDOW_CIRCULARITY_IN_WINDOW_GRAPH\";\nexports[3581] = \"ER_WINDOW_NO_CHILD_PARTITIONING\";\nexports[3582] = \"ER_WINDOW_NO_INHERIT_FRAME\";\nexports[3583] = \"ER_WINDOW_NO_REDEFINE_ORDER_BY\";\nexports[3584] = \"ER_WINDOW_FRAME_START_ILLEGAL\";\nexports[3585] = \"ER_WINDOW_FRAME_END_ILLEGAL\";\nexports[3586] = \"ER_WINDOW_FRAME_ILLEGAL\";\nexports[3587] = \"ER_WINDOW_RANGE_FRAME_ORDER_TYPE\";\nexports[3588] = \"ER_WINDOW_RANGE_FRAME_TEMPORAL_TYPE\";\nexports[3589] = \"ER_WINDOW_RANGE_FRAME_NUMERIC_TYPE\";\nexports[3590] = \"ER_WINDOW_RANGE_BOUND_NOT_CONSTANT\";\nexports[3591] = \"ER_WINDOW_DUPLICATE_NAME\";\nexports[3592] = \"ER_WINDOW_ILLEGAL_ORDER_BY\";\nexports[3593] = \"ER_WINDOW_INVALID_WINDOW_FUNC_USE\";\nexports[3594] = \"ER_WINDOW_INVALID_WINDOW_FUNC_ALIAS_USE\";\nexports[3595] = \"ER_WINDOW_NESTED_WINDOW_FUNC_USE_IN_WINDOW_SPEC\";\nexports[3596] = \"ER_WINDOW_ROWS_INTERVAL_USE\";\nexports[3597] = \"ER_WINDOW_NO_GROUP_ORDER\";\nexports[3598] = \"ER_WINDOW_EXPLAIN_JSON\";\nexports[3599] = \"ER_WINDOW_FUNCTION_IGNORES_FRAME\";\nexports[3600] = \"ER_WL9236_NOW\";\nexports[3601] = \"ER_INVALID_NO_OF_ARGS\";\nexports[3602] = \"ER_FIELD_IN_GROUPING_NOT_GROUP_BY\";\nexports[3603] = \"ER_TOO_LONG_TABLESPACE_COMMENT\";\nexports[3604] = \"ER_ENGINE_CANT_DROP_TABLE\";\nexports[3605] = \"ER_ENGINE_CANT_DROP_MISSING_TABLE\";\nexports[3606] = \"ER_TABLESPACE_DUP_FILENAME\";\nexports[3607] = \"ER_DB_DROP_RMDIR2\";\nexports[3608] = \"ER_IMP_NO_FILES_MATCHED\";\nexports[3609] = \"ER_IMP_SCHEMA_DOES_NOT_EXIST\";\nexports[3610] = \"ER_IMP_TABLE_ALREADY_EXISTS\";\nexports[3611] = \"ER_IMP_INCOMPATIBLE_MYSQLD_VERSION\";\nexports[3612] = \"ER_IMP_INCOMPATIBLE_DD_VERSION\";\nexports[3613] = \"ER_IMP_INCOMPATIBLE_SDI_VERSION\";\nexports[3614] = \"ER_WARN_INVALID_HINT\";\nexports[3615] = \"ER_VAR_DOES_NOT_EXIST\";\nexports[3616] = \"ER_LONGITUDE_OUT_OF_RANGE\";\nexports[3617] = \"ER_LATITUDE_OUT_OF_RANGE\";\nexports[3618] = \"ER_NOT_IMPLEMENTED_FOR_GEOGRAPHIC_SRS\";\nexports[3619] = \"ER_ILLEGAL_PRIVILEGE_LEVEL\";\nexports[3620] = \"ER_NO_SYSTEM_VIEW_ACCESS\";\nexports[3621] = \"ER_COMPONENT_FILTER_FLABBERGASTED\";\nexports[3622] = \"ER_PART_EXPR_TOO_LONG\";\nexports[3623] = \"ER_UDF_DROP_DYNAMICALLY_REGISTERED\";\nexports[3624] = \"ER_UNABLE_TO_STORE_COLUMN_STATISTICS\";\nexports[3625] = \"ER_UNABLE_TO_UPDATE_COLUMN_STATISTICS\";\nexports[3626] = \"ER_UNABLE_TO_DROP_COLUMN_STATISTICS\";\nexports[3627] = \"ER_UNABLE_TO_BUILD_HISTOGRAM\";\nexports[3628] = \"ER_MANDATORY_ROLE\";\nexports[3629] = \"ER_MISSING_TABLESPACE_FILE\";\nexports[3630] = \"ER_PERSIST_ONLY_ACCESS_DENIED_ERROR\";\nexports[3631] = \"ER_CMD_NEED_SUPER\";\nexports[3632] = \"ER_PATH_IN_DATADIR\";\nexports[3633] = \"ER_CLONE_DDL_IN_PROGRESS\";\nexports[3634] = \"ER_CLONE_TOO_MANY_CONCURRENT_CLONES\";\nexports[3635] = \"ER_APPLIER_LOG_EVENT_VALIDATION_ERROR\";\nexports[3636] = \"ER_CTE_MAX_RECURSION_DEPTH\";\nexports[3637] = \"ER_NOT_HINT_UPDATABLE_VARIABLE\";\nexports[3638] = \"ER_CREDENTIALS_CONTRADICT_TO_HISTORY\";\nexports[3639] = \"ER_WARNING_PASSWORD_HISTORY_CLAUSES_VOID\";\nexports[3640] = \"ER_CLIENT_DOES_NOT_SUPPORT\";\nexports[3641] = \"ER_I_S_SKIPPED_TABLESPACE\";\nexports[3642] = \"ER_TABLESPACE_ENGINE_MISMATCH\";\nexports[3643] = \"ER_WRONG_SRID_FOR_COLUMN\";\nexports[3644] = \"ER_CANNOT_ALTER_SRID_DUE_TO_INDEX\";\nexports[3645] = \"ER_WARN_BINLOG_PARTIAL_UPDATES_DISABLED\";\nexports[3646] = \"ER_WARN_BINLOG_V1_ROW_EVENTS_DISABLED\";\nexports[3647] = \"ER_WARN_BINLOG_PARTIAL_UPDATES_SUGGESTS_PARTIAL_IMAGES\";\nexports[3648] = \"ER_COULD_NOT_APPLY_JSON_DIFF\";\nexports[3649] = \"ER_CORRUPTED_JSON_DIFF\";\nexports[3650] = \"ER_RESOURCE_GROUP_EXISTS\";\nexports[3651] = \"ER_RESOURCE_GROUP_NOT_EXISTS\";\nexports[3652] = \"ER_INVALID_VCPU_ID\";\nexports[3653] = \"ER_INVALID_VCPU_RANGE\";\nexports[3654] = \"ER_INVALID_THREAD_PRIORITY\";\nexports[3655] = \"ER_DISALLOWED_OPERATION\";\nexports[3656] = \"ER_RESOURCE_GROUP_BUSY\";\nexports[3657] = \"ER_RESOURCE_GROUP_DISABLED\";\nexports[3658] = \"ER_FEATURE_UNSUPPORTED\";\nexports[3659] = \"ER_ATTRIBUTE_IGNORED\";\nexports[3660] = \"ER_INVALID_THREAD_ID\";\nexports[3661] = \"ER_RESOURCE_GROUP_BIND_FAILED\";\nexports[3662] = \"ER_INVALID_USE_OF_FORCE_OPTION\";\nexports[3663] = \"ER_GROUP_REPLICATION_COMMAND_FAILURE\";\nexports[3664] = \"ER_SDI_OPERATION_FAILED\";\nexports[3665] = \"ER_MISSING_JSON_TABLE_VALUE\";\nexports[3666] = \"ER_WRONG_JSON_TABLE_VALUE\";\nexports[3667] = \"ER_TF_MUST_HAVE_ALIAS\";\nexports[3668] = \"ER_TF_FORBIDDEN_JOIN_TYPE\";\nexports[3669] = \"ER_JT_VALUE_OUT_OF_RANGE\";\nexports[3670] = \"ER_JT_MAX_NESTED_PATH\";\nexports[3671] = \"ER_PASSWORD_EXPIRATION_NOT_SUPPORTED_BY_AUTH_METHOD\";\nexports[3672] = \"ER_INVALID_GEOJSON_CRS_NOT_TOP_LEVEL\";\nexports[3673] = \"ER_BAD_NULL_ERROR_NOT_IGNORED\";\nexports[3674] = \"WARN_USELESS_SPATIAL_INDEX\";\nexports[3675] = \"ER_DISK_FULL_NOWAIT\";\nexports[3676] = \"ER_PARSE_ERROR_IN_DIGEST_FN\";\nexports[3677] = \"ER_UNDISCLOSED_PARSE_ERROR_IN_DIGEST_FN\";\nexports[3678] = \"ER_SCHEMA_DIR_EXISTS\";\nexports[3679] = \"ER_SCHEMA_DIR_MISSING\";\nexports[3680] = \"ER_SCHEMA_DIR_CREATE_FAILED\";\nexports[3681] = \"ER_SCHEMA_DIR_UNKNOWN\";\nexports[3682] = \"ER_ONLY_IMPLEMENTED_FOR_SRID_0_AND_4326\";\nexports[3683] = \"ER_BINLOG_EXPIRE_LOG_DAYS_AND_SECS_USED_TOGETHER\";\nexports[3684] = \"ER_REGEXP_BUFFER_OVERFLOW\";\nexports[3685] = \"ER_REGEXP_ILLEGAL_ARGUMENT\";\nexports[3686] = \"ER_REGEXP_INDEX_OUTOFBOUNDS_ERROR\";\nexports[3687] = \"ER_REGEXP_INTERNAL_ERROR\";\nexports[3688] = \"ER_REGEXP_RULE_SYNTAX\";\nexports[3689] = \"ER_REGEXP_BAD_ESCAPE_SEQUENCE\";\nexports[3690] = \"ER_REGEXP_UNIMPLEMENTED\";\nexports[3691] = \"ER_REGEXP_MISMATCHED_PAREN\";\nexports[3692] = \"ER_REGEXP_BAD_INTERVAL\";\nexports[3693] = \"ER_REGEXP_MAX_LT_MIN\";\nexports[3694] = \"ER_REGEXP_INVALID_BACK_REF\";\nexports[3695] = \"ER_REGEXP_LOOK_BEHIND_LIMIT\";\nexports[3696] = \"ER_REGEXP_MISSING_CLOSE_BRACKET\";\nexports[3697] = \"ER_REGEXP_INVALID_RANGE\";\nexports[3698] = \"ER_REGEXP_STACK_OVERFLOW\";\nexports[3699] = \"ER_REGEXP_TIME_OUT\";\nexports[3700] = \"ER_REGEXP_PATTERN_TOO_BIG\";\nexports[3701] = \"ER_CANT_SET_ERROR_LOG_SERVICE\";\nexports[3702] = \"ER_EMPTY_PIPELINE_FOR_ERROR_LOG_SERVICE\";\nexports[3703] = \"ER_COMPONENT_FILTER_DIAGNOSTICS\";\nexports[3704] = \"ER_NOT_IMPLEMENTED_FOR_CARTESIAN_SRS\";\nexports[3705] = \"ER_NOT_IMPLEMENTED_FOR_PROJECTED_SRS\";\nexports[3706] = \"ER_NONPOSITIVE_RADIUS\";\nexports[3707] = \"ER_RESTART_SERVER_FAILED\";\nexports[3708] = \"ER_SRS_MISSING_MANDATORY_ATTRIBUTE\";\nexports[3709] = \"ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS\";\nexports[3710] = \"ER_SRS_NAME_CANT_BE_EMPTY_OR_WHITESPACE\";\nexports[3711] = \"ER_SRS_ORGANIZATION_CANT_BE_EMPTY_OR_WHITESPACE\";\nexports[3712] = \"ER_SRS_ID_ALREADY_EXISTS\";\nexports[3713] = \"ER_WARN_SRS_ID_ALREADY_EXISTS\";\nexports[3714] = \"ER_CANT_MODIFY_SRID_0\";\nexports[3715] = \"ER_WARN_RESERVED_SRID_RANGE\";\nexports[3716] = \"ER_CANT_MODIFY_SRS_USED_BY_COLUMN\";\nexports[3717] = \"ER_SRS_INVALID_CHARACTER_IN_ATTRIBUTE\";\nexports[3718] = \"ER_SRS_ATTRIBUTE_STRING_TOO_LONG\";\nexports[3719] = \"ER_DEPRECATED_UTF8_ALIAS\";\nexports[3720] = \"ER_DEPRECATED_NATIONAL\";\nexports[3721] = \"ER_INVALID_DEFAULT_UTF8MB4_COLLATION\";\nexports[3722] = \"ER_UNABLE_TO_COLLECT_LOG_STATUS\";\nexports[3723] = \"ER_RESERVED_TABLESPACE_NAME\";\nexports[3724] = \"ER_UNABLE_TO_SET_OPTION\";\nexports[3725] = \"ER_REPLICA_POSSIBLY_DIVERGED_AFTER_DDL\";\nexports[3726] = \"ER_SRS_NOT_GEOGRAPHIC\";\nexports[3727] = \"ER_POLYGON_TOO_LARGE\";\nexports[3728] = \"ER_SPATIAL_UNIQUE_INDEX\";\nexports[3729] = \"ER_INDEX_TYPE_NOT_SUPPORTED_FOR_SPATIAL_INDEX\";\nexports[3730] = \"ER_FK_CANNOT_DROP_PARENT\";\nexports[3731] = \"ER_GEOMETRY_PARAM_LONGITUDE_OUT_OF_RANGE\";\nexports[3732] = \"ER_GEOMETRY_PARAM_LATITUDE_OUT_OF_RANGE\";\nexports[3733] = \"ER_FK_CANNOT_USE_VIRTUAL_COLUMN\";\nexports[3734] = \"ER_FK_NO_COLUMN_PARENT\";\nexports[3735] = \"ER_CANT_SET_ERROR_SUPPRESSION_LIST\";\nexports[3736] = \"ER_SRS_GEOGCS_INVALID_AXES\";\nexports[3737] = \"ER_SRS_INVALID_SEMI_MAJOR_AXIS\";\nexports[3738] = \"ER_SRS_INVALID_INVERSE_FLATTENING\";\nexports[3739] = \"ER_SRS_INVALID_ANGULAR_UNIT\";\nexports[3740] = \"ER_SRS_INVALID_PRIME_MERIDIAN\";\nexports[3741] = \"ER_TRANSFORM_SOURCE_SRS_NOT_SUPPORTED\";\nexports[3742] = \"ER_TRANSFORM_TARGET_SRS_NOT_SUPPORTED\";\nexports[3743] = \"ER_TRANSFORM_SOURCE_SRS_MISSING_TOWGS84\";\nexports[3744] = \"ER_TRANSFORM_TARGET_SRS_MISSING_TOWGS84\";\nexports[3745] = \"ER_TEMP_TABLE_PREVENTS_SWITCH_SESSION_BINLOG_FORMAT\";\nexports[3746] = \"ER_TEMP_TABLE_PREVENTS_SWITCH_GLOBAL_BINLOG_FORMAT\";\nexports[3747] = \"ER_RUNNING_APPLIER_PREVENTS_SWITCH_GLOBAL_BINLOG_FORMAT\";\nexports[3748] = \"ER_CLIENT_GTID_UNSAFE_CREATE_DROP_TEMP_TABLE_IN_TRX_IN_SBR\";\nexports[3749] = \"ER_XA_CANT_CREATE_MDL_BACKUP\";\nexports[3750] = \"ER_TABLE_WITHOUT_PK\";\nexports[3751] = \"ER_WARN_DATA_TRUNCATED_FUNCTIONAL_INDEX\";\nexports[3752] = \"ER_WARN_DATA_OUT_OF_RANGE_FUNCTIONAL_INDEX\";\nexports[3753] = \"ER_FUNCTIONAL_INDEX_ON_JSON_OR_GEOMETRY_FUNCTION\";\nexports[3754] = \"ER_FUNCTIONAL_INDEX_REF_AUTO_INCREMENT\";\nexports[3755] = \"ER_CANNOT_DROP_COLUMN_FUNCTIONAL_INDEX\";\nexports[3756] = \"ER_FUNCTIONAL_INDEX_PRIMARY_KEY\";\nexports[3757] = \"ER_FUNCTIONAL_INDEX_ON_LOB\";\nexports[3758] = \"ER_FUNCTIONAL_INDEX_FUNCTION_IS_NOT_ALLOWED\";\nexports[3759] = \"ER_FULLTEXT_FUNCTIONAL_INDEX\";\nexports[3760] = \"ER_SPATIAL_FUNCTIONAL_INDEX\";\nexports[3761] = \"ER_WRONG_KEY_COLUMN_FUNCTIONAL_INDEX\";\nexports[3762] = \"ER_FUNCTIONAL_INDEX_ON_FIELD\";\nexports[3763] = \"ER_GENERATED_COLUMN_NAMED_FUNCTION_IS_NOT_ALLOWED\";\nexports[3764] = \"ER_GENERATED_COLUMN_ROW_VALUE\";\nexports[3765] = \"ER_GENERATED_COLUMN_VARIABLES\";\nexports[3766] = \"ER_DEPENDENT_BY_DEFAULT_GENERATED_VALUE\";\nexports[3767] = \"ER_DEFAULT_VAL_GENERATED_NON_PRIOR\";\nexports[3768] = \"ER_DEFAULT_VAL_GENERATED_REF_AUTO_INC\";\nexports[3769] = \"ER_DEFAULT_VAL_GENERATED_FUNCTION_IS_NOT_ALLOWED\";\nexports[3770] = \"ER_DEFAULT_VAL_GENERATED_NAMED_FUNCTION_IS_NOT_ALLOWED\";\nexports[3771] = \"ER_DEFAULT_VAL_GENERATED_ROW_VALUE\";\nexports[3772] = \"ER_DEFAULT_VAL_GENERATED_VARIABLES\";\nexports[3773] = \"ER_DEFAULT_AS_VAL_GENERATED\";\nexports[3774] = \"ER_UNSUPPORTED_ACTION_ON_DEFAULT_VAL_GENERATED\";\nexports[3775] = \"ER_GTID_UNSAFE_ALTER_ADD_COL_WITH_DEFAULT_EXPRESSION\";\nexports[3776] = \"ER_FK_CANNOT_CHANGE_ENGINE\";\nexports[3777] = \"ER_WARN_DEPRECATED_USER_SET_EXPR\";\nexports[3778] = \"ER_WARN_DEPRECATED_UTF8MB3_COLLATION\";\nexports[3779] = \"ER_WARN_DEPRECATED_NESTED_COMMENT_SYNTAX\";\nexports[3780] = \"ER_FK_INCOMPATIBLE_COLUMNS\";\nexports[3781] = \"ER_GR_HOLD_WAIT_TIMEOUT\";\nexports[3782] = \"ER_GR_HOLD_KILLED\";\nexports[3783] = \"ER_GR_HOLD_MEMBER_STATUS_ERROR\";\nexports[3784] = \"ER_RPL_ENCRYPTION_FAILED_TO_FETCH_KEY\";\nexports[3785] = \"ER_RPL_ENCRYPTION_KEY_NOT_FOUND\";\nexports[3786] = \"ER_RPL_ENCRYPTION_KEYRING_INVALID_KEY\";\nexports[3787] = \"ER_RPL_ENCRYPTION_HEADER_ERROR\";\nexports[3788] = \"ER_RPL_ENCRYPTION_FAILED_TO_ROTATE_LOGS\";\nexports[3789] = \"ER_RPL_ENCRYPTION_KEY_EXISTS_UNEXPECTED\";\nexports[3790] = \"ER_RPL_ENCRYPTION_FAILED_TO_GENERATE_KEY\";\nexports[3791] = \"ER_RPL_ENCRYPTION_FAILED_TO_STORE_KEY\";\nexports[3792] = \"ER_RPL_ENCRYPTION_FAILED_TO_REMOVE_KEY\";\nexports[3793] = \"ER_RPL_ENCRYPTION_UNABLE_TO_CHANGE_OPTION\";\nexports[3794] = \"ER_RPL_ENCRYPTION_MASTER_KEY_RECOVERY_FAILED\";\nexports[3795] = \"ER_SLOW_LOG_MODE_IGNORED_WHEN_NOT_LOGGING_TO_FILE\";\nexports[3796] = \"ER_GRP_TRX_CONSISTENCY_NOT_ALLOWED\";\nexports[3797] = \"ER_GRP_TRX_CONSISTENCY_BEFORE\";\nexports[3798] = \"ER_GRP_TRX_CONSISTENCY_AFTER_ON_TRX_BEGIN\";\nexports[3799] = \"ER_GRP_TRX_CONSISTENCY_BEGIN_NOT_ALLOWED\";\nexports[3800] = \"ER_FUNCTIONAL_INDEX_ROW_VALUE_IS_NOT_ALLOWED\";\nexports[3801] = \"ER_RPL_ENCRYPTION_FAILED_TO_ENCRYPT\";\nexports[3802] = \"ER_PAGE_TRACKING_NOT_STARTED\";\nexports[3803] = \"ER_PAGE_TRACKING_RANGE_NOT_TRACKED\";\nexports[3804] = \"ER_PAGE_TRACKING_CANNOT_PURGE\";\nexports[3805] = \"ER_RPL_ENCRYPTION_CANNOT_ROTATE_BINLOG_MASTER_KEY\";\nexports[3806] = \"ER_BINLOG_MASTER_KEY_RECOVERY_OUT_OF_COMBINATION\";\nexports[3807] = \"ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_OPERATE_KEY\";\nexports[3808] = \"ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_ROTATE_LOGS\";\nexports[3809] = \"ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_REENCRYPT_LOG\";\nexports[3810] = \"ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_CLEANUP_UNUSED_KEYS\";\nexports[3811] = \"ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_CLEANUP_AUX_KEY\";\nexports[3812] = \"ER_NON_BOOLEAN_EXPR_FOR_CHECK_CONSTRAINT\";\nexports[3813] = \"ER_COLUMN_CHECK_CONSTRAINT_REFERENCES_OTHER_COLUMN\";\nexports[3814] = \"ER_CHECK_CONSTRAINT_NAMED_FUNCTION_IS_NOT_ALLOWED\";\nexports[3815] = \"ER_CHECK_CONSTRAINT_FUNCTION_IS_NOT_ALLOWED\";\nexports[3816] = \"ER_CHECK_CONSTRAINT_VARIABLES\";\nexports[3817] = \"ER_CHECK_CONSTRAINT_ROW_VALUE\";\nexports[3818] = \"ER_CHECK_CONSTRAINT_REFERS_AUTO_INCREMENT_COLUMN\";\nexports[3819] = \"ER_CHECK_CONSTRAINT_VIOLATED\";\nexports[3820] = \"ER_CHECK_CONSTRAINT_REFERS_UNKNOWN_COLUMN\";\nexports[3821] = \"ER_CHECK_CONSTRAINT_NOT_FOUND\";\nexports[3822] = \"ER_CHECK_CONSTRAINT_DUP_NAME\";\nexports[3823] = \"ER_CHECK_CONSTRAINT_CLAUSE_USING_FK_REFER_ACTION_COLUMN\";\nexports[3824] = \"WARN_UNENCRYPTED_TABLE_IN_ENCRYPTED_DB\";\nexports[3825] = \"ER_INVALID_ENCRYPTION_REQUEST\";\nexports[3826] = \"ER_CANNOT_SET_TABLE_ENCRYPTION\";\nexports[3827] = \"ER_CANNOT_SET_DATABASE_ENCRYPTION\";\nexports[3828] = \"ER_CANNOT_SET_TABLESPACE_ENCRYPTION\";\nexports[3829] = \"ER_TABLESPACE_CANNOT_BE_ENCRYPTED\";\nexports[3830] = \"ER_TABLESPACE_CANNOT_BE_DECRYPTED\";\nexports[3831] = \"ER_TABLESPACE_TYPE_UNKNOWN\";\nexports[3832] = \"ER_TARGET_TABLESPACE_UNENCRYPTED\";\nexports[3833] = \"ER_CANNOT_USE_ENCRYPTION_CLAUSE\";\nexports[3834] = \"ER_INVALID_MULTIPLE_CLAUSES\";\nexports[3835] = \"ER_UNSUPPORTED_USE_OF_GRANT_AS\";\nexports[3836] = \"ER_UKNOWN_AUTH_ID_OR_ACCESS_DENIED_FOR_GRANT_AS\";\nexports[3837] = \"ER_DEPENDENT_BY_FUNCTIONAL_INDEX\";\nexports[3838] = \"ER_PLUGIN_NOT_EARLY\";\nexports[3839] = \"ER_INNODB_REDO_LOG_ARCHIVE_START_SUBDIR_PATH\";\nexports[3840] = \"ER_INNODB_REDO_LOG_ARCHIVE_START_TIMEOUT\";\nexports[3841] = \"ER_INNODB_REDO_LOG_ARCHIVE_DIRS_INVALID\";\nexports[3842] = \"ER_INNODB_REDO_LOG_ARCHIVE_LABEL_NOT_FOUND\";\nexports[3843] = \"ER_INNODB_REDO_LOG_ARCHIVE_DIR_EMPTY\";\nexports[3844] = \"ER_INNODB_REDO_LOG_ARCHIVE_NO_SUCH_DIR\";\nexports[3845] = \"ER_INNODB_REDO_LOG_ARCHIVE_DIR_CLASH\";\nexports[3846] = \"ER_INNODB_REDO_LOG_ARCHIVE_DIR_PERMISSIONS\";\nexports[3847] = \"ER_INNODB_REDO_LOG_ARCHIVE_FILE_CREATE\";\nexports[3848] = \"ER_INNODB_REDO_LOG_ARCHIVE_ACTIVE\";\nexports[3849] = \"ER_INNODB_REDO_LOG_ARCHIVE_INACTIVE\";\nexports[3850] = \"ER_INNODB_REDO_LOG_ARCHIVE_FAILED\";\nexports[3851] = \"ER_INNODB_REDO_LOG_ARCHIVE_SESSION\";\nexports[3852] = \"ER_STD_REGEX_ERROR\";\nexports[3853] = \"ER_INVALID_JSON_TYPE\";\nexports[3854] = \"ER_CANNOT_CONVERT_STRING\";\nexports[3855] = \"ER_DEPENDENT_BY_PARTITION_FUNC\";\nexports[3856] = \"ER_WARN_DEPRECATED_FLOAT_AUTO_INCREMENT\";\nexports[3857] = \"ER_RPL_CANT_STOP_REPLICA_WHILE_LOCKED_BACKUP\";\nexports[3858] = \"ER_WARN_DEPRECATED_FLOAT_DIGITS\";\nexports[3859] = \"ER_WARN_DEPRECATED_FLOAT_UNSIGNED\";\nexports[3860] = \"ER_WARN_DEPRECATED_INTEGER_DISPLAY_WIDTH\";\nexports[3861] = \"ER_WARN_DEPRECATED_ZEROFILL\";\nexports[3862] = \"ER_CLONE_DONOR\";\nexports[3863] = \"ER_CLONE_PROTOCOL\";\nexports[3864] = \"ER_CLONE_DONOR_VERSION\";\nexports[3865] = \"ER_CLONE_OS\";\nexports[3866] = \"ER_CLONE_PLATFORM\";\nexports[3867] = \"ER_CLONE_CHARSET\";\nexports[3868] = \"ER_CLONE_CONFIG\";\nexports[3869] = \"ER_CLONE_SYS_CONFIG\";\nexports[3870] = \"ER_CLONE_PLUGIN_MATCH\";\nexports[3871] = \"ER_CLONE_LOOPBACK\";\nexports[3872] = \"ER_CLONE_ENCRYPTION\";\nexports[3873] = \"ER_CLONE_DISK_SPACE\";\nexports[3874] = \"ER_CLONE_IN_PROGRESS\";\nexports[3875] = \"ER_CLONE_DISALLOWED\";\nexports[3876] = \"ER_CANNOT_GRANT_ROLES_TO_ANONYMOUS_USER\";\nexports[3877] = \"ER_SECONDARY_ENGINE_PLUGIN\";\nexports[3878] = \"ER_SECOND_PASSWORD_CANNOT_BE_EMPTY\";\nexports[3879] = \"ER_DB_ACCESS_DENIED\";\nexports[3880] = \"ER_DA_AUTH_ID_WITH_SYSTEM_USER_PRIV_IN_MANDATORY_ROLES\";\nexports[3881] = \"ER_DA_RPL_GTID_TABLE_CANNOT_OPEN\";\nexports[3882] = \"ER_GEOMETRY_IN_UNKNOWN_LENGTH_UNIT\";\nexports[3883] = \"ER_DA_PLUGIN_INSTALL_ERROR\";\nexports[3884] = \"ER_NO_SESSION_TEMP\";\nexports[3885] = \"ER_DA_UNKNOWN_ERROR_NUMBER\";\nexports[3886] = \"ER_COLUMN_CHANGE_SIZE\";\nexports[3887] = \"ER_REGEXP_INVALID_CAPTURE_GROUP_NAME\";\nexports[3888] = \"ER_DA_SSL_LIBRARY_ERROR\";\nexports[3889] = \"ER_SECONDARY_ENGINE\";\nexports[3890] = \"ER_SECONDARY_ENGINE_DDL\";\nexports[3891] = \"ER_INCORRECT_CURRENT_PASSWORD\";\nexports[3892] = \"ER_MISSING_CURRENT_PASSWORD\";\nexports[3893] = \"ER_CURRENT_PASSWORD_NOT_REQUIRED\";\nexports[3894] = \"ER_PASSWORD_CANNOT_BE_RETAINED_ON_PLUGIN_CHANGE\";\nexports[3895] = \"ER_CURRENT_PASSWORD_CANNOT_BE_RETAINED\";\nexports[3896] = \"ER_PARTIAL_REVOKES_EXIST\";\nexports[3897] = \"ER_CANNOT_GRANT_SYSTEM_PRIV_TO_MANDATORY_ROLE\";\nexports[3898] = \"ER_XA_REPLICATION_FILTERS\";\nexports[3899] = \"ER_UNSUPPORTED_SQL_MODE\";\nexports[3900] = \"ER_REGEXP_INVALID_FLAG\";\nexports[3901] = \"ER_PARTIAL_REVOKE_AND_DB_GRANT_BOTH_EXISTS\";\nexports[3902] = \"ER_UNIT_NOT_FOUND\";\nexports[3903] = \"ER_INVALID_JSON_VALUE_FOR_FUNC_INDEX\";\nexports[3904] = \"ER_JSON_VALUE_OUT_OF_RANGE_FOR_FUNC_INDEX\";\nexports[3905] = \"ER_EXCEEDED_MV_KEYS_NUM\";\nexports[3906] = \"ER_EXCEEDED_MV_KEYS_SPACE\";\nexports[3907] = \"ER_FUNCTIONAL_INDEX_DATA_IS_TOO_LONG\";\nexports[3908] = \"ER_WRONG_MVI_VALUE\";\nexports[3909] = \"ER_WARN_FUNC_INDEX_NOT_APPLICABLE\";\nexports[3910] = \"ER_GRP_RPL_UDF_ERROR\";\nexports[3911] = \"ER_UPDATE_GTID_PURGED_WITH_GR\";\nexports[3912] = \"ER_GROUPING_ON_TIMESTAMP_IN_DST\";\nexports[3913] = \"ER_TABLE_NAME_CAUSES_TOO_LONG_PATH\";\nexports[3914] = \"ER_AUDIT_LOG_INSUFFICIENT_PRIVILEGE\";\nexports[3915] = \"ER_AUDIT_LOG_PASSWORD_HAS_BEEN_COPIED\";\nexports[3916] = \"ER_DA_GRP_RPL_STARTED_AUTO_REJOIN\";\nexports[3917] = \"ER_SYSVAR_CHANGE_DURING_QUERY\";\nexports[3918] = \"ER_GLOBSTAT_CHANGE_DURING_QUERY\";\nexports[3919] = \"ER_GRP_RPL_MESSAGE_SERVICE_INIT_FAILURE\";\nexports[3920] = \"ER_CHANGE_SOURCE_WRONG_COMPRESSION_ALGORITHM_CLIENT\";\nexports[3921] = \"ER_CHANGE_SOURCE_WRONG_COMPRESSION_LEVEL_CLIENT\";\nexports[3922] = \"ER_WRONG_COMPRESSION_ALGORITHM_CLIENT\";\nexports[3923] = \"ER_WRONG_COMPRESSION_LEVEL_CLIENT\";\nexports[3924] = \"ER_CHANGE_SOURCE_WRONG_COMPRESSION_ALGORITHM_LIST_CLIENT\";\nexports[3925] = \"ER_CLIENT_PRIVILEGE_CHECKS_USER_CANNOT_BE_ANONYMOUS\";\nexports[3926] = \"ER_CLIENT_PRIVILEGE_CHECKS_USER_DOES_NOT_EXIST\";\nexports[3927] = \"ER_CLIENT_PRIVILEGE_CHECKS_USER_CORRUPT\";\nexports[3928] = \"ER_CLIENT_PRIVILEGE_CHECKS_USER_NEEDS_RPL_APPLIER_PRIV\";\nexports[3929] = \"ER_WARN_DA_PRIVILEGE_NOT_REGISTERED\";\nexports[3930] = \"ER_CLIENT_KEYRING_UDF_KEY_INVALID\";\nexports[3931] = \"ER_CLIENT_KEYRING_UDF_KEY_TYPE_INVALID\";\nexports[3932] = \"ER_CLIENT_KEYRING_UDF_KEY_TOO_LONG\";\nexports[3933] = \"ER_CLIENT_KEYRING_UDF_KEY_TYPE_TOO_LONG\";\nexports[3934] = \"ER_JSON_SCHEMA_VALIDATION_ERROR_WITH_DETAILED_REPORT\";\nexports[3935] = \"ER_DA_UDF_INVALID_CHARSET_SPECIFIED\";\nexports[3936] = \"ER_DA_UDF_INVALID_CHARSET\";\nexports[3937] = \"ER_DA_UDF_INVALID_COLLATION\";\nexports[3938] = \"ER_DA_UDF_INVALID_EXTENSION_ARGUMENT_TYPE\";\nexports[3939] = \"ER_MULTIPLE_CONSTRAINTS_WITH_SAME_NAME\";\nexports[3940] = \"ER_CONSTRAINT_NOT_FOUND\";\nexports[3941] = \"ER_ALTER_CONSTRAINT_ENFORCEMENT_NOT_SUPPORTED\";\nexports[3942] = \"ER_TABLE_VALUE_CONSTRUCTOR_MUST_HAVE_COLUMNS\";\nexports[3943] = \"ER_TABLE_VALUE_CONSTRUCTOR_CANNOT_HAVE_DEFAULT\";\nexports[3944] = \"ER_CLIENT_QUERY_FAILURE_INVALID_NON_ROW_FORMAT\";\nexports[3945] = \"ER_REQUIRE_ROW_FORMAT_INVALID_VALUE\";\nexports[3946] = \"ER_FAILED_TO_DETERMINE_IF_ROLE_IS_MANDATORY\";\nexports[3947] = \"ER_FAILED_TO_FETCH_MANDATORY_ROLE_LIST\";\nexports[3948] = \"ER_CLIENT_LOCAL_FILES_DISABLED\";\nexports[3949] = \"ER_IMP_INCOMPATIBLE_CFG_VERSION\";\nexports[3950] = \"ER_DA_OOM\";\nexports[3951] = \"ER_DA_UDF_INVALID_ARGUMENT_TO_SET_CHARSET\";\nexports[3952] = \"ER_DA_UDF_INVALID_RETURN_TYPE_TO_SET_CHARSET\";\nexports[3953] = \"ER_MULTIPLE_INTO_CLAUSES\";\nexports[3954] = \"ER_MISPLACED_INTO\";\nexports[3955] = \"ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK\";\nexports[3956] = \"ER_WARN_DEPRECATED_YEAR_UNSIGNED\";\nexports[3957] = \"ER_CLONE_NETWORK_PACKET\";\nexports[3958] = \"ER_SDI_OPERATION_FAILED_MISSING_RECORD\";\nexports[3959] = \"ER_DEPENDENT_BY_CHECK_CONSTRAINT\";\nexports[3960] = \"ER_GRP_OPERATION_NOT_ALLOWED_GR_MUST_STOP\";\nexports[3961] = \"ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY\";\nexports[3962] = \"ER_WARN_DEPRECATED_INNER_INTO\";\nexports[3963] = \"ER_WARN_DEPRECATED_VALUES_FUNCTION_ALWAYS_NULL\";\nexports[3964] = \"ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS\";\nexports[3965] = \"ER_WARN_DEPRECATED_FOUND_ROWS\";\nexports[3966] = \"ER_MISSING_JSON_VALUE\";\nexports[3967] = \"ER_MULTIPLE_JSON_VALUES\";\nexports[3968] = \"ER_HOSTNAME_TOO_LONG\";\nexports[3969] = \"ER_WARN_CLIENT_DEPRECATED_PARTITION_PREFIX_KEY\";\nexports[3970] = \"ER_GROUP_REPLICATION_USER_EMPTY_MSG\";\nexports[3971] = \"ER_GROUP_REPLICATION_USER_MANDATORY_MSG\";\nexports[3972] = \"ER_GROUP_REPLICATION_PASSWORD_LENGTH\";\nexports[3973] = \"ER_SUBQUERY_TRANSFORM_REJECTED\";\nexports[3974] = \"ER_DA_GRP_RPL_RECOVERY_ENDPOINT_FORMAT\";\nexports[3975] = \"ER_DA_GRP_RPL_RECOVERY_ENDPOINT_INVALID\";\nexports[3976] = \"ER_WRONG_VALUE_FOR_VAR_PLUS_ACTIONABLE_PART\";\nexports[3977] = \"ER_STATEMENT_NOT_ALLOWED_AFTER_START_TRANSACTION\";\nexports[3978] = \"ER_FOREIGN_KEY_WITH_ATOMIC_CREATE_SELECT\";\nexports[3979] = \"ER_NOT_ALLOWED_WITH_START_TRANSACTION\";\nexports[3980] = \"ER_INVALID_JSON_ATTRIBUTE\";\nexports[3981] = \"ER_ENGINE_ATTRIBUTE_NOT_SUPPORTED\";\nexports[3982] = \"ER_INVALID_USER_ATTRIBUTE_JSON\";\nexports[3983] = \"ER_INNODB_REDO_DISABLED\";\nexports[3984] = \"ER_INNODB_REDO_ARCHIVING_ENABLED\";\nexports[3985] = \"ER_MDL_OUT_OF_RESOURCES\";\nexports[3986] = \"ER_IMPLICIT_COMPARISON_FOR_JSON\";\nexports[3987] = \"ER_FUNCTION_DOES_NOT_SUPPORT_CHARACTER_SET\";\nexports[3988] = \"ER_IMPOSSIBLE_STRING_CONVERSION\";\nexports[3989] = \"ER_SCHEMA_READ_ONLY\";\nexports[3990] = \"ER_RPL_ASYNC_RECONNECT_GTID_MODE_OFF\";\nexports[3991] = \"ER_RPL_ASYNC_RECONNECT_AUTO_POSITION_OFF\";\nexports[3992] = \"ER_DISABLE_GTID_MODE_REQUIRES_ASYNC_RECONNECT_OFF\";\nexports[3993] = \"ER_DISABLE_AUTO_POSITION_REQUIRES_ASYNC_RECONNECT_OFF\";\nexports[3994] = \"ER_INVALID_PARAMETER_USE\";\nexports[3995] = \"ER_CHARACTER_SET_MISMATCH\";\nexports[3996] = \"ER_WARN_VAR_VALUE_CHANGE_NOT_SUPPORTED\";\nexports[3997] = \"ER_INVALID_TIME_ZONE_INTERVAL\";\nexports[3998] = \"ER_INVALID_CAST\";\nexports[3999] = \"ER_HYPERGRAPH_NOT_SUPPORTED_YET\";\nexports[4000] = \"ER_WARN_HYPERGRAPH_EXPERIMENTAL\";\nexports[4001] = \"ER_DA_NO_ERROR_LOG_PARSER_CONFIGURED\";\nexports[4002] = \"ER_DA_ERROR_LOG_TABLE_DISABLED\";\nexports[4003] = \"ER_DA_ERROR_LOG_MULTIPLE_FILTERS\";\nexports[4004] = \"ER_DA_CANT_OPEN_ERROR_LOG\";\nexports[4005] = \"ER_USER_REFERENCED_AS_DEFINER\";\nexports[4006] = \"ER_CANNOT_USER_REFERENCED_AS_DEFINER\";\nexports[4007] = \"ER_REGEX_NUMBER_TOO_BIG\";\nexports[4008] = \"ER_SPVAR_NONINTEGER_TYPE\";\nexports[4009] = \"WARN_UNSUPPORTED_ACL_TABLES_READ\";\nexports[4010] = \"ER_BINLOG_UNSAFE_ACL_TABLE_READ_IN_DML_DDL\";\nexports[4011] = \"ER_STOP_REPLICA_MONITOR_IO_THREAD_TIMEOUT\";\nexports[4012] = \"ER_STARTING_REPLICA_MONITOR_IO_THREAD\";\nexports[4013] = \"ER_CANT_USE_ANONYMOUS_TO_GTID_WITH_GTID_MODE_NOT_ON\";\nexports[4014] = \"ER_CANT_COMBINE_ANONYMOUS_TO_GTID_AND_AUTOPOSITION\";\nexports[4015] = \"ER_ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_REQUIRES_GTID_MODE_ON\";\nexports[4016] = \"ER_SQL_REPLICA_SKIP_COUNTER_USED_WITH_GTID_MODE_ON\";\nexports[4017] = \"ER_USING_ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_AS_LOCAL_OR_UUID\";\nexports[4018] = \"ER_CANT_SET_ANONYMOUS_TO_GTID_AND_WAIT_UNTIL_SQL_THD_AFTER_GTIDS\";\nexports[4019] = \"ER_CANT_SET_SQL_AFTER_OR_BEFORE_GTIDS_WITH_ANONYMOUS_TO_GTID\";\nexports[4020] = \"ER_ANONYMOUS_TO_GTID_UUID_SAME_AS_GROUP_NAME\";\nexports[4021] = \"ER_CANT_USE_SAME_UUID_AS_GROUP_NAME\";\nexports[4022] = \"ER_GRP_RPL_RECOVERY_CHANNEL_STILL_RUNNING\";\nexports[4023] = \"ER_INNODB_INVALID_AUTOEXTEND_SIZE_VALUE\";\nexports[4024] = \"ER_INNODB_INCOMPATIBLE_WITH_TABLESPACE\";\nexports[4025] = \"ER_INNODB_AUTOEXTEND_SIZE_OUT_OF_RANGE\";\nexports[4026] = \"ER_CANNOT_USE_AUTOEXTEND_SIZE_CLAUSE\";\nexports[4027] = \"ER_ROLE_GRANTED_TO_ITSELF\";\nexports[4028] = \"ER_TABLE_MUST_HAVE_A_VISIBLE_COLUMN\";\nexports[4029] = \"ER_INNODB_COMPRESSION_FAILURE\";\nexports[4030] = \"ER_WARN_ASYNC_CONN_FAILOVER_NETWORK_NAMESPACE\";\nexports[4031] = \"ER_CLIENT_INTERACTION_TIMEOUT\";\nexports[4032] = \"ER_INVALID_CAST_TO_GEOMETRY\";\nexports[4033] = \"ER_INVALID_CAST_POLYGON_RING_DIRECTION\";\nexports[4034] = \"ER_GIS_DIFFERENT_SRIDS_AGGREGATION\";\nexports[4035] = \"ER_RELOAD_KEYRING_FAILURE\";\nexports[4036] = \"ER_SDI_GET_KEYS_INVALID_TABLESPACE\";\nexports[4037] = \"ER_CHANGE_RPL_SRC_WRONG_COMPRESSION_ALGORITHM_SIZE\";\nexports[4038] = \"ER_WARN_DEPRECATED_TLS_VERSION_FOR_CHANNEL_CLI\";\nexports[4039] = \"ER_CANT_USE_SAME_UUID_AS_VIEW_CHANGE_UUID\";\nexports[4040] = \"ER_ANONYMOUS_TO_GTID_UUID_SAME_AS_VIEW_CHANGE_UUID\";\nexports[4041] = \"ER_GRP_RPL_VIEW_CHANGE_UUID_FAIL_GET_VARIABLE\";\nexports[4042] = \"ER_WARN_ADUIT_LOG_MAX_SIZE_AND_PRUNE_SECONDS\";\nexports[4043] = \"ER_WARN_ADUIT_LOG_MAX_SIZE_CLOSE_TO_ROTATE_ON_SIZE\";\nexports[4044] = \"ER_KERBEROS_CREATE_USER\";\nexports[4045] = \"ER_INSTALL_PLUGIN_CONFLICT_CLIENT\";\nexports[4046] = \"ER_DA_ERROR_LOG_COMPONENT_FLUSH_FAILED\";\nexports[4047] = \"ER_WARN_SQL_AFTER_MTS_GAPS_GAP_NOT_CALCULATED\";\nexports[4048] = \"ER_INVALID_ASSIGNMENT_TARGET\";\nexports[4049] = \"ER_OPERATION_NOT_ALLOWED_ON_GR_SECONDARY\";\nexports[4050] = \"ER_GRP_RPL_FAILOVER_CHANNEL_STATUS_PROPAGATION\";\nexports[4051] = \"ER_WARN_AUDIT_LOG_FORMAT_UNIX_TIMESTAMP_ONLY_WHEN_JSON\";\nexports[4052] = \"ER_INVALID_MFA_PLUGIN_SPECIFIED\";\nexports[4053] = \"ER_IDENTIFIED_BY_UNSUPPORTED\";\nexports[4054] = \"ER_INVALID_PLUGIN_FOR_REGISTRATION\";\nexports[4055] = \"ER_PLUGIN_REQUIRES_REGISTRATION\";\nexports[4056] = \"ER_MFA_METHOD_EXISTS\";\nexports[4057] = \"ER_MFA_METHOD_NOT_EXISTS\";\nexports[4058] = \"ER_AUTHENTICATION_POLICY_MISMATCH\";\nexports[4059] = \"ER_PLUGIN_REGISTRATION_DONE\";\nexports[4060] = \"ER_INVALID_USER_FOR_REGISTRATION\";\nexports[4061] = \"ER_USER_REGISTRATION_FAILED\";\nexports[4062] = \"ER_MFA_METHODS_INVALID_ORDER\";\nexports[4063] = \"ER_MFA_METHODS_IDENTICAL\";\nexports[4064] = \"ER_INVALID_MFA_OPERATIONS_FOR_PASSWORDLESS_USER\";\nexports[4065] = \"ER_CHANGE_REPLICATION_SOURCE_NO_OPTIONS_FOR_GTID_ONLY\";\nexports[4066] = \"ER_CHANGE_REP_SOURCE_CANT_DISABLE_REQ_ROW_FORMAT_WITH_GTID_ONLY\";\nexports[4067] = \"ER_CHANGE_REP_SOURCE_CANT_DISABLE_AUTO_POSITION_WITH_GTID_ONLY\";\nexports[4068] = \"ER_CHANGE_REP_SOURCE_CANT_DISABLE_GTID_ONLY_WITHOUT_POSITIONS\";\nexports[4069] = \"ER_CHANGE_REP_SOURCE_CANT_DISABLE_AUTO_POS_WITHOUT_POSITIONS\";\nexports[4070] = \"ER_CHANGE_REP_SOURCE_GR_CHANNEL_WITH_GTID_MODE_NOT_ON\";\nexports[4071] = \"ER_CANT_USE_GTID_ONLY_WITH_GTID_MODE_NOT_ON\";\nexports[4072] = \"ER_WARN_C_DISABLE_GTID_ONLY_WITH_SOURCE_AUTO_POS_INVALID_POS\";\nexports[4073] = \"ER_DA_SSL_FIPS_MODE_ERROR\";\nexports[4074] = \"ER_VALUE_OUT_OF_RANGE\";\nexports[4075] = \"ER_FULLTEXT_WITH_ROLLUP\";\nexports[4076] = \"ER_REGEXP_MISSING_RESOURCE\";\nexports[4077] = \"ER_WARN_REGEXP_USING_DEFAULT\";\nexports[4078] = \"ER_REGEXP_MISSING_FILE\";\nexports[4079] = \"ER_WARN_DEPRECATED_COLLATION\";\nexports[4080] = \"ER_CONCURRENT_PROCEDURE_USAGE\";\nexports[4081] = \"ER_DA_GLOBAL_CONN_LIMIT\";\nexports[4082] = \"ER_DA_CONN_LIMIT\";\nexports[4083] = \"ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COLUMN_TYPE_INSTANT\";\nexports[4084] = \"ER_WARN_SF_UDF_NAME_COLLISION\";\nexports[4085] = \"ER_CANNOT_PURGE_BINLOG_WITH_BACKUP_LOCK\";\nexports[4086] = \"ER_TOO_MANY_WINDOWS\";\nexports[4087] = \"ER_MYSQLBACKUP_CLIENT_MSG\";\nexports[4088] = \"ER_COMMENT_CONTAINS_INVALID_STRING\";\nexports[4089] = \"ER_DEFINITION_CONTAINS_INVALID_STRING\";\nexports[4090] = \"ER_CANT_EXECUTE_COMMAND_WITH_ASSIGNED_GTID_NEXT\";\nexports[4091] = \"ER_XA_TEMP_TABLE\";\nexports[4092] = \"ER_INNODB_MAX_ROW_VERSION\";\nexports[4093] = \"ER_INNODB_INSTANT_ADD_NOT_SUPPORTED_MAX_SIZE\";\nexports[4094] = \"ER_OPERATION_NOT_ALLOWED_WHILE_PRIMARY_CHANGE_IS_RUNNING\";\nexports[4095] = \"ER_WARN_DEPRECATED_DATETIME_DELIMITER\";\nexports[4096] = \"ER_WARN_DEPRECATED_SUPERFLUOUS_DELIMITER\";\nexports[4097] = \"ER_CANNOT_PERSIST_SENSITIVE_VARIABLES\";\nexports[4098] = \"ER_WARN_CANNOT_SECURELY_PERSIST_SENSITIVE_VARIABLES\";\nexports[4099] = \"ER_WARN_TRG_ALREADY_EXISTS\";\nexports[4100] = \"ER_IF_NOT_EXISTS_UNSUPPORTED_TRG_EXISTS_ON_DIFFERENT_TABLE\";\nexports[4101] = \"ER_IF_NOT_EXISTS_UNSUPPORTED_UDF_NATIVE_FCT_NAME_COLLISION\";\nexports[4102] = \"ER_SET_PASSWORD_AUTH_PLUGIN_ERROR\";\nexports[4103] = \"ER_REDUCED_DBLWR_FILE_CORRUPTED\";\nexports[4104] = \"ER_REDUCED_DBLWR_PAGE_FOUND\";\nexports[4105] = \"ER_SRS_INVALID_LATITUDE_OF_ORIGIN\";\nexports[4106] = \"ER_SRS_INVALID_LONGITUDE_OF_ORIGIN\";\nexports[4107] = \"ER_SRS_UNUSED_PROJ_PARAMETER_PRESENT\";\nexports[4108] = \"ER_GIPK_COLUMN_EXISTS\";\nexports[4109] = \"ER_GIPK_FAILED_AUTOINC_COLUMN_EXISTS\";\nexports[4110] = \"ER_GIPK_COLUMN_ALTER_NOT_ALLOWED\";\nexports[4111] = \"ER_DROP_PK_COLUMN_TO_DROP_GIPK\";\nexports[4112] = \"ER_CREATE_SELECT_WITH_GIPK_DISALLOWED_IN_SBR\";\nexports[4113] = \"ER_DA_EXPIRE_LOGS_DAYS_IGNORED\";\nexports[4114] = \"ER_CTE_RECURSIVE_NOT_UNION\";\nexports[4115] = \"ER_COMMAND_BACKEND_FAILED_TO_FETCH_SECURITY_CTX\";\nexports[4116] = \"ER_COMMAND_SERVICE_BACKEND_FAILED\";\nexports[4117] = \"ER_CLIENT_FILE_PRIVILEGE_FOR_REPLICATION_CHECKS\";\nexports[4118] = \"ER_GROUP_REPLICATION_FORCE_MEMBERS_COMMAND_FAILURE\";\nexports[4119] = \"ER_WARN_DEPRECATED_IDENT\";\nexports[4120] = \"ER_INTERSECT_ALL_MAX_DUPLICATES_EXCEEDED\";\nexports[4121] = \"ER_TP_QUERY_THRS_PER_GRP_EXCEEDS_TXN_THR_LIMIT\";\nexports[4122] = \"ER_BAD_TIMESTAMP_FORMAT\";\nexports[4123] = \"ER_SHAPE_PRIDICTION_UDF\";\nexports[4124] = \"ER_SRS_INVALID_HEIGHT\";\nexports[4125] = \"ER_SRS_INVALID_SCALING\";\nexports[4126] = \"ER_SRS_INVALID_ZONE_WIDTH\";\nexports[4127] = \"ER_SRS_INVALID_LATITUDE_POLAR_STERE_VAR_A\";\nexports[4128] = \"ER_WARN_DEPRECATED_CLIENT_NO_SCHEMA_OPTION\";\nexports[4129] = \"ER_TABLE_NOT_EMPTY\";\nexports[4130] = \"ER_TABLE_NO_PRIMARY_KEY\";\nexports[4131] = \"ER_TABLE_IN_SHARED_TABLESPACE\";\nexports[4132] = \"ER_INDEX_OTHER_THAN_PK\";\nexports[4133] = \"ER_LOAD_BULK_DATA_UNSORTED\";\nexports[4134] = \"ER_BULK_EXECUTOR_ERROR\";\nexports[4135] = \"ER_BULK_READER_LIBCURL_INIT_FAILED\";\nexports[4136] = \"ER_BULK_READER_LIBCURL_ERROR\";\nexports[4137] = \"ER_BULK_READER_SERVER_ERROR\";\nexports[4138] = \"ER_BULK_READER_COMMUNICATION_ERROR\";\nexports[4139] = \"ER_BULK_LOAD_DATA_FAILED\";\nexports[4140] = \"ER_BULK_LOADER_COLUMN_TOO_BIG_FOR_LEFTOVER_BUFFER\";\nexports[4141] = \"ER_BULK_LOADER_COMPONENT_ERROR\";\nexports[4142] = \"ER_BULK_LOADER_FILE_CONTAINS_LESS_LINES_THAN_IGNORE_CLAUSE\";\nexports[4143] = \"ER_BULK_PARSER_MISSING_ENCLOSED_BY\";\nexports[4144] = \"ER_BULK_PARSER_ROW_BUFFER_MAX_TOTAL_COLS_EXCEEDED\";\nexports[4145] = \"ER_BULK_PARSER_COPY_BUFFER_SIZE_EXCEEDED\";\nexports[4146] = \"ER_BULK_PARSER_UNEXPECTED_END_OF_INPUT\";\nexports[4147] = \"ER_BULK_PARSER_UNEXPECTED_ROW_TERMINATOR\";\nexports[4148] = \"ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_ENDING_ENCLOSED_BY\";\nexports[4149] = \"ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_NULL_ESCAPE\";\nexports[4150] = \"ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_COLUMN_TERMINATOR\";\nexports[4151] = \"ER_BULK_PARSER_INCOMPLETE_ESCAPE_SEQUENCE\";\nexports[4152] = \"ER_LOAD_BULK_DATA_FAILED\";\nexports[4153] = \"ER_LOAD_BULK_DATA_WRONG_VALUE_FOR_FIELD\";\nexports[4154] = \"ER_LOAD_BULK_DATA_WARN_NULL_TO_NOTNULL\";\nexports[4155] = \"ER_REQUIRE_TABLE_PRIMARY_KEY_CHECK_GENERATE_WITH_GR\";\nexports[4156] = \"ER_CANT_CHANGE_SYS_VAR_IN_READ_ONLY_MODE\";\nexports[4157] = \"ER_INNODB_INSTANT_ADD_DROP_NOT_SUPPORTED_MAX_SIZE\";\nexports[4158] = \"ER_INNODB_INSTANT_ADD_NOT_SUPPORTED_MAX_FIELDS\";\nexports[4159] = \"ER_CANT_SET_PERSISTED\";\nexports[4160] = \"ER_INSTALL_COMPONENT_SET_NULL_VALUE\";\nexports[4161] = \"ER_INSTALL_COMPONENT_SET_UNUSED_VALUE\";\nexports[4162] = \"ER_WARN_DEPRECATED_USER_DEFINED_COLLATIONS\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/field_flags.js":
/*!**********************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/field_flags.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Manually extracted from mysql-5.5.23/include/mysql_com.h\nexports.NOT_NULL = 1; /* Field can't be NULL */ \nexports.PRI_KEY = 2; /* Field is part of a primary key */ \nexports.UNIQUE_KEY = 4; /* Field is part of a unique key */ \nexports.MULTIPLE_KEY = 8; /* Field is part of a key */ \nexports.BLOB = 16; /* Field is a blob */ \nexports.UNSIGNED = 32; /* Field is unsigned */ \nexports.ZEROFILL = 64; /* Field is zerofill */ \nexports.BINARY = 128; /* Field is binary   */ \n/* The following are only sent to new clients */ exports.ENUM = 256; /* field is an enum */ \nexports.AUTO_INCREMENT = 512; /* field is a autoincrement field */ \nexports.TIMESTAMP = 1024; /* Field is a timestamp */ \nexports.SET = 2048; /* field is a set */ \nexports.NO_DEFAULT_VALUE = 4096; /* Field doesn't have default value */ \nexports.ON_UPDATE_NOW = 8192; /* Field is set to NOW on UPDATE */ \nexports.NUM = 32768; /* Field is num (for clients) */ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvZmllbGRfZmxhZ3MuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSwyREFBMkQ7QUFDM0RBLGdCQUFnQixHQUFHLEdBQUcsdUJBQXVCO0FBQzdDQSxlQUFlLEdBQUcsR0FBRyxrQ0FBa0M7QUFDdkRBLGtCQUFrQixHQUFHLEdBQUcsaUNBQWlDO0FBQ3pEQSxvQkFBb0IsR0FBRyxHQUFHLDBCQUEwQjtBQUNwREEsWUFBWSxHQUFHLElBQUksbUJBQW1CO0FBQ3RDQSxnQkFBZ0IsR0FBRyxJQUFJLHFCQUFxQjtBQUM1Q0EsZ0JBQWdCLEdBQUcsSUFBSSxxQkFBcUI7QUFDNUNBLGNBQWMsR0FBRyxLQUFLLHFCQUFxQjtBQUUzQyw4Q0FBOEMsR0FDOUNBLFlBQVksR0FBRyxLQUFLLG9CQUFvQjtBQUN4Q0Esc0JBQXNCLEdBQUcsS0FBSyxrQ0FBa0M7QUFDaEVBLGlCQUFpQixHQUFHLE1BQU0sd0JBQXdCO0FBQ2xEQSxXQUFXLEdBQUcsTUFBTSxrQkFBa0I7QUFDdENBLHdCQUF3QixHQUFHLE1BQU0sb0NBQW9DO0FBQ3JFQSxxQkFBcUIsR0FBRyxNQUFNLGlDQUFpQztBQUMvREEsV0FBVyxHQUFHLE9BQU8sOEJBQThCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWNlZS1wcm90by1vbmUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvZmllbGRfZmxhZ3MuanM/NGVlMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8vIE1hbnVhbGx5IGV4dHJhY3RlZCBmcm9tIG15c3FsLTUuNS4yMy9pbmNsdWRlL215c3FsX2NvbS5oXG5leHBvcnRzLk5PVF9OVUxMID0gMTsgLyogRmllbGQgY2FuJ3QgYmUgTlVMTCAqL1xuZXhwb3J0cy5QUklfS0VZID0gMjsgLyogRmllbGQgaXMgcGFydCBvZiBhIHByaW1hcnkga2V5ICovXG5leHBvcnRzLlVOSVFVRV9LRVkgPSA0OyAvKiBGaWVsZCBpcyBwYXJ0IG9mIGEgdW5pcXVlIGtleSAqL1xuZXhwb3J0cy5NVUxUSVBMRV9LRVkgPSA4OyAvKiBGaWVsZCBpcyBwYXJ0IG9mIGEga2V5ICovXG5leHBvcnRzLkJMT0IgPSAxNjsgLyogRmllbGQgaXMgYSBibG9iICovXG5leHBvcnRzLlVOU0lHTkVEID0gMzI7IC8qIEZpZWxkIGlzIHVuc2lnbmVkICovXG5leHBvcnRzLlpFUk9GSUxMID0gNjQ7IC8qIEZpZWxkIGlzIHplcm9maWxsICovXG5leHBvcnRzLkJJTkFSWSA9IDEyODsgLyogRmllbGQgaXMgYmluYXJ5ICAgKi9cblxuLyogVGhlIGZvbGxvd2luZyBhcmUgb25seSBzZW50IHRvIG5ldyBjbGllbnRzICovXG5leHBvcnRzLkVOVU0gPSAyNTY7IC8qIGZpZWxkIGlzIGFuIGVudW0gKi9cbmV4cG9ydHMuQVVUT19JTkNSRU1FTlQgPSA1MTI7IC8qIGZpZWxkIGlzIGEgYXV0b2luY3JlbWVudCBmaWVsZCAqL1xuZXhwb3J0cy5USU1FU1RBTVAgPSAxMDI0OyAvKiBGaWVsZCBpcyBhIHRpbWVzdGFtcCAqL1xuZXhwb3J0cy5TRVQgPSAyMDQ4OyAvKiBmaWVsZCBpcyBhIHNldCAqL1xuZXhwb3J0cy5OT19ERUZBVUxUX1ZBTFVFID0gNDA5NjsgLyogRmllbGQgZG9lc24ndCBoYXZlIGRlZmF1bHQgdmFsdWUgKi9cbmV4cG9ydHMuT05fVVBEQVRFX05PVyA9IDgxOTI7IC8qIEZpZWxkIGlzIHNldCB0byBOT1cgb24gVVBEQVRFICovXG5leHBvcnRzLk5VTSA9IDMyNzY4OyAvKiBGaWVsZCBpcyBudW0gKGZvciBjbGllbnRzKSAqL1xuIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJOT1RfTlVMTCIsIlBSSV9LRVkiLCJVTklRVUVfS0VZIiwiTVVMVElQTEVfS0VZIiwiQkxPQiIsIlVOU0lHTkVEIiwiWkVST0ZJTEwiLCJCSU5BUlkiLCJFTlVNIiwiQVVUT19JTkNSRU1FTlQiLCJUSU1FU1RBTVAiLCJTRVQiLCJOT19ERUZBVUxUX1ZBTFVFIiwiT05fVVBEQVRFX05PVyIsIk5VTSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/field_flags.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/server_status.js":
/*!************************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/server_status.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Manually extracted from mysql-5.5.23/include/mysql_com.h\n/**\n  Is raised when a multi-statement transaction\n  has been started, either explicitly, by means\n  of BEGIN or COMMIT AND CHAIN, or\n  implicitly, by the first transactional\n  statement, when autocommit=off.\n*/ exports.SERVER_STATUS_IN_TRANS = 1;\nexports.SERVER_STATUS_AUTOCOMMIT = 2; /* Server in auto_commit mode */ \nexports.SERVER_MORE_RESULTS_EXISTS = 8; /* Multi query - next query exists */ \nexports.SERVER_QUERY_NO_GOOD_INDEX_USED = 16;\nexports.SERVER_QUERY_NO_INDEX_USED = 32;\n/**\n  The server was able to fulfill the clients request and opened a\n  read-only non-scrollable cursor for a query. This flag comes\n  in reply to COM_STMT_EXECUTE and COM_STMT_FETCH commands.\n*/ exports.SERVER_STATUS_CURSOR_EXISTS = 64;\n/**\n  This flag is sent when a read-only cursor is exhausted, in reply to\n  COM_STMT_FETCH command.\n*/ exports.SERVER_STATUS_LAST_ROW_SENT = 128;\nexports.SERVER_STATUS_DB_DROPPED = 256; /* A database was dropped */ \nexports.SERVER_STATUS_NO_BACKSLASH_ESCAPES = 512;\n/**\n  Sent to the client if after a prepared statement reprepare\n  we discovered that the new statement returns a different\n  number of result set columns.\n*/ exports.SERVER_STATUS_METADATA_CHANGED = 1024;\nexports.SERVER_QUERY_WAS_SLOW = 2048;\n/**\n  To mark ResultSet containing output parameter values.\n*/ exports.SERVER_PS_OUT_PARAMS = 4096;\nexports.SERVER_STATUS_IN_TRANS_READONLY = 0x2000; // in a read-only transaction\nexports.SERVER_SESSION_STATE_CHANGED = 0x4000;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvc2VydmVyX3N0YXR1cy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLDJEQUEyRDtBQUUzRDs7Ozs7O0FBTUEsR0FDQUEsOEJBQThCLEdBQUc7QUFDakNBLGdDQUFnQyxHQUFHLEdBQUcsOEJBQThCO0FBQ3BFQSxrQ0FBa0MsR0FBRyxHQUFHLG1DQUFtQztBQUMzRUEsdUNBQXVDLEdBQUc7QUFDMUNBLGtDQUFrQyxHQUFHO0FBQ3JDOzs7O0FBSUEsR0FDQUEsbUNBQW1DLEdBQUc7QUFDdEM7OztBQUdBLEdBQ0FBLG1DQUFtQyxHQUFHO0FBQ3RDQSxnQ0FBZ0MsR0FBRyxLQUFLLDBCQUEwQjtBQUNsRUEsMENBQTBDLEdBQUc7QUFDN0M7Ozs7QUFJQSxHQUNBQSxzQ0FBc0MsR0FBRztBQUN6Q0EsNkJBQTZCLEdBQUc7QUFFaEM7O0FBRUEsR0FDQUEsNEJBQTRCLEdBQUc7QUFFL0JBLHVDQUF1QyxHQUFHLFFBQVEsNkJBQTZCO0FBQy9FQSxvQ0FBb0MsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL2FjZWUtcHJvdG8tb25lLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29uc3RhbnRzL3NlcnZlcl9zdGF0dXMuanM/M2Y1NyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8vIE1hbnVhbGx5IGV4dHJhY3RlZCBmcm9tIG15c3FsLTUuNS4yMy9pbmNsdWRlL215c3FsX2NvbS5oXG5cbi8qKlxuICBJcyByYWlzZWQgd2hlbiBhIG11bHRpLXN0YXRlbWVudCB0cmFuc2FjdGlvblxuICBoYXMgYmVlbiBzdGFydGVkLCBlaXRoZXIgZXhwbGljaXRseSwgYnkgbWVhbnNcbiAgb2YgQkVHSU4gb3IgQ09NTUlUIEFORCBDSEFJTiwgb3JcbiAgaW1wbGljaXRseSwgYnkgdGhlIGZpcnN0IHRyYW5zYWN0aW9uYWxcbiAgc3RhdGVtZW50LCB3aGVuIGF1dG9jb21taXQ9b2ZmLlxuKi9cbmV4cG9ydHMuU0VSVkVSX1NUQVRVU19JTl9UUkFOUyA9IDE7XG5leHBvcnRzLlNFUlZFUl9TVEFUVVNfQVVUT0NPTU1JVCA9IDI7IC8qIFNlcnZlciBpbiBhdXRvX2NvbW1pdCBtb2RlICovXG5leHBvcnRzLlNFUlZFUl9NT1JFX1JFU1VMVFNfRVhJU1RTID0gODsgLyogTXVsdGkgcXVlcnkgLSBuZXh0IHF1ZXJ5IGV4aXN0cyAqL1xuZXhwb3J0cy5TRVJWRVJfUVVFUllfTk9fR09PRF9JTkRFWF9VU0VEID0gMTY7XG5leHBvcnRzLlNFUlZFUl9RVUVSWV9OT19JTkRFWF9VU0VEID0gMzI7XG4vKipcbiAgVGhlIHNlcnZlciB3YXMgYWJsZSB0byBmdWxmaWxsIHRoZSBjbGllbnRzIHJlcXVlc3QgYW5kIG9wZW5lZCBhXG4gIHJlYWQtb25seSBub24tc2Nyb2xsYWJsZSBjdXJzb3IgZm9yIGEgcXVlcnkuIFRoaXMgZmxhZyBjb21lc1xuICBpbiByZXBseSB0byBDT01fU1RNVF9FWEVDVVRFIGFuZCBDT01fU1RNVF9GRVRDSCBjb21tYW5kcy5cbiovXG5leHBvcnRzLlNFUlZFUl9TVEFUVVNfQ1VSU09SX0VYSVNUUyA9IDY0O1xuLyoqXG4gIFRoaXMgZmxhZyBpcyBzZW50IHdoZW4gYSByZWFkLW9ubHkgY3Vyc29yIGlzIGV4aGF1c3RlZCwgaW4gcmVwbHkgdG9cbiAgQ09NX1NUTVRfRkVUQ0ggY29tbWFuZC5cbiovXG5leHBvcnRzLlNFUlZFUl9TVEFUVVNfTEFTVF9ST1dfU0VOVCA9IDEyODtcbmV4cG9ydHMuU0VSVkVSX1NUQVRVU19EQl9EUk9QUEVEID0gMjU2OyAvKiBBIGRhdGFiYXNlIHdhcyBkcm9wcGVkICovXG5leHBvcnRzLlNFUlZFUl9TVEFUVVNfTk9fQkFDS1NMQVNIX0VTQ0FQRVMgPSA1MTI7XG4vKipcbiAgU2VudCB0byB0aGUgY2xpZW50IGlmIGFmdGVyIGEgcHJlcGFyZWQgc3RhdGVtZW50IHJlcHJlcGFyZVxuICB3ZSBkaXNjb3ZlcmVkIHRoYXQgdGhlIG5ldyBzdGF0ZW1lbnQgcmV0dXJucyBhIGRpZmZlcmVudFxuICBudW1iZXIgb2YgcmVzdWx0IHNldCBjb2x1bW5zLlxuKi9cbmV4cG9ydHMuU0VSVkVSX1NUQVRVU19NRVRBREFUQV9DSEFOR0VEID0gMTAyNDtcbmV4cG9ydHMuU0VSVkVSX1FVRVJZX1dBU19TTE9XID0gMjA0ODtcblxuLyoqXG4gIFRvIG1hcmsgUmVzdWx0U2V0IGNvbnRhaW5pbmcgb3V0cHV0IHBhcmFtZXRlciB2YWx1ZXMuXG4qL1xuZXhwb3J0cy5TRVJWRVJfUFNfT1VUX1BBUkFNUyA9IDQwOTY7XG5cbmV4cG9ydHMuU0VSVkVSX1NUQVRVU19JTl9UUkFOU19SRUFET05MWSA9IDB4MjAwMDsgLy8gaW4gYSByZWFkLW9ubHkgdHJhbnNhY3Rpb25cbmV4cG9ydHMuU0VSVkVSX1NFU1NJT05fU1RBVEVfQ0hBTkdFRCA9IDB4NDAwMDtcbiJdLCJuYW1lcyI6WyJleHBvcnRzIiwiU0VSVkVSX1NUQVRVU19JTl9UUkFOUyIsIlNFUlZFUl9TVEFUVVNfQVVUT0NPTU1JVCIsIlNFUlZFUl9NT1JFX1JFU1VMVFNfRVhJU1RTIiwiU0VSVkVSX1FVRVJZX05PX0dPT0RfSU5ERVhfVVNFRCIsIlNFUlZFUl9RVUVSWV9OT19JTkRFWF9VU0VEIiwiU0VSVkVSX1NUQVRVU19DVVJTT1JfRVhJU1RTIiwiU0VSVkVSX1NUQVRVU19MQVNUX1JPV19TRU5UIiwiU0VSVkVSX1NUQVRVU19EQl9EUk9QUEVEIiwiU0VSVkVSX1NUQVRVU19OT19CQUNLU0xBU0hfRVNDQVBFUyIsIlNFUlZFUl9TVEFUVVNfTUVUQURBVEFfQ0hBTkdFRCIsIlNFUlZFUl9RVUVSWV9XQVNfU0xPVyIsIlNFUlZFUl9QU19PVVRfUEFSQU1TIiwiU0VSVkVSX1NUQVRVU19JTl9UUkFOU19SRUFET05MWSIsIlNFUlZFUl9TRVNTSU9OX1NUQVRFX0NIQU5HRUQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/server_status.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/session_track.js":
/*!************************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/session_track.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.SYSTEM_VARIABLES = 0;\nexports.SCHEMA = 1;\nexports.STATE_CHANGE = 2;\nexports.STATE_GTIDS = 3;\nexports.TRANSACTION_CHARACTERISTICS = 4;\nexports.TRANSACTION_STATE = 5;\nexports.FIRST_KEY = exports.SYSTEM_VARIABLES;\nexports.LAST_KEY = exports.TRANSACTION_STATE;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvc2Vzc2lvbl90cmFjay5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSx3QkFBd0IsR0FBRztBQUMzQkEsY0FBYyxHQUFHO0FBQ2pCQSxvQkFBb0IsR0FBRztBQUN2QkEsbUJBQW1CLEdBQUc7QUFDdEJBLG1DQUFtQyxHQUFHO0FBQ3RDQSx5QkFBeUIsR0FBRztBQUU1QkEsaUJBQWlCLEdBQUdBLFFBQVFDLGdCQUFnQjtBQUM1Q0QsZ0JBQWdCLEdBQUdBLFFBQVFNLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL2FjZWUtcHJvdG8tb25lLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29uc3RhbnRzL3Nlc3Npb25fdHJhY2suanM/OGZmYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuU1lTVEVNX1ZBUklBQkxFUyA9IDA7XG5leHBvcnRzLlNDSEVNQSA9IDE7XG5leHBvcnRzLlNUQVRFX0NIQU5HRSA9IDI7XG5leHBvcnRzLlNUQVRFX0dUSURTID0gMztcbmV4cG9ydHMuVFJBTlNBQ1RJT05fQ0hBUkFDVEVSSVNUSUNTID0gNDtcbmV4cG9ydHMuVFJBTlNBQ1RJT05fU1RBVEUgPSA1O1xuXG5leHBvcnRzLkZJUlNUX0tFWSA9IGV4cG9ydHMuU1lTVEVNX1ZBUklBQkxFUztcbmV4cG9ydHMuTEFTVF9LRVkgPSBleHBvcnRzLlRSQU5TQUNUSU9OX1NUQVRFO1xuIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJTWVNURU1fVkFSSUFCTEVTIiwiU0NIRU1BIiwiU1RBVEVfQ0hBTkdFIiwiU1RBVEVfR1RJRFMiLCJUUkFOU0FDVElPTl9DSEFSQUNURVJJU1RJQ1MiLCJUUkFOU0FDVElPTl9TVEFURSIsIkZJUlNUX0tFWSIsIkxBU1RfS0VZIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/session_track.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/ssl_profiles.js":
/*!***********************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/ssl_profiles.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Certificate for Amazon RDS (Updated for 2019)\n// https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html\n// https://docs.amazonaws.cn/en_us/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html\n// https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.tls\nexports[\"Amazon RDS\"] = {\n    ca: [\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIID9DCCAtygAwIBAgIBQjANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n\" + \"EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n\" + \"GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n\" + \"GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUwOTExMzFaFw0y\\n\" + \"MDAzMDUwOTExMzFaMIGKMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n\" + \"bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n\" + \"cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEbMBkGA1UEAwwSQW1hem9uIFJE\\n\" + \"UyBSb290IENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuD8nrZ8V\\n\" + \"u+VA8yVlUipCZIKPTDcOILYpUe8Tct0YeQQr0uyl018StdBsa3CjBgvwpDRq1HgF\\n\" + \"Ji2N3+39+shCNspQeE6aYU+BHXhKhIIStt3r7gl/4NqYiDDMWKHxHq0nsGDFfArf\\n\" + \"AOcjZdJagOMqb3fF46flc8k2E7THTm9Sz4L7RY1WdABMuurpICLFE3oHcGdapOb9\\n\" + \"T53pQR+xpHW9atkcf3pf7gbO0rlKVSIoUenBlZipUlp1VZl/OD/E+TtRhDDNdI2J\\n\" + \"P/DSMM3aEsq6ZQkfbz/Ilml+Lx3tJYXUDmp+ZjzMPLk/+3beT8EhrwtcG3VPpvwp\\n\" + \"BIOqsqVVTvw/CwIDAQABo2MwYTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUw\\n\" + \"AwEB/zAdBgNVHQ4EFgQUTgLurD72FchM7Sz1BcGPnIQISYMwHwYDVR0jBBgwFoAU\\n\" + \"TgLurD72FchM7Sz1BcGPnIQISYMwDQYJKoZIhvcNAQEFBQADggEBAHZcgIio8pAm\\n\" + \"MjHD5cl6wKjXxScXKtXygWH2BoDMYBJF9yfyKO2jEFxYKbHePpnXB1R04zJSWAw5\\n\" + \"2EUuDI1pSBh9BA82/5PkuNlNeSTB3dXDD2PEPdzVWbSKvUB8ZdooV+2vngL0Zm4r\\n\" + \"47QPyd18yPHrRIbtBtHR/6CwKevLZ394zgExqhnekYKIqqEX41xsUV0Gm6x4vpjf\\n\" + \"2u6O/+YE2U+qyyxHE5Wd5oqde0oo9UUpFETJPVb6Q2cEeQib8PBAyi0i6KnF+kIV\\n\" + \"A9dY7IHSubtCK/i8wxMVqfd5GtbA8mmpeJFwnDvm9rBEsHybl08qlax9syEwsUYr\\n\" + \"/40NawZfTUU=\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEATCCAumgAwIBAgIBRDANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n\" + \"EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n\" + \"GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n\" + \"GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzMDZaFw0y\\n\" + \"MDAzMDUyMjAzMDZaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n\" + \"bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n\" + \"cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1hem9uIFJE\\n\" + \"UyBhcC1ub3J0aGVhc3QtMSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\\n\" + \"ggEBAMmM2B4PfTXCZjbZMWiDPyxvk/eeNwIRJAhfzesiGUiLozX6CRy3rwC1ZOPV\\n\" + \"AcQf0LB+O8wY88C/cV+d4Q2nBDmnk+Vx7o2MyMh343r5rR3Na+4izd89tkQVt0WW\\n\" + \"vO21KRH5i8EuBjinboOwAwu6IJ+HyiQiM0VjgjrmEr/YzFPL8MgHD/YUHehqjACn\\n\" + \"C0+B7/gu7W4qJzBL2DOf7ub2qszGtwPE+qQzkCRDwE1A4AJmVE++/FLH2Zx78Egg\\n\" + \"fV1sUxPtYgjGH76VyyO6GNKM6rAUMD/q5mnPASQVIXgKbupr618bnH+SWHFjBqZq\\n\" + \"HvDGPMtiiWII41EmGUypyt5AbysCAwEAAaNmMGQwDgYDVR0PAQH/BAQDAgEGMBIG\\n\" + \"A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFIiKM0Q6n1K4EmLxs3ZXxINbwEwR\\n\" + \"MB8GA1UdIwQYMBaAFE4C7qw+9hXITO0s9QXBj5yECEmDMA0GCSqGSIb3DQEBBQUA\\n\" + \"A4IBAQBezGbE9Rw/k2e25iGjj5n8r+M3dlye8ORfCE/dijHtxqAKasXHgKX8I9Tw\\n\" + \"JkBiGWiuzqn7gO5MJ0nMMro1+gq29qjZnYX1pDHPgsRjUX8R+juRhgJ3JSHijRbf\\n\" + \"4qNJrnwga7pj94MhcLq9u0f6dxH6dXbyMv21T4TZMTmcFduf1KgaiVx1PEyJjC6r\\n\" + \"M+Ru+A0eM+jJ7uCjUoZKcpX8xkj4nmSnz9NMPog3wdOSB9cAW7XIc5mHa656wr7I\\n\" + \"WJxVcYNHTXIjCcng2zMKd1aCcl2KSFfy56sRfT7J5Wp69QSr+jq8KM55gw8uqAwi\\n\" + \"VPrXn2899T1rcTtFYFP16WXjGuc0\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEATCCAumgAwIBAgIBRTANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n\" + \"EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n\" + \"GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n\" + \"GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzMTlaFw0y\\n\" + \"MDAzMDUyMjAzMTlaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n\" + \"bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n\" + \"cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1hem9uIFJE\\n\" + \"UyBhcC1zb3V0aGVhc3QtMSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\\n\" + \"ggEBANaXElmSEYt/UtxHFsARFhSUahTf1KNJzR0Dmay6hqOXQuRVbKRwPd19u5vx\\n\" + \"DdF1sLT7D69IK3VDnUiQScaCv2Dpu9foZt+rLx+cpx1qiQd1UHrvqq8xPzQOqCdC\\n\" + \"RFStq6yVYZ69yfpfoI67AjclMOjl2Vph3ftVnqP0IgVKZdzeC7fd+umGgR9xY0Qr\\n\" + \"Ubhd/lWdsbNvzK3f1TPWcfIKQnpvSt85PIEDJir6/nuJUKMtmJRwTymJf0i+JZ4x\\n\" + \"7dJa341p2kHKcHMgOPW7nJQklGBA70ytjUV6/qebS3yIugr/28mwReflg3TJzVDl\\n\" + \"EOvi6pqbqNbkMuEwGDCmEQIVqgkCAwEAAaNmMGQwDgYDVR0PAQH/BAQDAgEGMBIG\\n\" + \"A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFAu93/4k5xbWOsgdCdn+/KdiRuit\\n\" + \"MB8GA1UdIwQYMBaAFE4C7qw+9hXITO0s9QXBj5yECEmDMA0GCSqGSIb3DQEBBQUA\\n\" + \"A4IBAQBlcjSyscpPjf5+MgzMuAsCxByqUt+WFspwcMCpwdaBeHOPSQrXNqX2Sk6P\\n\" + \"kth6oCivA64trWo8tFMvPYlUA1FYVD5WpN0kCK+P5pD4KHlaDsXhuhClJzp/OP8t\\n\" + \"pOyUr5109RHLxqoKB5J5m1XA7rgcFjnMxwBSWFe3/4uMk/+4T53YfCVXuc6QV3i7\\n\" + \"I/2LAJwFf//pTtt6fZenYfCsahnr2nvrNRNyAxcfvGZ/4Opn/mJtR6R/AjvQZHiR\\n\" + \"bkRNKF2GW0ueK5W4FkZVZVhhX9xh1Aj2Ollb+lbOqADaVj+AT3PoJPZ3MPQHKCXm\\n\" + \"xwG0LOLlRr/TfD6li1AfOVTAJXv9\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEATCCAumgAwIBAgIBRjANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n\" + \"EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n\" + \"GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n\" + \"GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzMjRaFw0y\\n\" + \"MDAzMDUyMjAzMjRaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n\" + \"bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n\" + \"cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1hem9uIFJE\\n\" + \"UyBhcC1zb3V0aGVhc3QtMiBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\\n\" + \"ggEBAJqBAJutz69hFOh3BtLHZTbwE8eejGGKayn9hu98YMDPzWzGXWCmW+ZYWELA\\n\" + \"cY3cNWNF8K4FqKXFr2ssorBYim1UtYFX8yhydT2hMD5zgQ2sCGUpuidijuPA6zaq\\n\" + \"Z3tdhVR94f0q8mpwpv2zqR9PcqaGDx2VR1x773FupRPRo7mEW1vC3IptHCQlP/zE\\n\" + \"7jQiLl28bDIH2567xg7e7E9WnZToRnhlYdTaDaJsHTzi5mwILi4cihSok7Shv/ME\\n\" + \"hnukvxeSPUpaVtFaBhfBqq055ePq9I+Ns4KGreTKMhU0O9fkkaBaBmPaFgmeX/XO\\n\" + \"n2AX7gMouo3mtv34iDTZ0h6YCGkCAwEAAaNmMGQwDgYDVR0PAQH/BAQDAgEGMBIG\\n\" + \"A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFIlQnY0KHYWn1jYumSdJYfwj/Nfw\\n\" + \"MB8GA1UdIwQYMBaAFE4C7qw+9hXITO0s9QXBj5yECEmDMA0GCSqGSIb3DQEBBQUA\\n\" + \"A4IBAQA0wVU6/l41cTzHc4azc4CDYY2Wd90DFWiH9C/mw0SgToYfCJ/5Cfi0NT/Y\\n\" + \"PRnk3GchychCJgoPA/k9d0//IhYEAIiIDjyFVgjbTkKV3sh4RbdldKVOUB9kumz/\\n\" + \"ZpShplsGt3z4QQiVnKfrAgqxWDjR0I0pQKkxXa6Sjkicos9LQxVtJ0XA4ieG1E7z\\n\" + \"zJr+6t80wmzxvkInSaWP3xNJK9azVRTrgQZQlvkbpDbExl4mNTG66VD3bAp6t3Wa\\n\" + \"B49//uDdfZmPkqqbX+hsxp160OH0rxJppwO3Bh869PkDnaPEd/Pxw7PawC+li0gi\\n\" + \"NRV8iCEx85aFxcyOhqn0WZOasxee\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIID/zCCAuegAwIBAgIBRzANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n\" + \"EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n\" + \"GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n\" + \"GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzMzFaFw0y\\n\" + \"MDAzMDUyMjAzMzFaMIGSMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n\" + \"bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n\" + \"cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEjMCEGA1UEAwwaQW1hem9uIFJE\\n\" + \"UyBldS1jZW50cmFsLTEgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\\n\" + \"AQDFtP2dhSLuaPOI4ZrrPWsK4OY9ocQBp3yApH1KJYmI9wpQKZG/KCH2E6Oo7JAw\\n\" + \"QORU519r033T+FO2Z7pFPlmz1yrxGXyHpJs8ySx3Yo5S8ncDCdZJCLmtPiq/hahg\\n\" + \"5/0ffexMFUCQaYicFZsrJ/cStdxUV+tSw2JQLD7UxS9J97LQWUPyyG+ZrjYVTVq+\\n\" + \"zudnFmNSe4QoecXMhAFTGJFQXxP7nhSL9Ao5FGgdXy7/JWeWdQIAj8ku6cBDKPa6\\n\" + \"Y6kP+ak+In+Lye8z9qsCD/afUozfWjPR2aA4JoIZVF8dNRShIMo8l0XfgfM2q0+n\\n\" + \"ApZWZ+BjhIO5XuoUgHS3D2YFAgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNV\\n\" + \"HRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBRm4GsWIA/M6q+tK8WGHWDGh2gcyTAf\\n\" + \"BgNVHSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQUFAAOC\\n\" + \"AQEAHpMmeVQNqcxgfQdbDIi5UIy+E7zZykmtAygN1XQrvga9nXTis4kOTN6g5/+g\\n\" + \"HCx7jIXeNJzAbvg8XFqBN84Quqgpl/tQkbpco9Jh1HDs558D5NnZQxNqH5qXQ3Mm\\n\" + \"uPgCw0pYcPOa7bhs07i+MdVwPBsX27CFDtsgAIru8HvKxY1oTZrWnyIRo93tt/pk\\n\" + \"WuItVMVHjaQZVfTCow0aDUbte6Vlw82KjUFq+n2NMSCJDiDKsDDHT6BJc4AJHIq3\\n\" + \"/4Z52MSC9KMr0yAaaoWfW/yMEj9LliQauAgwVjArF4q78rxpfKTG9Rfd8U1BZANP\\n\" + \"7FrFMN0ThjfA1IvmOYcgskY5bQ==\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIID/DCCAuSgAwIBAgIBSDANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n\" + \"EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n\" + \"GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n\" + \"GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzMzVaFw0y\\n\" + \"MDAzMDUyMjAzMzVaMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n\" + \"bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n\" + \"cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJE\\n\" + \"UyBldS13ZXN0LTEgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCx\\n\" + \"PdbqQ0HKRj79Pmocxvjc+P6i4Ux24kgFIl+ckiir1vzkmesc3a58gjrMlCksEObt\\n\" + \"Yihs5IhzEq1ePT0gbfS9GYFp34Uj/MtPwlrfCBWG4d2TcrsKRHr1/EXUYhWqmdrb\\n\" + \"RhX8XqoRhVkbF/auzFSBhTzcGGvZpQ2KIaxRcQfcXlMVhj/pxxAjh8U4F350Fb0h\\n\" + \"nX1jw4/KvEreBL0Xb2lnlGTkwVxaKGSgXEnOgIyOFdOQc61vdome0+eeZsP4jqeR\\n\" + \"TGYJA9izJsRbe2YJxHuazD+548hsPlM3vFzKKEVURCha466rAaYAHy3rKur3HYQx\\n\" + \"Yt+SoKcEz9PXuSGj96ejAgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\\n\" + \"Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBTebg//h2oeXbZjQ4uuoiuLYzuiPDAfBgNV\\n\" + \"HSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQUFAAOCAQEA\\n\" + \"TikPaGeZasTPw+4RBemlsyPAjtFFQLo7ddaFdORLgdEysVf8aBqndvbA6MT/v4lj\\n\" + \"GtEtUdF59ZcbWOrVm+fBZ2h/jYJ59dYF/xzb09nyRbdMSzB9+mkSsnOMqluq5y8o\\n\" + \"DY/PfP2vGhEg/2ZncRC7nlQU1Dm8F4lFWEiQ2fi7O1cW852Vmbq61RIfcYsH/9Ma\\n\" + \"kpgk10VZ75b8m3UhmpZ/2uRY+JEHImH5WpcTJ7wNiPNJsciZMznGtrgOnPzYco8L\\n\" + \"cDleOASIZifNMQi9PKOJKvi0ITz0B/imr8KBsW0YjZVJ54HMa7W1lwugSM7aMAs+\\n\" + \"E3Sd5lS+SHwWaOCHwhOEVA==\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIID/DCCAuSgAwIBAgIBSTANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n\" + \"EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n\" + \"GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n\" + \"GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzNDBaFw0y\\n\" + \"MDAzMDUyMjAzNDBaMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n\" + \"bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n\" + \"cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJE\\n\" + \"UyBzYS1lYXN0LTEgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCU\\n\" + \"X4OBnQ5xA6TLJAiFEI6l7bUWjoVJBa/VbMdCCSs2i2dOKmqUaXu2ix2zcPILj3lZ\\n\" + \"GMk3d/2zvTK/cKhcFrewHUBamTeVHdEmynhMQamqNmkM4ptYzFcvEUw1TGxHT4pV\\n\" + \"Q6gSN7+/AJewQvyHexHo8D0+LDN0/Wa9mRm4ixCYH2CyYYJNKaZt9+EZfNu+PPS4\\n\" + \"8iB0TWH0DgQkbWMBfCRgolLLitAZklZ4dvdlEBS7evN1/7ttBxUK6SvkeeSx3zBl\\n\" + \"ww3BlXqc3bvTQL0A+RRysaVyFbvtp9domFaDKZCpMmDFAN/ntx215xmQdrSt+K3F\\n\" + \"cXdGQYHx5q410CAclGnbAgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\\n\" + \"Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBT6iVWnm/uakS+tEX2mzIfw+8JL0zAfBgNV\\n\" + \"HSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQUFAAOCAQEA\\n\" + \"FmDD+QuDklXn2EgShwQxV13+txPRuVdOSrutHhoCgMwFWCMtPPtBAKs6KPY7Guvw\\n\" + \"DpJoZSehDiOfsgMirjOWjvfkeWSNvKfjWTVneX7pZD9W5WPnsDBvTbCGezm+v87z\\n\" + \"b+ZM2ZMo98m/wkMcIEAgdSKilR2fuw8rLkAjhYFfs0A7tDgZ9noKwgHvoE4dsrI0\\n\" + \"KZYco6DlP/brASfHTPa2puBLN9McK3v+h0JaSqqm5Ro2Bh56tZkQh8AWy/miuDuK\\n\" + \"3+hNEVdxosxlkM1TPa1DGj0EzzK0yoeerXuH2HX7LlCrrxf6/wdKnjR12PMrLQ4A\\n\" + \"pCqkcWw894z6bV9MAvKe6A==\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIID/DCCAuSgAwIBAgIBQzANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n\" + \"EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n\" + \"GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n\" + \"GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMTU0MDRaFw0y\\n\" + \"MDAzMDUyMTU0MDRaMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n\" + \"bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n\" + \"cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJE\\n\" + \"UyB1cy1lYXN0LTEgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDI\\n\" + \"UIuwh8NusKHk1SqPXcP7OqxY3S/M2ZyQWD3w7Bfihpyyy/fc1w0/suIpX3kbMhAV\\n\" + \"2ESwged2/2zSx4pVnjp/493r4luhSqQYzru78TuPt9bhJIJ51WXunZW2SWkisSaf\\n\" + \"USYUzVN9ezR/bjXTumSUQaLIouJt3OHLX49s+3NAbUyOI8EdvgBQWD68H1epsC0n\\n\" + \"CI5s+pIktyOZ59c4DCDLQcXErQ+tNbDC++oct1ANd/q8p9URonYwGCGOBy7sbCYq\\n\" + \"9eVHh1Iy2M+SNXddVOGw5EuruvHoCIQyOz5Lz4zSuZA9dRbrfztNOpezCNYu6NKM\\n\" + \"n+hzcvdiyxv77uNm8EaxAgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\\n\" + \"Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBQSQG3TmMe6Sa3KufaPBa72v4QFDzAfBgNV\\n\" + \"HSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQUFAAOCAQEA\\n\" + \"L/mOZfB3187xTmjOHMqN2G2oSKHBKiQLM9uv8+97qT+XR+TVsBT6b3yoPpMAGhHA\\n\" + \"Pc7nxAF5gPpuzatx0OTLPcmYucFmfqT/1qA5WlgCnMNtczyNMH97lKFTNV7Njtek\\n\" + \"jWEzAEQSyEWrkNpNlC4j6kMYyPzVXQeXUeZTgJ9FNnVZqmvfjip2N22tawMjrCn5\\n\" + \"7KN/zN65EwY2oO9XsaTwwWmBu3NrDdMbzJnbxoWcFWj4RBwanR1XjQOVNhDwmCOl\\n\" + \"/1Et13b8CPyj69PC8BOVU6cfTSx8WUVy0qvYOKHNY9Bqa5BDnIL3IVmUkeTlM1mt\\n\" + \"enRpyBj+Bk9rh/ICdiRKmA==\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIID/DCCAuSgAwIBAgIBSjANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n\" + \"EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n\" + \"GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n\" + \"GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzNDVaFw0y\\n\" + \"MDAzMDUyMjAzNDVaMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n\" + \"bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n\" + \"cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJE\\n\" + \"UyB1cy13ZXN0LTEgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDE\\n\" + \"Dhw+uw/ycaiIhhyu2pXFRimq0DlB8cNtIe8hdqndH8TV/TFrljNgR8QdzOgZtZ9C\\n\" + \"zzQ2GRpInN/qJF6slEd6wO+6TaDBQkPY+07TXNt52POFUhdVkhJXHpE2BS7Xn6J7\\n\" + \"7RFAOeG1IZmc2DDt+sR1BgXzUqHslQGfFYNS0/MBO4P+ya6W7IhruB1qfa4HiYQS\\n\" + \"dbe4MvGWnv0UzwAqdR7OF8+8/5c58YXZIXCO9riYF2ql6KNSL5cyDPcYK5VK0+Q9\\n\" + \"VI6vuJHSMYcF7wLePw8jtBktqAFE/wbdZiIHhZvNyiNWPPNTGUmQbaJ+TzQEHDs5\\n\" + \"8en+/W7JKnPyBOkxxENbAgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\\n\" + \"Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBS0nw/tFR9bCjgqWTPJkyy4oOD8bzAfBgNV\\n\" + \"HSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQUFAAOCAQEA\\n\" + \"CXGAY3feAak6lHdqj6+YWjy6yyUnLK37bRxZDsyDVXrPRQaXRzPTzx79jvDwEb/H\\n\" + \"Q/bdQ7zQRWqJcbivQlwhuPJ4kWPUZgSt3JUUuqkMsDzsvj/bwIjlrEFDOdHGh0mi\\n\" + \"eVIngFEjUXjMh+5aHPEF9BlQnB8LfVtKj18e15UDTXFa+xJPFxUR7wDzCfo4WI1m\\n\" + \"sUMG4q1FkGAZgsoyFPZfF8IVvgCuGdR8z30VWKklFxttlK0eGLlPAyIO0CQxPQlo\\n\" + \"saNJrHf4tLOgZIWk+LpDhNd9Et5EzvJ3aURUsKY4pISPPF5WdvM9OE59bERwUErd\\n\" + \"nuOuQWQeeadMceZnauRzJQ==\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIID/DCCAuSgAwIBAgIBSzANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n\" + \"EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n\" + \"GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n\" + \"GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzNTBaFw0y\\n\" + \"MDAzMDUyMjAzNTBaMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n\" + \"bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n\" + \"cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJE\\n\" + \"UyB1cy13ZXN0LTIgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDM\\n\" + \"H58SR48U6jyERC1vYTnub34smf5EQVXyzaTmspWGWGzT31NLNZGSDFaa7yef9kdO\\n\" + \"mzJsgebR5tXq6LdwlIoWkKYQ7ycUaadtVKVYdI40QcI3cHn0qLFlg2iBXmWp/B+i\\n\" + \"Z34VuVlCh31Uj5WmhaBoz8t/GRqh1V/aCsf3Wc6jCezH3QfuCjBpzxdOOHN6Ie2v\\n\" + \"xX09O5qmZTvMoRBAvPkxdaPg/Mi7fxueWTbEVk78kuFbF1jHYw8U1BLILIAhcqlq\\n\" + \"x4u8nl73t3O3l/soNUcIwUDK0/S+Kfqhwn9yQyPlhb4Wy3pfnZLJdkyHldktnQav\\n\" + \"9TB9u7KH5Lk0aAYslMLxAgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\\n\" + \"Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBT8roM4lRnlFHWMPWRz0zkwFZog1jAfBgNV\\n\" + \"HSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQUFAAOCAQEA\\n\" + \"JwrxwgwmPtcdaU7O7WDdYa4hprpOMamI49NDzmE0s10oGrqmLwZygcWU0jT+fJ+Y\\n\" + \"pJe1w0CVfKaeLYNsOBVW3X4ZPmffYfWBheZiaiEflq/P6t7/Eg81gaKYnZ/x1Dfa\\n\" + \"sUYkzPvCkXe9wEz5zdUTOCptDt89rBR9CstL9vE7WYUgiVVmBJffWbHQLtfjv6OF\\n\" + \"NMb0QME981kGRzc2WhgP71YS2hHd1kXtsoYP1yTu4vThSKsoN4bkiHsaC1cRkLoy\\n\" + \"0fFA4wpB3WloMEvCDaUvvH1LZlBXTNlwi9KtcwD4tDxkkBt4tQczKLGpQ/nF/W9n\\n\" + \"8YDWk3IIc1sd0bkZqoau2Q==\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEATCCAumgAwIBAgIBTDANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n\" + \"EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n\" + \"GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n\" + \"GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTExMDYwMDA1NDZaFw0y\\n\" + \"MDAzMDUwMDA1NDZaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n\" + \"bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n\" + \"cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1hem9uIFJE\\n\" + \"UyBhcC1ub3J0aGVhc3QtMiBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\\n\" + \"ggEBAKSwd+RVUzTRH0FgnbwoTK8TMm/zMT4+2BvALpAUe6YXbkisg2goycWuuWLg\\n\" + \"jOpFBB3GtyvXZnkqi7MkDWUmj1a2kf8l2oLyoaZ+Hm9x/sV+IJzOqPvj1XVUGjP6\\n\" + \"yYYnPJmUYqvZeI7fEkIGdFkP2m4/sgsSGsFvpD9FK1bL1Kx2UDpYX0kHTtr18Zm/\\n\" + \"1oN6irqWALSmXMDydb8hE0FB2A1VFyeKE6PnoDj/Y5cPHwPPdEi6/3gkDkSaOG30\\n\" + \"rWeQfL3pOcKqzbHaWTxMphd0DSL/quZ64Nr+Ly65Q5PRcTrtr55ekOUziuqXwk+o\\n\" + \"9QpACMwcJ7ROqOznZTqTzSFVXFECAwEAAaNmMGQwDgYDVR0PAQH/BAQDAgEGMBIG\\n\" + \"A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFM6Nox/QWbhzWVvzoJ/y0kGpNPK+\\n\" + \"MB8GA1UdIwQYMBaAFE4C7qw+9hXITO0s9QXBj5yECEmDMA0GCSqGSIb3DQEBBQUA\\n\" + \"A4IBAQCTkWBqNvyRf3Y/W21DwFx3oT/AIWrHt0BdGZO34tavummXemTH9LZ/mqv9\\n\" + \"aljt6ZuDtf5DEQjdsAwXMsyo03ffnP7doWm8iaF1+Mui77ot0TmTsP/deyGwukvJ\\n\" + \"tkxX8bZjDh+EaNauWKr+CYnniNxCQLfFtXYJsfOdVBzK3xNL+Z3ucOQRhr2helWc\\n\" + \"CDQgwfhP1+3pRVKqHvWCPC4R3fT7RZHuRmZ38kndv476GxRntejh+ePffif78bFI\\n\" + \"3rIZCPBGobrrUMycafSbyXteoGca/kA+/IqrAPlk0pWQ4aEL0yTWN2h2dnjoD7oX\\n\" + \"byIuL/g9AGRh97+ssn7D6bDRPTbW\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIID/TCCAuWgAwIBAgIBTTANBgkqhkiG9w0BAQsFADCBijELMAkGA1UEBhMCVVMx\\n\" + \"EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n\" + \"GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n\" + \"GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNjA1MDMyMTI5MjJaFw0y\\n\" + \"MDAzMDUyMTI5MjJaMIGQMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n\" + \"bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n\" + \"cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEhMB8GA1UEAwwYQW1hem9uIFJE\\n\" + \"UyBhcC1zb3V0aC0xIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\n\" + \"06eWGLE0TeqL9kyWOLkS8q0fXO97z+xyBV3DKSB2lg2GkgBz3B98MkmkeB0SZy3G\\n\" + \"Ce4uCpCPbFKiFEdiUclOlhZsrBuCeaimxLM3Ig2wuenElO/7TqgaYHYUbT3d+VQW\\n\" + \"GUbLn5GRZJZe1OAClYdOWm7A1CKpuo+cVV1vxbY2nGUQSJPpVn2sT9gnwvjdE60U\\n\" + \"JGYU/RLCTm8zmZBvlWaNIeKDnreIc4rKn6gUnJ2cQn1ryCVleEeyc3xjYDSrjgdn\\n\" + \"FLYGcp9mphqVT0byeQMOk0c7RHpxrCSA0V5V6/CreFV2LteK50qcDQzDSM18vWP/\\n\" + \"p09FoN8O7QrtOeZJzH/lmwIDAQABo2YwZDAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0T\\n\" + \"AQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQU2i83QHuEl/d0keXF+69HNJph7cMwHwYD\\n\" + \"VR0jBBgwFoAUTgLurD72FchM7Sz1BcGPnIQISYMwDQYJKoZIhvcNAQELBQADggEB\\n\" + \"ACqnH2VjApoDqoSQOky52QBwsGaj+xWYHW5Gm7EvCqvQuhWMkeBuD6YJmMvNyA9G\\n\" + \"I2lh6/o+sUk/RIsbYbxPRdhNPTOgDR9zsNRw6qxaHztq/CEC+mxDCLa3O1hHBaDV\\n\" + \"BmB3nCZb93BvO0EQSEk7aytKq/f+sjyxqOcs385gintdHGU9uM7gTZHnU9vByJsm\\n\" + \"/TL07Miq67X0NlhIoo3jAk+xHaeKJdxdKATQp0448P5cY20q4b8aMk1twcNaMvCP\\n\" + \"dG4M5doaoUA8OQ/0ukLLae/LBxLeTw04q1/a2SyFaVUX2Twbb1S3xVWwLA8vsyGr\\n\" + \"igXx7B5GgP+IHb6DTjPJAi0=\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIID/DCCAuSgAwIBAgIBTjANBgkqhkiG9w0BAQsFADCBijELMAkGA1UEBhMCVVMx\\n\" + \"EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n\" + \"GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n\" + \"GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNjA4MTExOTU4NDVaFw0y\\n\" + \"MDAzMDUxOTU4NDVaMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n\" + \"bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n\" + \"cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJE\\n\" + \"UyB1cy1lYXN0LTIgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCp\\n\" + \"WnnUX7wM0zzstccX+4iXKJa9GR0a2PpvB1paEX4QRCgfhEdQWDaSqyrWNgdVCKkt\\n\" + \"1aQkWu5j6VAC2XIG7kKoonm1ZdBVyBLqW5lXNywlaiU9yhJkwo8BR+/OqgE+PLt/\\n\" + \"EO1mlN0PQudja/XkExCXTO29TG2j7F/O7hox6vTyHNHc0H88zS21uPuBE+jivViS\\n\" + \"yzj/BkyoQ85hnkues3f9R6gCGdc+J51JbZnmgzUkvXjAEuKhAm9JksVOxcOKUYe5\\n\" + \"ERhn0U9zjzpfbAITIkul97VVa5IxskFFTHIPJbvRKHJkiF6wTJww/tc9wm+fSCJ1\\n\" + \"+DbQTGZgkQ3bJrqRN29/AgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\\n\" + \"Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBSAHQzUYYZbepwKEMvGdHp8wzHnfDAfBgNV\\n\" + \"HSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQsFAAOCAQEA\\n\" + \"MbaEzSYZ+aZeTBxf8yi0ta8K4RdwEJsEmP6IhFFQHYUtva2Cynl4Q9tZg3RMsybT\\n\" + \"9mlnSQQlbN/wqIIXbkrcgFcHoXG9Odm/bDtUwwwDaiEhXVfeQom3G77QHOWMTCGK\\n\" + \"qadwuh5msrb17JdXZoXr4PYHDKP7j0ONfAyFNER2+uecblHfRSpVq5UeF3L6ZJb8\\n\" + \"fSw/GtAV6an+/0r+Qm+PiI2H5XuZ4GmRJYnGMhqWhBYrY7p3jtVnKcsh39wgfUnW\\n\" + \"AvZEZG/yhFyAZW0Essa39LiL5VSq14Y1DOj0wgnhSY/9WHxaAo1HB1T9OeZknYbD\\n\" + \"fl/EGSZ0TEvZkENrXcPlVA==\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIID/zCCAuegAwIBAgIBTzANBgkqhkiG9w0BAQsFADCBijELMAkGA1UEBhMCVVMx\\n\" + \"EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n\" + \"GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n\" + \"GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNjA5MTUwMDEwMTFaFw0y\\n\" + \"MDAzMDUwMDEwMTFaMIGSMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n\" + \"bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n\" + \"cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEjMCEGA1UEAwwaQW1hem9uIFJE\\n\" + \"UyBjYS1jZW50cmFsLTEgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\\n\" + \"AQCZYI/iQ6DrS3ny3t1EwX1wAD+3LMgh7Fd01EW5LIuaK2kYIIQpsVKhxLCit/V5\\n\" + \"AGc/1qiJS1Qz9ODLTh0Na6bZW6EakRzuHJLe32KJtoFYPC7Z09UqzXrpA/XL+1hM\\n\" + \"P0ZmCWsU7Nn/EmvfBp9zX3dZp6P6ATrvDuYaVFr+SA7aT3FXpBroqBS1fyzUPs+W\\n\" + \"c6zTR6+yc4zkHX0XQxC5RH6xjgpeRkoOajA/sNo7AQF7KlWmKHbdVF44cvvAhRKZ\\n\" + \"XaoVs/C4GjkaAEPTCbopYdhzg+KLx9eB2BQnYLRrIOQZtRfbQI2Nbj7p3VsRuOW1\\n\" + \"tlcks2w1Gb0YC6w6SuIMFkl1AgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNV\\n\" + \"HRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBToYWxE1lawl6Ks6NsvpbHQ3GKEtzAf\\n\" + \"BgNVHSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQsFAAOC\\n\" + \"AQEAG/8tQ0ooi3hoQpa5EJz0/E5VYBsAz3YxA2HoIonn0jJyG16bzB4yZt4vNQMA\\n\" + \"KsNlQ1uwDWYL1nz63axieUUFIxqxl1KmwfhsmLgZ0Hd2mnTPIl2Hw3uj5+wdgGBg\\n\" + \"agnAZ0bajsBYgD2VGQbqjdk2Qn7Fjy3LEWIvGZx4KyZ99OJ2QxB7JOPdauURAtWA\\n\" + \"DKYkP4LLJxtj07DSzG8kuRWb9B47uqUD+eKDIyjfjbnzGtd9HqqzYFau7EX3HVD9\\n\" + \"9Qhnjl7bTZ6YfAEZ3nH2t3Vc0z76XfGh47rd0pNRhMV+xpok75asKf/lNh5mcUrr\\n\" + \"VKwflyMkQpSbDCmcdJ90N2xEXQ==\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIID/DCCAuSgAwIBAgIBUDANBgkqhkiG9w0BAQsFADCBijELMAkGA1UEBhMCVVMx\\n\" + \"EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n\" + \"GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n\" + \"GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNjEwMTAxNzQ0NDJaFw0y\\n\" + \"MDAzMDUxNzQ0NDJaMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n\" + \"bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n\" + \"cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJE\\n\" + \"UyBldS13ZXN0LTIgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDO\\n\" + \"cttLJfubB4XMMIGWNfJISkIdCMGJyOzLiMJaiWB5GYoXKhEl7YGotpy0qklwW3BQ\\n\" + \"a0fmVdcCLX+dIuVQ9iFK+ZcK7zwm7HtdDTCHOCKeOh2IcnU4c/VIokFi6Gn8udM6\\n\" + \"N/Zi5M5OGpVwLVALQU7Yctsn3c95el6MdVx6mJiIPVu7tCVZn88Z2koBQ2gq9P4O\\n\" + \"Sb249SHFqOb03lYDsaqy1NDsznEOhaRBw7DPJFpvmw1lA3/Y6qrExRI06H2VYR2i\\n\" + \"7qxwDV50N58fs10n7Ye1IOxTVJsgEA7X6EkRRXqYaM39Z76R894548WHfwXWjUsi\\n\" + \"MEX0RS0/t1GmnUQjvevDAgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\\n\" + \"Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBQBxmcuRSxERYCtNnSr5xNfySokHjAfBgNV\\n\" + \"HSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQsFAAOCAQEA\\n\" + \"UyCUQjsF3nUAABjfEZmpksTuUo07aT3KGYt+EMMFdejnBQ0+2lJJFGtT+CDAk1SD\\n\" + \"RSgfEBon5vvKEtlnTf9a3pv8WXOAkhfxnryr9FH6NiB8obISHNQNPHn0ljT2/T+I\\n\" + \"Y6ytfRvKHa0cu3V0NXbJm2B4KEOt4QCDiFxUIX9z6eB4Kditwu05OgQh6KcogOiP\\n\" + \"JesWxBMXXGoDC1rIYTFO7szwDyOHlCcVXJDNsTJhc32oDWYdeIbW7o/5I+aQsrXZ\\n\" + \"C96HykZcgWzz6sElrQxUaT3IoMw/5nmw4uWKKnZnxgI9bY4fpQwMeBZ96iHfFxvH\\n\" + \"mqfEEuC7uUoPofXdBp2ObQ==\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIID/DCCAuSgAwIBAgIBUTANBgkqhkiG9w0BAQsFADCBijELMAkGA1UEBhMCVVMx\\n\" + \"EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n\" + \"GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n\" + \"GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNzA4MjUyMTM5MjZaFw0y\\n\" + \"MDAzMDUyMTM5MjZaMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n\" + \"bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n\" + \"cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJE\\n\" + \"UyBldS13ZXN0LTMgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC+\\n\" + \"xmlEC/3a4cJH+UPwXCE02lC7Zq5NHd0dn6peMeLN8agb6jW4VfSY0NydjRj2DJZ8\\n\" + \"K7wV6sub5NUGT1NuFmvSmdbNR2T59KX0p2dVvxmXHHtIpQ9Y8Aq3ZfhmC5q5Bqgw\\n\" + \"tMA1xayDi7HmoPX3R8kk9ktAZQf6lDeksCvok8idjTu9tiSpDiMwds5BjMsWfyjZ\\n\" + \"d13PTGGNHYVdP692BSyXzSP1Vj84nJKnciW8tAqwIiadreJt5oXyrCXi8ekUMs80\\n\" + \"cUTuGm3aA3Q7PB5ljJMPqz0eVddaiIvmTJ9O3Ez3Du/HpImyMzXjkFaf+oNXf/Hx\\n\" + \"/EW5jCRR6vEiXJcDRDS7AgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\\n\" + \"Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBRZ9mRtS5fHk3ZKhG20Oack4cAqMTAfBgNV\\n\" + \"HSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQsFAAOCAQEA\\n\" + \"F/u/9L6ExQwD73F/bhCw7PWcwwqsK1mypIdrjdIsu0JSgwWwGCXmrIspA3n3Dqxq\\n\" + \"sMhAJD88s9Em7337t+naar2VyLO63MGwjj+vA4mtvQRKq8ScIpiEc7xN6g8HUMsd\\n\" + \"gPG9lBGfNjuAZsrGJflrko4HyuSM7zHExMjXLH+CXcv/m3lWOZwnIvlVMa4x0Tz0\\n\" + \"A4fklaawryngzeEjuW6zOiYCzjZtPlP8Fw0SpzppJ8VpQfrZ751RDo4yudmPqoPK\\n\" + \"5EUe36L8U+oYBXnC5TlYs9bpVv9o5wJQI5qA9oQE2eFWxF1E0AyZ4V5sgGUBStaX\\n\" + \"BjDDWul0wSo7rt1Tq7XpnA==\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEATCCAumgAwIBAgIBTjANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n\" + \"EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n\" + \"GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n\" + \"GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNzEyMDEwMDU1NDJaFw0y\\n\" + \"MDAzMDUwMDU1NDJaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n\" + \"bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n\" + \"cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1hem9uIFJE\\n\" + \"UyBhcC1ub3J0aGVhc3QtMyBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\\n\" + \"ggEBAMZtQNnm/XT19mTa10ftHLzg5UhajoI65JHv4TQNdGXdsv+CQdGYU49BJ9Eu\\n\" + \"3bYgiEtTzR2lQe9zGMvtuJobLhOWuavzp7IixoIQcHkFHN6wJ1CvqrxgvJfBq6Hy\\n\" + \"EuCDCiU+PPDLUNA6XM6Qx3IpHd1wrJkjRB80dhmMSpxmRmx849uFafhN+P1QybsM\\n\" + \"TI0o48VON2+vj+mNuQTyLMMP8D4odSQHjaoG+zyJfJGZeAyqQyoOUOFEyQaHC3TT\\n\" + \"3IDSNCQlpxb9LerbCoKu79WFBBq3CS5cYpg8/fsnV2CniRBFFUumBt5z4dhw9RJU\\n\" + \"qlUXXO1ZyzpGd+c5v6FtrfXtnIUCAwEAAaNmMGQwDgYDVR0PAQH/BAQDAgEGMBIG\\n\" + \"A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFETv7ELNplYy/xTeIOInl6nzeiHg\\n\" + \"MB8GA1UdIwQYMBaAFE4C7qw+9hXITO0s9QXBj5yECEmDMA0GCSqGSIb3DQEBBQUA\\n\" + \"A4IBAQCpKxOQcd0tEKb3OtsOY8q/MPwTyustGk2Rt7t9G68idADp8IytB7M0SDRo\\n\" + \"wWZqynEq7orQVKdVOanhEWksNDzGp0+FPAf/KpVvdYCd7ru3+iI+V4ZEp2JFdjuZ\\n\" + \"Zz0PIjS6AgsZqE5Ri1J+NmfmjGZCPhsHnGZiBaenX6K5VRwwwmLN6xtoqrrfR5zL\\n\" + \"QfBeeZNJG6KiM3R/DxJ5rAa6Fz+acrhJ60L7HprhB7SFtj1RCijau3+ZwiGmUOMr\\n\" + \"yKlMv+VgmzSw7o4Hbxy1WVrA6zQsTHHSGf+vkQn2PHvnFMUEu/ZLbTDYFNmTLK91\\n\" + \"K6o4nMsEvhBKgo4z7H1EqqxXhvN2\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEBDCCAuygAwIBAgIBTTANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n\" + \"EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n\" + \"GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n\" + \"GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNzEyMDYyMjQyMjdaFw0y\\n\" + \"MDAzMDQyMjQyMjdaMIGXMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n\" + \"bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n\" + \"cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEoMCYGA1UEAwwfQW1hem9uIFJE\\n\" + \"UyBwcmV2aWV3LXVzLWVhc3QtMiBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC\\n\" + \"AQoCggEBAMw0E8k8URanS0c/i1S7wzFf5+XC9H2bm+4pENdElGP5s9rVCybrzJaw\\n\" + \"6zZgVLpOFnS9mJ+sDHIMUexPjj0X4+r7wZ4+hPfy7Rmrgbt23IQwr+PIBxsKAVjj\\n\" + \"iaQ3bSm5WQ79an5elfQqEDdZ13ckUcLBJDA8bUDthI8m7gnteGtx0M1D0VS5PDs9\\n\" + \"cf96QlBia9Lx3VcNo3cc0PzP30E4j3h/Ywlb0jXUgB6oVlTxK70BjD3kZa+2xlea\\n\" + \"vKmm4NqGVhPY7BWd4XNdbSYsPDeZ9HxHNWXZxoHcQ7vSU8RKYVPtoBK/zIp3eWOi\\n\" + \"gzZlm5vYPvlkYh2pshttPPVyhZqlEZ8CAwEAAaNmMGQwDgYDVR0PAQH/BAQDAgEG\\n\" + \"MBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFI93K+FRhste6w3MiD+IK3Tc\\n\" + \"g/BsMB8GA1UdIwQYMBaAFE4C7qw+9hXITO0s9QXBj5yECEmDMA0GCSqGSIb3DQEB\\n\" + \"BQUAA4IBAQAs4RsC8MJVOvrlRi5sgKC9LJ4BvSrrbR5V8CdIEwlPqrVOSsU5t7Py\\n\" + \"j8CHoPUY/ya1azlBSO62BqdZxipFuAR06NdxNG2Gy0fGl71N2udxokwEPW+IEZ81\\n\" + \"G6JeX8HNFjnna8ehimz1VJDDW7qborhg3dCAgEWkgv5PDR9/zoUu6bbmHPV77zbx\\n\" + \"Gq7Sybz5OiagC7Nj9N1WgjNXUEmlfY2DHXnJmIVgUGEVrBgu5tGcIU/bQCRznH1N\\n\" + \"JsBH0SalneCbSzMBhQdnzL+L5KOERibWAZvS6ebmomTBwa03kgo/T0DfEccgobTs\\n\" + \"rV6T9/8Vg9T18vEeqURL+LOGs7+lIKmN\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIID/TCCAuWgAwIBAgIBUjANBgkqhkiG9w0BAQsFADCBijELMAkGA1UEBhMCVVMx\\n\" + \"EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n\" + \"GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n\" + \"GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xODA5MjgxNzM0NTJaFw0y\\n\" + \"MDAzMDUxNzM0NTJaMIGQMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n\" + \"bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n\" + \"cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEhMB8GA1UEAwwYQW1hem9uIFJE\\n\" + \"UyBldS1ub3J0aC0xIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\n\" + \"wvHfpoixHNy1jvcq/WNhXDHlsFVbEOX7mp01YQeK0wWqlpFvjs2HFJ1sRnnmyhdT\\n\" + \"sv4VQuXnQw2V2iFAO2HveDi8pcJ+eIXY+wloSVBytgYLTMcNpn5LmqIeyGO+Lr6p\\n\" + \"KUr78I4uE0mnabxyILA96CYrYtgwpLCtpEXSdSJPwOSK9nX9++molxLcJ5v4fiPS\\n\" + \"j46PETsbFoFdXXwYCdiJKpzO4zUAkKzzvzbF7cXg9R4noJuytjEKbluxugDHdnwl\\n\" + \"SctGZ3moju2I0OpPbJKUI3wHsUMtY5v15X74MOED5lbtaW5+/6JIERggve0b23Ni\\n\" + \"4nlYSt0Bb3z3Zwc83twCUwIDAQABo2YwZDAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0T\\n\" + \"AQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQU4stOy1OAFRyvZCSKNfCiPRD+rPowHwYD\\n\" + \"VR0jBBgwFoAUTgLurD72FchM7Sz1BcGPnIQISYMwDQYJKoZIhvcNAQELBQADggEB\\n\" + \"AHpRIlKh1fqbMHl0+VnJ/52XQy1F5gM2hnw3lYkOLsDyzj9W4V6D1v2EDgYW+ZVH\\n\" + \"0wWqo8m0jS6CDn14W2HqNlyXyHpJK3eh3088zxvJgKqzKS4ghNzafN7axwYIwRN6\\n\" + \"9rrhRWy9MaFHaSPKtgiuTxw9fOekqyJdO+OYpBVEp7KEEyEG9/W5xZcU64zGb6UT\\n\" + \"8/g4+5t+HlT0nYBMvt8HW7w2XbFBetfKKK4WaoPKloOMN+RLO/JgJ6pVWvxM8nhC\\n\" + \"PbVtr43OI1sQAXYk0an7aUDgXT98vGwovWNHI6lFCMGRG+WXhauLtKRsIr4hR1LV\\n\" + \"fES7Q9MWPzPYHQoKELF9Jhk=\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEBzCCAu+gAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZQxCzAJBgNVBAYTAlVT\\n\" + \"MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n\" + \"DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n\" + \"MSUwIwYDVQQDDBxBbWF6b24gUkRTIGFwLWVhc3QtMSBSb290IENBMB4XDTE5MDIx\\n\" + \"NzAyNDcwMFoXDTIyMDYwMTEyMDAwMFowgY8xCzAJBgNVBAYTAlVTMRMwEQYDVQQI\\n\" + \"DApXYXNoaW5ndG9uMRAwDgYDVQQHDAdTZWF0dGxlMSIwIAYDVQQKDBlBbWF6b24g\\n\" + \"V2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMSAwHgYDVQQD\\n\" + \"DBdBbWF6b24gUkRTIGFwLWVhc3QtMSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n\" + \"ADCCAQoCggEBAOcJAUofyJuBuPr5ISHi/Ha5ed8h3eGdzn4MBp6rytPOg9NVGRQs\\n\" + \"O93fNGCIKsUT6gPuk+1f1ncMTV8Y0Fdf4aqGWme+Khm3ZOP3V1IiGnVq0U2xiOmn\\n\" + \"SQ4Q7LoeQC4lC6zpoCHVJyDjZ4pAknQQfsXb77Togdt/tK5ahev0D+Q3gCwAoBoO\\n\" + \"DHKJ6t820qPi63AeGbJrsfNjLKiXlFPDUj4BGir4dUzjEeH7/hx37na1XG/3EcxP\\n\" + \"399cT5k7sY/CR9kctMlUyEEUNQOmhi/ly1Lgtihm3QfjL6K9aGLFNwX35Bkh9aL2\\n\" + \"F058u+n8DP/dPeKUAcJKiQZUmzuen5n57x8CAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n\" + \"AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFFlqgF4FQlb9yP6c+Q3E\\n\" + \"O3tXv+zOMB8GA1UdIwQYMBaAFK9T6sY/PBZVbnHcNcQXf58P4OuPMA0GCSqGSIb3\\n\" + \"DQEBCwUAA4IBAQDeXiS3v1z4jWAo1UvVyKDeHjtrtEH1Rida1eOXauFuEQa5tuOk\\n\" + \"E53Os4haZCW4mOlKjigWs4LN+uLIAe1aFXGo92nGIqyJISHJ1L+bopx/JmIbHMCZ\\n\" + \"0lTNJfR12yBma5VQy7vzeFku/SisKwX0Lov1oHD4MVhJoHbUJYkmAjxorcIHORvh\\n\" + \"I3Vj5XrgDWtLDPL8/Id/roul/L+WX5ir+PGScKBfQIIN2lWdZoqdsx8YWqhm/ikL\\n\" + \"C6qNieSwcvWL7C03ri0DefTQMY54r5wP33QU5hJ71JoaZI3YTeT0Nf+NRL4hM++w\\n\" + \"Q0veeNzBQXg1f/JxfeA39IDIX1kiCf71tGlT\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEEDCCAvigAwIBAgIJAJF3HxEqKM4lMA0GCSqGSIb3DQEBCwUAMIGUMQswCQYD\\n\" + \"VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n\" + \"MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n\" + \"em9uIFJEUzElMCMGA1UEAwwcQW1hem9uIFJEUyBhcC1lYXN0LTEgUm9vdCBDQTAe\\n\" + \"Fw0xOTAyMTcwMjQ2MTFaFw0yNDAyMTYwMjQ2MTFaMIGUMQswCQYDVQQGEwJVUzEQ\\n\" + \"MA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEiMCAGA1UECgwZ\\n\" + \"QW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEl\\n\" + \"MCMGA1UEAwwcQW1hem9uIFJEUyBhcC1lYXN0LTEgUm9vdCBDQTCCASIwDQYJKoZI\\n\" + \"hvcNAQEBBQADggEPADCCAQoCggEBAOCVr1Yj5IW4XWa9QOLGJDSz4pqIM6BAbqQp\\n\" + \"gYvzIO4Lv8c8dEnuuuCY8M/zOrJ1iQJ3cDiKGa32HVBVcH+nUdXzw4Jq5jw0hsb6\\n\" + \"/WW2RD2aUe4jCkRD5wNzmeHM4gTgtMZnXNVHpELgKR4wVhSHEfWFTiMsZi35y8mj\\n\" + \"PL98Mz/m/nMnB/59EjMvcJMrsUljHO6B9BMEcvNkwvre9xza0BQWKyiVRcbOpoj1\\n\" + \"w4BPtYYZ+dW2QKw9AmYXwAmCLeATsxrHIJ/IbzS7obxv2QN2Eh4pJ3ghRCFv1XM9\\n\" + \"XVkm13oiCjj7jsxAwF7o+VggPl/GG+/Gwk+TLuaTFNAtROpPxL8CAwEAAaNjMGEw\\n\" + \"DgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFK9T6sY/\\n\" + \"PBZVbnHcNcQXf58P4OuPMB8GA1UdIwQYMBaAFK9T6sY/PBZVbnHcNcQXf58P4OuP\\n\" + \"MA0GCSqGSIb3DQEBCwUAA4IBAQBBY+KATaT7ndYT3Ky0VWaiwNfyl1u3aDxr+MKP\\n\" + \"VeDhtOhlob5u0E+edOXUvEXd4A+ntS+U0HmwvtMXtQbQ2EJbsNRqZnS8KG9YB2Yc\\n\" + \"Q99auphW3wMjwHRtflLO5h14aa9SspqJJgcM1R7Z3pAYeq6bpBDxZSGrYtWI64q4\\n\" + \"h4i67qWAGDFcXSTW1kJ00GMlBCIGTeYiu8LYutdsDWzYKkeezJRjx9VR4w7A7e1G\\n\" + \"WmY4aUg/8aPxCioY2zEQKNl55Ghg6Dwy+6BxaV6RlV9r9EaSCai11p1bgS568WQn\\n\" + \"4WNQK36EGe37l2SOpDB6STrq57/rjREvmq803Ylg/Gf6qqzK\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIECTCCAvGgAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZUxCzAJBgNVBAYTAlVT\\n\" + \"MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n\" + \"DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n\" + \"MSYwJAYDVQQDDB1BbWF6b24gUkRTIG1lLXNvdXRoLTEgUm9vdCBDQTAeFw0xOTA1\\n\" + \"MTAyMTU4NDNaFw0yNTA2MDExMjAwMDBaMIGQMQswCQYDVQQGEwJVUzETMBEGA1UE\\n\" + \"CAwKV2FzaGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9u\\n\" + \"IFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEhMB8GA1UE\\n\" + \"AwwYQW1hem9uIFJEUyBtZS1zb3V0aC0xIENBMIIBIjANBgkqhkiG9w0BAQEFAAOC\\n\" + \"AQ8AMIIBCgKCAQEAudOYPZH+ihJAo6hNYMB5izPVBe3TYhnZm8+X3IoaaYiKtsp1\\n\" + \"JJhkTT0CEejYIQ58Fh4QrMUyWvU8qsdK3diNyQRoYLbctsBPgxBR1u07eUJDv38/\\n\" + \"C1JlqgHmMnMi4y68Iy7ymv50QgAMuaBqgEBRI1R6Lfbyrb2YvH5txjJyTVMwuCfd\\n\" + \"YPAtZVouRz0JxmnfsHyxjE+So56uOKTDuw++Ho4HhZ7Qveej7XB8b+PIPuroknd3\\n\" + \"FQB5RVbXRvt5ZcVD4F2fbEdBniF7FAF4dEiofVCQGQ2nynT7dZdEIPfPdH3n7ZmE\\n\" + \"lAOmwHQ6G83OsiHRBLnbp+QZRgOsjkHJxT20bQIDAQABo2YwZDAOBgNVHQ8BAf8E\\n\" + \"BAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUOEVDM7VomRH4HVdA\\n\" + \"QvIMNq2tXOcwHwYDVR0jBBgwFoAU54cfDjgwBx4ycBH8+/r8WXdaiqYwDQYJKoZI\\n\" + \"hvcNAQELBQADggEBAHhvMssj+Th8IpNePU6RH0BiL6o9c437R3Q4IEJeFdYL+nZz\\n\" + \"PW/rELDPvLRUNMfKM+KzduLZ+l29HahxefejYPXtvXBlq/E/9czFDD4fWXg+zVou\\n\" + \"uDXhyrV4kNmP4S0eqsAP/jQHPOZAMFA4yVwO9hlqmePhyDnszCh9c1PfJSBh49+b\\n\" + \"4w7i/L3VBOMt8j3EKYvqz0gVfpeqhJwL4Hey8UbVfJRFJMJzfNHpePqtDRAY7yjV\\n\" + \"PYquRaV2ab/E+/7VFkWMM4tazYz/qsYA2jSH+4xDHvYk8LnsbcrF9iuidQmEc5sb\\n\" + \"FgcWaSKG4DJjcI5k7AJLWcXyTDt21Ci43LE+I9Q=\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEEjCCAvqgAwIBAgIJANew34ehz5l8MA0GCSqGSIb3DQEBCwUAMIGVMQswCQYD\\n\" + \"VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n\" + \"MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n\" + \"em9uIFJEUzEmMCQGA1UEAwwdQW1hem9uIFJEUyBtZS1zb3V0aC0xIFJvb3QgQ0Ew\\n\" + \"HhcNMTkwNTEwMjE0ODI3WhcNMjQwNTA4MjE0ODI3WjCBlTELMAkGA1UEBhMCVVMx\\n\" + \"EDAOBgNVBAcMB1NlYXR0bGUxEzARBgNVBAgMCldhc2hpbmd0b24xIjAgBgNVBAoM\\n\" + \"GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n\" + \"JjAkBgNVBAMMHUFtYXpvbiBSRFMgbWUtc291dGgtMSBSb290IENBMIIBIjANBgkq\\n\" + \"hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAp7BYV88MukcY+rq0r79+C8UzkT30fEfT\\n\" + \"aPXbx1d6M7uheGN4FMaoYmL+JE1NZPaMRIPTHhFtLSdPccInvenRDIatcXX+jgOk\\n\" + \"UA6lnHQ98pwN0pfDUyz/Vph4jBR9LcVkBbe0zdoKKp+HGbMPRU0N2yNrog9gM5O8\\n\" + \"gkU/3O2csJ/OFQNnj4c2NQloGMUpEmedwJMOyQQfcUyt9CvZDfIPNnheUS29jGSw\\n\" + \"ERpJe/AENu8Pxyc72jaXQuD+FEi2Ck6lBkSlWYQFhTottAeGvVFNCzKszCntrtqd\\n\" + \"rdYUwurYsLTXDHv9nW2hfDUQa0mhXf9gNDOBIVAZugR9NqNRNyYLHQIDAQABo2Mw\\n\" + \"YTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU54cf\\n\" + \"DjgwBx4ycBH8+/r8WXdaiqYwHwYDVR0jBBgwFoAU54cfDjgwBx4ycBH8+/r8WXda\\n\" + \"iqYwDQYJKoZIhvcNAQELBQADggEBAIIMTSPx/dR7jlcxggr+O6OyY49Rlap2laKA\\n\" + \"eC/XI4ySP3vQkIFlP822U9Kh8a9s46eR0uiwV4AGLabcu0iKYfXjPkIprVCqeXV7\\n\" + \"ny9oDtrbflyj7NcGdZLvuzSwgl9SYTJp7PVCZtZutsPYlbJrBPHwFABvAkMvRtDB\\n\" + \"hitIg4AESDGPoCl94sYHpfDfjpUDMSrAMDUyO6DyBdZH5ryRMAs3lGtsmkkNUrso\\n\" + \"aTW6R05681Z0mvkRdb+cdXtKOSuDZPoe2wJJIaz3IlNQNSrB5TImMYgmt6iAsFhv\\n\" + \"3vfTSTKrZDNTJn4ybG6pq1zWExoXsktZPylJly6R3RBwV6nwqBM=\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEETCCAvmgAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZQxCzAJBgNVBAYTAlVT\\n\" + \"MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n\" + \"DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n\" + \"MSUwIwYDVQQDDBxBbWF6b24gUkRTIEJldGEgUm9vdCAyMDE5IENBMB4XDTE5MDgy\\n\" + \"MDE3MTAwN1oXDTI0MDgxOTE3MzgyNlowgZkxCzAJBgNVBAYTAlVTMRMwEQYDVQQI\\n\" + \"DApXYXNoaW5ndG9uMRAwDgYDVQQHDAdTZWF0dGxlMSIwIAYDVQQKDBlBbWF6b24g\\n\" + \"V2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMSowKAYDVQQD\\n\" + \"DCFBbWF6b24gUkRTIEJldGEgdXMtZWFzdC0xIDIwMTkgQ0EwggEiMA0GCSqGSIb3\\n\" + \"DQEBAQUAA4IBDwAwggEKAoIBAQDTNCOlotQcLP8TP82U2+nk0bExVuuMVOgFeVMx\\n\" + \"vbUHZQeIj9ikjk+jm6eTDnnkhoZcmJiJgRy+5Jt69QcRbb3y3SAU7VoHgtraVbxF\\n\" + \"QDh7JEHI9tqEEVOA5OvRrDRcyeEYBoTDgh76ROco2lR+/9uCvGtHVrMCtG7BP7ZB\\n\" + \"sSVNAr1IIRZZqKLv2skKT/7mzZR2ivcw9UeBBTUf8xsfiYVBvMGoEsXEycjYdf6w\\n\" + \"WV+7XS7teNOc9UgsFNN+9AhIBc1jvee5E//72/4F8pAttAg/+mmPUyIKtekNJ4gj\\n\" + \"OAR2VAzGx1ybzWPwIgOudZFHXFduxvq4f1hIRPH0KbQ/gkRrAgMBAAGjZjBkMA4G\\n\" + \"A1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBTkvpCD\\n\" + \"6C43rar9TtJoXr7q8dkrrjAfBgNVHSMEGDAWgBStoQwVpbGx87fxB3dEGDqKKnBT\\n\" + \"4TANBgkqhkiG9w0BAQsFAAOCAQEAJd9fOSkwB3uVdsS+puj6gCER8jqmhd3g/J5V\\n\" + \"Zjk9cKS8H0e8pq/tMxeJ8kpurPAzUk5RkCspGt2l0BSwmf3ahr8aJRviMX6AuW3/\\n\" + \"g8aKplTvq/WMNGKLXONa3Sq8591J+ce8gtOX/1rDKmFI4wQ/gUzOSYiT991m7QKS\\n\" + \"Fr6HMgFuz7RNJbb3Fy5cnurh8eYWA7mMv7laiLwTNsaro5qsqErD5uXuot6o9beT\\n\" + \"a+GiKinEur35tNxAr47ax4IRubuIzyfCrezjfKc5raVV2NURJDyKP0m0CCaffAxE\\n\" + \"qn2dNfYc3v1D8ypg3XjHlOzRo32RB04o8ALHMD9LSwsYDLpMag==\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEEDCCAvigAwIBAgIJAKFMXyltvuRdMA0GCSqGSIb3DQEBCwUAMIGUMQswCQYD\\n\" + \"VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n\" + \"MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n\" + \"em9uIFJEUzElMCMGA1UEAwwcQW1hem9uIFJEUyBCZXRhIFJvb3QgMjAxOSBDQTAe\\n\" + \"Fw0xOTA4MTkxNzM4MjZaFw0yNDA4MTkxNzM4MjZaMIGUMQswCQYDVQQGEwJVUzEQ\\n\" + \"MA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEiMCAGA1UECgwZ\\n\" + \"QW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEl\\n\" + \"MCMGA1UEAwwcQW1hem9uIFJEUyBCZXRhIFJvb3QgMjAxOSBDQTCCASIwDQYJKoZI\\n\" + \"hvcNAQEBBQADggEPADCCAQoCggEBAMkZdnIH9ndatGAcFo+DppGJ1HUt4x+zeO+0\\n\" + \"ZZ29m0sfGetVulmTlv2d5b66e+QXZFWpcPQMouSxxYTW08TbrQiZngKr40JNXftA\\n\" + \"atvzBqIImD4II0ZX5UEVj2h98qe/ypW5xaDN7fEa5e8FkYB1TEemPaWIbNXqchcL\\n\" + \"tV7IJPr3Cd7Z5gZJlmujIVDPpMuSiNaal9/6nT9oqN+JSM1fx5SzrU5ssg1Vp1vv\\n\" + \"5Xab64uOg7wCJRB9R2GC9XD04odX6VcxUAGrZo6LR64ZSifupo3l+R5sVOc5i8NH\\n\" + \"skdboTzU9H7+oSdqoAyhIU717PcqeDum23DYlPE2nGBWckE+eT8CAwEAAaNjMGEw\\n\" + \"DgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFK2hDBWl\\n\" + \"sbHzt/EHd0QYOooqcFPhMB8GA1UdIwQYMBaAFK2hDBWlsbHzt/EHd0QYOooqcFPh\\n\" + \"MA0GCSqGSIb3DQEBCwUAA4IBAQAO/718k8EnOqJDx6wweUscGTGL/QdKXUzTVRAx\\n\" + \"JUsjNUv49mH2HQVEW7oxszfH6cPCaupNAddMhQc4C/af6GHX8HnqfPDk27/yBQI+\\n\" + \"yBBvIanGgxv9c9wBbmcIaCEWJcsLp3HzXSYHmjiqkViXwCpYfkoV3Ns2m8bp+KCO\\n\" + \"y9XmcCKRaXkt237qmoxoh2sGmBHk2UlQtOsMC0aUQ4d7teAJG0q6pbyZEiPyKZY1\\n\" + \"XR/UVxMJL0Q4iVpcRS1kaNCMfqS2smbLJeNdsan8pkw1dvPhcaVTb7CvjhJtjztF\\n\" + \"YfDzAI5794qMlWxwilKMmUvDlPPOTen8NNHkLwWvyFCH7Doh\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEFzCCAv+gAwIBAgICFSUwDQYJKoZIhvcNAQELBQAwgZcxCzAJBgNVBAYTAlVT\\n\" + \"MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n\" + \"DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n\" + \"MSgwJgYDVQQDDB9BbWF6b24gUkRTIFByZXZpZXcgUm9vdCAyMDE5IENBMB4XDTE5\\n\" + \"MDgyMTIyMzk0N1oXDTI0MDgyMTIyMjk0OVowgZwxCzAJBgNVBAYTAlVTMRMwEQYD\\n\" + \"VQQIDApXYXNoaW5ndG9uMRAwDgYDVQQHDAdTZWF0dGxlMSIwIAYDVQQKDBlBbWF6\\n\" + \"b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMS0wKwYD\\n\" + \"VQQDDCRBbWF6b24gUkRTIFByZXZpZXcgdXMtZWFzdC0yIDIwMTkgQ0EwggEiMA0G\\n\" + \"CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQD0dB/U7qRnSf05wOi7m10Pa2uPMTJv\\n\" + \"r6U/3Y17a5prq5Zr4++CnSUYarG51YuIf355dKs+7Lpzs782PIwCmLpzAHKWzix6\\n\" + \"pOaTQ+WZ0+vUMTxyqgqWbsBgSCyP7pVBiyqnmLC/L4az9XnscrbAX4pNaoJxsuQe\\n\" + \"mzBo6yofjQaAzCX69DuqxFkVTRQnVy7LCFkVaZtjNAftnAHJjVgQw7lIhdGZp9q9\\n\" + \"IafRt2gteihYfpn+EAQ/t/E4MnhrYs4CPLfS7BaYXBycEKC5Muj1l4GijNNQ0Efo\\n\" + \"xG8LSZz7SNgUvfVwiNTaqfLP3AtEAWiqxyMyh3VO+1HpCjT7uNBFtmF3AgMBAAGj\\n\" + \"ZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQW\\n\" + \"BBQtinkdrj+0B2+qdXngV2tgHnPIujAfBgNVHSMEGDAWgBRp0xqULkNh/w2ZVzEI\\n\" + \"o2RIY7O03TANBgkqhkiG9w0BAQsFAAOCAQEAtJdqbCxDeMc8VN1/RzCabw9BIL/z\\n\" + \"73Auh8eFTww/sup26yn8NWUkfbckeDYr1BrXa+rPyLfHpg06kwR8rBKyrs5mHwJx\\n\" + \"bvOzXD/5WTdgreB+2Fb7mXNvWhenYuji1MF+q1R2DXV3I05zWHteKX6Dajmx+Uuq\\n\" + \"Yq78oaCBSV48hMxWlp8fm40ANCL1+gzQ122xweMFN09FmNYFhwuW+Ao+Vv90ZfQG\\n\" + \"PYwTvN4n/gegw2TYcifGZC2PNX74q3DH03DXe5fvNgRW5plgz/7f+9mS+YHd5qa9\\n\" + \"tYTPUvoRbi169ou6jicsMKUKPORHWhiTpSCWR1FMMIbsAcsyrvtIsuaGCQ==\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEFjCCAv6gAwIBAgIJAMzYZJ+R9NBVMA0GCSqGSIb3DQEBCwUAMIGXMQswCQYD\\n\" + \"VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n\" + \"MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n\" + \"em9uIFJEUzEoMCYGA1UEAwwfQW1hem9uIFJEUyBQcmV2aWV3IFJvb3QgMjAxOSBD\\n\" + \"QTAeFw0xOTA4MjEyMjI5NDlaFw0yNDA4MjEyMjI5NDlaMIGXMQswCQYDVQQGEwJV\\n\" + \"UzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEiMCAGA1UE\\n\" + \"CgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJE\\n\" + \"UzEoMCYGA1UEAwwfQW1hem9uIFJEUyBQcmV2aWV3IFJvb3QgMjAxOSBDQTCCASIw\\n\" + \"DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM7kkS6vjgKKQTPynC2NjdN5aPPV\\n\" + \"O71G0JJS/2ARVBVJd93JLiGovVJilfWYfwZCs4gTRSSjrUD4D4HyqCd6A+eEEtJq\\n\" + \"M0DEC7i0dC+9WNTsPszuB206Jy2IUmxZMIKJAA1NHSbIMjB+b6/JhbSUi7nKdbR/\\n\" + \"brj83bF+RoSA+ogrgX7mQbxhmFcoZN9OGaJgYKsKWUt5Wqv627KkGodUK8mDepgD\\n\" + \"S3ZfoRQRx3iceETpcmHJvaIge6+vyDX3d9Z22jmvQ4AKv3py2CmU2UwuhOltFDwB\\n\" + \"0ddtb39vgwrJxaGfiMRHpEP1DfNLWHAnA69/pgZPwIggidS+iBPUhgucMp8CAwEA\\n\" + \"AaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE\\n\" + \"FGnTGpQuQ2H/DZlXMQijZEhjs7TdMB8GA1UdIwQYMBaAFGnTGpQuQ2H/DZlXMQij\\n\" + \"ZEhjs7TdMA0GCSqGSIb3DQEBCwUAA4IBAQC3xz1vQvcXAfpcZlngiRWeqU8zQAMQ\\n\" + \"LZPCFNv7PVk4pmqX+ZiIRo4f9Zy7TrOVcboCnqmP/b/mNq0gVF4O+88jwXJZD+f8\\n\" + \"/RnABMZcnGU+vK0YmxsAtYU6TIb1uhRFmbF8K80HHbj9vSjBGIQdPCbvmR2zY6VJ\\n\" + \"BYM+w9U9hp6H4DVMLKXPc1bFlKA5OBTgUtgkDibWJKFOEPW3UOYwp9uq6pFoN0AO\\n\" + \"xMTldqWFsOF3bJIlvOY0c/1EFZXu3Ns6/oCP//Ap9vumldYMUZWmbK+gK33FPOXV\\n\" + \"8BQ6jNC29icv7lLDpRPwjibJBXX+peDR5UK4FdYcswWEB1Tix5X8dYu6\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIECDCCAvCgAwIBAgICVIYwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n\" + \"MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n\" + \"DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n\" + \"MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MDQxNzEz\\n\" + \"MDRaFw0yNDA4MjIxNzA4NTBaMIGVMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n\" + \"aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n\" + \"ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEmMCQGA1UEAwwdQW1h\\n\" + \"em9uIFJEUyBhcC1zb3V0aC0xIDIwMTkgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IB\\n\" + \"DwAwggEKAoIBAQDUYOz1hGL42yUCrcsMSOoU8AeD/3KgZ4q7gP+vAz1WnY9K/kim\\n\" + \"eWN/2Qqzlo3+mxSFQFyD4MyV3+CnCPnBl9Sh1G/F6kThNiJ7dEWSWBQGAB6HMDbC\\n\" + \"BaAsmUc1UIz8sLTL3fO+S9wYhA63Wun0Fbm/Rn2yk/4WnJAaMZcEtYf6e0KNa0LM\\n\" + \"p/kN/70/8cD3iz3dDR8zOZFpHoCtf0ek80QqTich0A9n3JLxR6g6tpwoYviVg89e\\n\" + \"qCjQ4axxOkWWeusLeTJCcY6CkVyFvDAKvcUl1ytM5AiaUkXblE7zDFXRM4qMMRdt\\n\" + \"lPm8d3pFxh0fRYk8bIKnpmtOpz3RIctDrZZxAgMBAAGjZjBkMA4GA1UdDwEB/wQE\\n\" + \"AwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBT99wKJftD3jb4sHoHG\\n\" + \"i3uGlH6W6TAfBgNVHSMEGDAWgBRzX2DYvMsDmPQrFzQuNlqmYP+8HzANBgkqhkiG\\n\" + \"9w0BAQsFAAOCAQEAZ17hhr3dII3hUfuHQ1hPWGrpJOX/G9dLzkprEIcCidkmRYl+\\n\" + \"hu1Pe3caRMh/17+qsoEErmnVq5jNY9X1GZL04IZH8YbHc7iRHw3HcWAdhN8633+K\\n\" + \"jYEB2LbJ3vluCGnCejq9djDb6alOugdLMJzxOkHDhMZ6/gYbECOot+ph1tQuZXzD\\n\" + \"tZ7prRsrcuPBChHlPjmGy8M9z8u+kF196iNSUGC4lM8vLkHM7ycc1/ZOwRq9aaTe\\n\" + \"iOghbQQyAEe03MWCyDGtSmDfr0qEk+CHN+6hPiaL8qKt4s+V9P7DeK4iW08ny8Ox\\n\" + \"AVS7u0OK/5+jKMAMrKwpYrBydOjTUTHScocyNw==\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEBjCCAu6gAwIBAgIJAMc0ZzaSUK51MA0GCSqGSIb3DQEBCwUAMIGPMQswCQYD\\n\" + \"VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n\" + \"MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n\" + \"em9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJEUyBSb290IDIwMTkgQ0EwHhcNMTkw\\n\" + \"ODIyMTcwODUwWhcNMjQwODIyMTcwODUwWjCBjzELMAkGA1UEBhMCVVMxEDAOBgNV\\n\" + \"BAcMB1NlYXR0bGUxEzARBgNVBAgMCldhc2hpbmd0b24xIjAgBgNVBAoMGUFtYXpv\\n\" + \"biBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxIDAeBgNV\\n\" + \"BAMMF0FtYXpvbiBSRFMgUm9vdCAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEFAAOC\\n\" + \"AQ8AMIIBCgKCAQEArXnF/E6/Qh+ku3hQTSKPMhQQlCpoWvnIthzX6MK3p5a0eXKZ\\n\" + \"oWIjYcNNG6UwJjp4fUXl6glp53Jobn+tWNX88dNH2n8DVbppSwScVE2LpuL+94vY\\n\" + \"0EYE/XxN7svKea8YvlrqkUBKyxLxTjh+U/KrGOaHxz9v0l6ZNlDbuaZw3qIWdD/I\\n\" + \"6aNbGeRUVtpM6P+bWIoxVl/caQylQS6CEYUk+CpVyJSkopwJlzXT07tMoDL5WgX9\\n\" + \"O08KVgDNz9qP/IGtAcRduRcNioH3E9v981QO1zt/Gpb2f8NqAjUUCUZzOnij6mx9\\n\" + \"McZ+9cWX88CRzR0vQODWuZscgI08NvM69Fn2SQIDAQABo2MwYTAOBgNVHQ8BAf8E\\n\" + \"BAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUc19g2LzLA5j0Kxc0LjZa\\n\" + \"pmD/vB8wHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJKoZIhvcN\\n\" + \"AQELBQADggEBAHAG7WTmyjzPRIM85rVj+fWHsLIvqpw6DObIjMWokpliCeMINZFV\\n\" + \"ynfgBKsf1ExwbvJNzYFXW6dihnguDG9VMPpi2up/ctQTN8tm9nDKOy08uNZoofMc\\n\" + \"NUZxKCEkVKZv+IL4oHoeayt8egtv3ujJM6V14AstMQ6SwvwvA93EP/Ug2e4WAXHu\\n\" + \"cbI1NAbUgVDqp+DRdfvZkgYKryjTWd/0+1fS8X1bBZVWzl7eirNVnHbSH2ZDpNuY\\n\" + \"0SBd8dj5F6ld3t58ydZbrTHze7JJOd8ijySAp4/kiu9UfZWuTPABzDa/DSdz9Dk/\\n\" + \"zPW4CXXvhLmE02TA9/HeCw3KEHIwicNuEfw=\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEBzCCAu+gAwIBAgICQ2QwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n\" + \"MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n\" + \"DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n\" + \"MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MDUxODQ2\\n\" + \"MjlaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n\" + \"aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n\" + \"ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n\" + \"em9uIFJEUyBzYS1lYXN0LTEgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n\" + \"ADCCAQoCggEBAMMvR+ReRnOzqJzoaPipNTt1Z2VA968jlN1+SYKUrYM3No+Vpz0H\\n\" + \"M6Tn0oYB66ByVsXiGc28ulsqX1HbHsxqDPwvQTKvO7SrmDokoAkjJgLocOLUAeld\\n\" + \"5AwvUjxGRP6yY90NV7X786MpnYb2Il9DIIaV9HjCmPt+rjy2CZjS0UjPjCKNfB8J\\n\" + \"bFjgW6GGscjeyGb/zFwcom5p4j0rLydbNaOr9wOyQrtt3ZQWLYGY9Zees/b8pmcc\\n\" + \"Jt+7jstZ2UMV32OO/kIsJ4rMUn2r/uxccPwAc1IDeRSSxOrnFKhW3Cu69iB3bHp7\\n\" + \"JbawY12g7zshE4I14sHjv3QoXASoXjx4xgMCAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n\" + \"AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFI1Fc/Ql2jx+oJPgBVYq\\n\" + \"ccgP0pQ8MB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n\" + \"DQEBCwUAA4IBAQB4VVVabVp70myuYuZ3vltQIWqSUMhkaTzehMgGcHjMf9iLoZ/I\\n\" + \"93KiFUSGnek5cRePyS9wcpp0fcBT3FvkjpUdCjVtdttJgZFhBxgTd8y26ImdDDMR\\n\" + \"4+BUuhI5msvjL08f+Vkkpu1GQcGmyFVPFOy/UY8iefu+QyUuiBUnUuEDd49Hw0Fn\\n\" + \"/kIPII6Vj82a2mWV/Q8e+rgN8dIRksRjKI03DEoP8lhPlsOkhdwU6Uz9Vu6NOB2Q\\n\" + \"Ls1kbcxAc7cFSyRVJEhh12Sz9d0q/CQSTFsVJKOjSNQBQfVnLz1GwO/IieUEAr4C\\n\" + \"jkTntH0r1LX5b/GwN4R887LvjAEdTbg1his7\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIECDCCAvCgAwIBAgIDAIkHMA0GCSqGSIb3DQEBCwUAMIGPMQswCQYDVQQGEwJV\\n\" + \"UzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEiMCAGA1UE\\n\" + \"CgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJE\\n\" + \"UzEgMB4GA1UEAwwXQW1hem9uIFJEUyBSb290IDIwMTkgQ0EwHhcNMTkwOTA2MTc0\\n\" + \"MDIxWhcNMjQwODIyMTcwODUwWjCBlDELMAkGA1UEBhMCVVMxEzARBgNVBAgMCldh\\n\" + \"c2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoMGUFtYXpvbiBXZWIg\\n\" + \"U2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxJTAjBgNVBAMMHEFt\\n\" + \"YXpvbiBSRFMgdXMtd2VzdC0xIDIwMTkgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IB\\n\" + \"DwAwggEKAoIBAQDD2yzbbAl77OofTghDMEf624OvU0eS9O+lsdO0QlbfUfWa1Kd6\\n\" + \"0WkgjkLZGfSRxEHMCnrv4UPBSK/Qwn6FTjkDLgemhqBtAnplN4VsoDL+BkRX4Wwq\\n\" + \"/dSQJE2b+0hm9w9UMVGFDEq1TMotGGTD2B71eh9HEKzKhGzqiNeGsiX4VV+LJzdH\\n\" + \"uM23eGisNqmd4iJV0zcAZ+Gbh2zK6fqTOCvXtm7Idccv8vZZnyk1FiWl3NR4WAgK\\n\" + \"AkvWTIoFU3Mt7dIXKKClVmvssG8WHCkd3Xcb4FHy/G756UZcq67gMMTX/9fOFM/v\\n\" + \"l5C0+CHl33Yig1vIDZd+fXV1KZD84dEJfEvHAgMBAAGjZjBkMA4GA1UdDwEB/wQE\\n\" + \"AwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBR+ap20kO/6A7pPxo3+\\n\" + \"T3CfqZpQWjAfBgNVHSMEGDAWgBRzX2DYvMsDmPQrFzQuNlqmYP+8HzANBgkqhkiG\\n\" + \"9w0BAQsFAAOCAQEAHCJky2tPjPttlDM/RIqExupBkNrnSYnOK4kr9xJ3sl8UF2DA\\n\" + \"PAnYsjXp3rfcjN/k/FVOhxwzi3cXJF/2Tjj39Bm/OEfYTOJDNYtBwB0VVH4ffa/6\\n\" + \"tZl87jaIkrxJcreeeHqYMnIxeN0b/kliyA+a5L2Yb0VPjt9INq34QDc1v74FNZ17\\n\" + \"4z8nr1nzg4xsOWu0Dbjo966lm4nOYIGBRGOKEkHZRZ4mEiMgr3YLkv8gSmeitx57\\n\" + \"Z6dVemNtUic/LVo5Iqw4n3TBS0iF2C1Q1xT/s3h+0SXZlfOWttzSluDvoMv5PvCd\\n\" + \"pFjNn+aXLAALoihL1MJSsxydtsLjOBro5eK0Vw==\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEDDCCAvSgAwIBAgICOFAwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n\" + \"MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n\" + \"DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n\" + \"MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTAxNzQ2\\n\" + \"MjFaFw0yNDA4MjIxNzA4NTBaMIGZMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n\" + \"aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n\" + \"ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEqMCgGA1UEAwwhQW1h\\n\" + \"em9uIFJEUyBhcC1ub3J0aGVhc3QtMiAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEF\\n\" + \"AAOCAQ8AMIIBCgKCAQEAzU72e6XbaJbi4HjJoRNjKxzUEuChKQIt7k3CWzNnmjc5\\n\" + \"8I1MjCpa2W1iw1BYVysXSNSsLOtUsfvBZxi/1uyMn5ZCaf9aeoA9UsSkFSZBjOCN\\n\" + \"DpKPCmfV1zcEOvJz26+1m8WDg+8Oa60QV0ou2AU1tYcw98fOQjcAES0JXXB80P2s\\n\" + \"3UfkNcnDz+l4k7j4SllhFPhH6BQ4lD2NiFAP4HwoG6FeJUn45EPjzrydxjq6v5Fc\\n\" + \"cQ8rGuHADVXotDbEhaYhNjIrsPL+puhjWfhJjheEw8c4whRZNp6gJ/b6WEes/ZhZ\\n\" + \"h32DwsDsZw0BfRDUMgUn8TdecNexHUw8vQWeC181hwIDAQABo2YwZDAOBgNVHQ8B\\n\" + \"Af8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUwW9bWgkWkr0U\\n\" + \"lrOsq2kvIdrECDgwHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJ\\n\" + \"KoZIhvcNAQELBQADggEBAEugF0Gj7HVhX0ehPZoGRYRt3PBuI2YjfrrJRTZ9X5wc\\n\" + \"9T8oHmw07mHmNy1qqWvooNJg09bDGfB0k5goC2emDiIiGfc/kvMLI7u+eQOoMKj6\\n\" + \"mkfCncyRN3ty08Po45vTLBFZGUvtQmjM6yKewc4sXiASSBmQUpsMbiHRCL72M5qV\\n\" + \"obcJOjGcIdDTmV1BHdWT+XcjynsGjUqOvQWWhhLPrn4jWe6Xuxll75qlrpn3IrIx\\n\" + \"CRBv/5r7qbcQJPOgwQsyK4kv9Ly8g7YT1/vYBlR3cRsYQjccw5ceWUj2DrMVWhJ4\\n\" + \"prf+E3Aa4vYmLLOUUvKnDQ1k3RGNu56V0tonsQbfsaM=\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIECjCCAvKgAwIBAgICEzUwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n\" + \"MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n\" + \"DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n\" + \"MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTAyMDUy\\n\" + \"MjVaFw0yNDA4MjIxNzA4NTBaMIGXMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n\" + \"aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n\" + \"ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEoMCYGA1UEAwwfQW1h\\n\" + \"em9uIFJEUyBjYS1jZW50cmFsLTEgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQAD\\n\" + \"ggEPADCCAQoCggEBAOxHqdcPSA2uBjsCP4DLSlqSoPuQ/X1kkJLusVRKiQE2zayB\\n\" + \"viuCBt4VB9Qsh2rW3iYGM+usDjltGnI1iUWA5KHcvHszSMkWAOYWLiMNKTlg6LCp\\n\" + \"XnE89tvj5dIH6U8WlDvXLdjB/h30gW9JEX7S8supsBSci2GxEzb5mRdKaDuuF/0O\\n\" + \"qvz4YE04pua3iZ9QwmMFuTAOYzD1M72aOpj+7Ac+YLMM61qOtU+AU6MndnQkKoQi\\n\" + \"qmUN2A9IFaqHFzRlSdXwKCKUA4otzmz+/N3vFwjb5F4DSsbsrMfjeHMo6o/nb6Nh\\n\" + \"YDb0VJxxPee6TxSuN7CQJ2FxMlFUezcoXqwqXD0CAwEAAaNmMGQwDgYDVR0PAQH/\\n\" + \"BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFDGGpon9WfIpsggE\\n\" + \"CxHq8hZ7E2ESMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqG\\n\" + \"SIb3DQEBCwUAA4IBAQAvpeQYEGZvoTVLgV9rd2+StPYykMsmFjWQcyn3dBTZRXC2\\n\" + \"lKq7QhQczMAOhEaaN29ZprjQzsA2X/UauKzLR2Uyqc2qOeO9/YOl0H3qauo8C/W9\\n\" + \"r8xqPbOCDLEXlOQ19fidXyyEPHEq5WFp8j+fTh+s8WOx2M7IuC0ANEetIZURYhSp\\n\" + \"xl9XOPRCJxOhj7JdelhpweX0BJDNHeUFi0ClnFOws8oKQ7sQEv66d5ddxqqZ3NVv\\n\" + \"RbCvCtEutQMOUMIuaygDlMn1anSM8N7Wndx8G6+Uy67AnhjGx7jw/0YPPxopEj6x\\n\" + \"JXP8j0sJbcT9K/9/fPVLNT25RvQ/93T2+IQL4Ca2\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEBzCCAu+gAwIBAgICYpgwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n\" + \"MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n\" + \"DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n\" + \"MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTExNzMx\\n\" + \"NDhaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n\" + \"aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n\" + \"ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n\" + \"em9uIFJEUyBldS13ZXN0LTEgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n\" + \"ADCCAQoCggEBAMk3YdSZ64iAYp6MyyKtYJtNzv7zFSnnNf6vv0FB4VnfITTMmOyZ\\n\" + \"LXqKAT2ahZ00hXi34ewqJElgU6eUZT/QlzdIu359TEZyLVPwURflL6SWgdG01Q5X\\n\" + \"O++7fSGcBRyIeuQWs9FJNIIqK8daF6qw0Rl5TXfu7P9dBc3zkgDXZm2DHmxGDD69\\n\" + \"7liQUiXzoE1q2Z9cA8+jirDioJxN9av8hQt12pskLQumhlArsMIhjhHRgF03HOh5\\n\" + \"tvi+RCfihVOxELyIRTRpTNiIwAqfZxxTWFTgfn+gijTmd0/1DseAe82aYic8JbuS\\n\" + \"EMbrDduAWsqrnJ4GPzxHKLXX0JasCUcWyMECAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n\" + \"AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFPLtsq1NrwJXO13C9eHt\\n\" + \"sLY11AGwMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n\" + \"DQEBCwUAA4IBAQAnWBKj5xV1A1mYd0kIgDdkjCwQkiKF5bjIbGkT3YEFFbXoJlSP\\n\" + \"0lZZ/hDaOHI8wbLT44SzOvPEEmWF9EE7SJzkvSdQrUAWR9FwDLaU427ALI3ngNHy\\n\" + \"lGJ2hse1fvSRNbmg8Sc9GBv8oqNIBPVuw+AJzHTacZ1OkyLZrz1c1QvwvwN2a+Jd\\n\" + \"vH0V0YIhv66llKcYDMUQJAQi4+8nbRxXWv6Gq3pvrFoorzsnkr42V3JpbhnYiK+9\\n\" + \"nRKd4uWl62KRZjGkfMbmsqZpj2fdSWMY1UGyN1k+kDmCSWYdrTRDP0xjtIocwg+A\\n\" + \"J116n4hV/5mbA0BaPiS2krtv17YAeHABZcvz\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIECjCCAvKgAwIBAgICV2YwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n\" + \"MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n\" + \"DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n\" + \"MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTExOTM2\\n\" + \"MjBaFw0yNDA4MjIxNzA4NTBaMIGXMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n\" + \"aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n\" + \"ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEoMCYGA1UEAwwfQW1h\\n\" + \"em9uIFJEUyBldS1jZW50cmFsLTEgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQAD\\n\" + \"ggEPADCCAQoCggEBAMEx54X2pHVv86APA0RWqxxRNmdkhAyp2R1cFWumKQRofoFv\\n\" + \"n+SPXdkpIINpMuEIGJANozdiEz7SPsrAf8WHyD93j/ZxrdQftRcIGH41xasetKGl\\n\" + \"I67uans8d+pgJgBKGb/Z+B5m+UsIuEVekpvgpwKtmmaLFC/NCGuSsJoFsRqoa6Gh\\n\" + \"m34W6yJoY87UatddCqLY4IIXaBFsgK9Q/wYzYLbnWM6ZZvhJ52VMtdhcdzeTHNW0\\n\" + \"5LGuXJOF7Ahb4JkEhoo6TS2c0NxB4l4MBfBPgti+O7WjR3FfZHpt18A6Zkq6A2u6\\n\" + \"D/oTSL6c9/3sAaFTFgMyL3wHb2YlW0BPiljZIqECAwEAAaNmMGQwDgYDVR0PAQH/\\n\" + \"BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFOcAToAc6skWffJa\\n\" + \"TnreaswAfrbcMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqG\\n\" + \"SIb3DQEBCwUAA4IBAQA1d0Whc1QtspK496mFWfFEQNegLh0a9GWYlJm+Htcj5Nxt\\n\" + \"DAIGXb+8xrtOZFHmYP7VLCT5Zd2C+XytqseK/+s07iAr0/EPF+O2qcyQWMN5KhgE\\n\" + \"cXw2SwuP9FPV3i+YAm11PBVeenrmzuk9NrdHQ7TxU4v7VGhcsd2C++0EisrmquWH\\n\" + \"mgIfmVDGxphwoES52cY6t3fbnXmTkvENvR+h3rj+fUiSz0aSo+XZUGHPgvuEKM/W\\n\" + \"CBD9Smc9CBoBgvy7BgHRgRUmwtABZHFUIEjHI5rIr7ZvYn+6A0O6sogRfvVYtWFc\\n\" + \"qpyrW1YX8mD0VlJ8fGKM3G+aCOsiiPKDV/Uafrm+\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIECDCCAvCgAwIBAgICGAcwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n\" + \"MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n\" + \"DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n\" + \"MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTIxODE5\\n\" + \"NDRaFw0yNDA4MjIxNzA4NTBaMIGVMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n\" + \"aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n\" + \"ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEmMCQGA1UEAwwdQW1h\\n\" + \"em9uIFJEUyBldS1ub3J0aC0xIDIwMTkgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IB\\n\" + \"DwAwggEKAoIBAQCiIYnhe4UNBbdBb/nQxl5giM0XoVHWNrYV5nB0YukA98+TPn9v\\n\" + \"Aoj1RGYmtryjhrf01Kuv8SWO+Eom95L3zquoTFcE2gmxCfk7bp6qJJ3eHOJB+QUO\\n\" + \"XsNRh76fwDzEF1yTeZWH49oeL2xO13EAx4PbZuZpZBttBM5zAxgZkqu4uWQczFEs\\n\" + \"JXfla7z2fvWmGcTagX10O5C18XaFroV0ubvSyIi75ue9ykg/nlFAeB7O0Wxae88e\\n\" + \"uhiBEFAuLYdqWnsg3459NfV8Yi1GnaitTym6VI3tHKIFiUvkSiy0DAlAGV2iiyJE\\n\" + \"q+DsVEO4/hSINJEtII4TMtysOsYPpINqeEzRAgMBAAGjZjBkMA4GA1UdDwEB/wQE\\n\" + \"AwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBRR0UpnbQyjnHChgmOc\\n\" + \"hnlc0PogzTAfBgNVHSMEGDAWgBRzX2DYvMsDmPQrFzQuNlqmYP+8HzANBgkqhkiG\\n\" + \"9w0BAQsFAAOCAQEAKJD4xVzSf4zSGTBJrmamo86jl1NHQxXUApAZuBZEc8tqC6TI\\n\" + \"T5CeoSr9CMuVC8grYyBjXblC4OsM5NMvmsrXl/u5C9dEwtBFjo8mm53rOOIm1fxl\\n\" + \"I1oYB/9mtO9ANWjkykuLzWeBlqDT/i7ckaKwalhLODsRDO73vRhYNjsIUGloNsKe\\n\" + \"pxw3dzHwAZx4upSdEVG4RGCZ1D0LJ4Gw40OfD69hfkDfRVVxKGrbEzqxXRvovmDc\\n\" + \"tKLdYZO/6REoca36v4BlgIs1CbUXJGLSXUwtg7YXGLSVBJ/U0+22iGJmBSNcoyUN\\n\" + \"cjPFD9JQEhDDIYYKSGzIYpvslvGc4T5ISXFiuQ==\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEBzCCAu+gAwIBAgICZIEwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n\" + \"MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n\" + \"DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n\" + \"MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTIyMTMy\\n\" + \"MzJaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n\" + \"aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n\" + \"ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n\" + \"em9uIFJEUyBldS13ZXN0LTIgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n\" + \"ADCCAQoCggEBALGiwqjiF7xIjT0Sx7zB3764K2T2a1DHnAxEOr+/EIftWKxWzT3u\\n\" + \"PFwS2eEZcnKqSdRQ+vRzonLBeNLO4z8aLjQnNbkizZMBuXGm4BqRm1Kgq3nlLDQn\\n\" + \"7YqdijOq54SpShvR/8zsO4sgMDMmHIYAJJOJqBdaus2smRt0NobIKc0liy7759KB\\n\" + \"6kmQ47Gg+kfIwxrQA5zlvPLeQImxSoPi9LdbRoKvu7Iot7SOa+jGhVBh3VdqndJX\\n\" + \"7tm/saj4NE375csmMETFLAOXjat7zViMRwVorX4V6AzEg1vkzxXpA9N7qywWIT5Y\\n\" + \"fYaq5M8i6vvLg0CzrH9fHORtnkdjdu1y+0MCAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n\" + \"AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFFOhOx1yt3Z7mvGB9jBv\\n\" + \"2ymdZwiOMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n\" + \"DQEBCwUAA4IBAQBehqY36UGDvPVU9+vtaYGr38dBbp+LzkjZzHwKT1XJSSUc2wqM\\n\" + \"hnCIQKilonrTIvP1vmkQi8qHPvDRtBZKqvz/AErW/ZwQdZzqYNFd+BmOXaeZWV0Q\\n\" + \"oHtDzXmcwtP8aUQpxN0e1xkWb1E80qoy+0uuRqb/50b/R4Q5qqSfJhkn6z8nwB10\\n\" + \"7RjLtJPrK8igxdpr3tGUzfAOyiPrIDncY7UJaL84GFp7WWAkH0WG3H8Y8DRcRXOU\\n\" + \"mqDxDLUP3rNuow3jnGxiUY+gGX5OqaZg4f4P6QzOSmeQYs6nLpH0PiN00+oS1BbD\\n\" + \"bpWdZEttILPI+vAYkU4QuBKKDjJL6HbSd+cn\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIECDCCAvCgAwIBAgIDAIVCMA0GCSqGSIb3DQEBCwUAMIGPMQswCQYDVQQGEwJV\\n\" + \"UzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEiMCAGA1UE\\n\" + \"CgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJE\\n\" + \"UzEgMB4GA1UEAwwXQW1hem9uIFJEUyBSb290IDIwMTkgQ0EwHhcNMTkwOTEzMTcw\\n\" + \"NjQxWhcNMjQwODIyMTcwODUwWjCBlDELMAkGA1UEBhMCVVMxEzARBgNVBAgMCldh\\n\" + \"c2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoMGUFtYXpvbiBXZWIg\\n\" + \"U2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxJTAjBgNVBAMMHEFt\\n\" + \"YXpvbiBSRFMgdXMtZWFzdC0yIDIwMTkgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IB\\n\" + \"DwAwggEKAoIBAQDE+T2xYjUbxOp+pv+gRA3FO24+1zCWgXTDF1DHrh1lsPg5k7ht\\n\" + \"2KPYzNc+Vg4E+jgPiW0BQnA6jStX5EqVh8BU60zELlxMNvpg4KumniMCZ3krtMUC\\n\" + \"au1NF9rM7HBh+O+DYMBLK5eSIVt6lZosOb7bCi3V6wMLA8YqWSWqabkxwN4w0vXI\\n\" + \"8lu5uXXFRemHnlNf+yA/4YtN4uaAyd0ami9+klwdkZfkrDOaiy59haOeBGL8EB/c\\n\" + \"dbJJlguHH5CpCscs3RKtOOjEonXnKXldxarFdkMzi+aIIjQ8GyUOSAXHtQHb3gZ4\\n\" + \"nS6Ey0CMlwkB8vUObZU9fnjKJcL5QCQqOfwvAgMBAAGjZjBkMA4GA1UdDwEB/wQE\\n\" + \"AwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBQUPuRHohPxx4VjykmH\\n\" + \"6usGrLL1ETAfBgNVHSMEGDAWgBRzX2DYvMsDmPQrFzQuNlqmYP+8HzANBgkqhkiG\\n\" + \"9w0BAQsFAAOCAQEAUdR9Vb3y33Yj6X6KGtuthZ08SwjImVQPtknzpajNE5jOJAh8\\n\" + \"quvQnU9nlnMO85fVDU1Dz3lLHGJ/YG1pt1Cqq2QQ200JcWCvBRgdvH6MjHoDQpqZ\\n\" + \"HvQ3vLgOGqCLNQKFuet9BdpsHzsctKvCVaeBqbGpeCtt3Hh/26tgx0rorPLw90A2\\n\" + \"V8QSkZJjlcKkLa58N5CMM8Xz8KLWg3MZeT4DmlUXVCukqK2RGuP2L+aME8dOxqNv\\n\" + \"OnOz1zrL5mR2iJoDpk8+VE/eBDmJX40IJk6jBjWoxAO/RXq+vBozuF5YHN1ujE92\\n\" + \"tO8HItgTp37XT8bJBAiAnt5mxw+NLSqtxk2QdQ==\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEDDCCAvSgAwIBAgICY4kwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n\" + \"MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n\" + \"DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n\" + \"MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTMyMDEx\\n\" + \"NDJaFw0yNDA4MjIxNzA4NTBaMIGZMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n\" + \"aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n\" + \"ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEqMCgGA1UEAwwhQW1h\\n\" + \"em9uIFJEUyBhcC1zb3V0aGVhc3QtMSAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEF\\n\" + \"AAOCAQ8AMIIBCgKCAQEAr5u9OuLL/OF/fBNUX2kINJLzFl4DnmrhnLuSeSnBPgbb\\n\" + \"qddjf5EFFJBfv7IYiIWEFPDbDG5hoBwgMup5bZDbas+ZTJTotnnxVJTQ6wlhTmns\\n\" + \"eHECcg2pqGIKGrxZfbQhlj08/4nNAPvyYCTS0bEcmQ1emuDPyvJBYDDLDU6AbCB5\\n\" + \"6Z7YKFQPTiCBblvvNzchjLWF9IpkqiTsPHiEt21sAdABxj9ityStV3ja/W9BfgxH\\n\" + \"wzABSTAQT6FbDwmQMo7dcFOPRX+hewQSic2Rn1XYjmNYzgEHisdUsH7eeXREAcTw\\n\" + \"61TRvaLH8AiOWBnTEJXPAe6wYfrcSd1pD0MXpoB62wIDAQABo2YwZDAOBgNVHQ8B\\n\" + \"Af8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUytwMiomQOgX5\\n\" + \"Ichd+2lDWRUhkikwHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJ\\n\" + \"KoZIhvcNAQELBQADggEBACf6lRDpfCD7BFRqiWM45hqIzffIaysmVfr+Jr+fBTjP\\n\" + \"uYe/ba1omSrNGG23bOcT9LJ8hkQJ9d+FxUwYyICQNWOy6ejicm4z0C3VhphbTPqj\\n\" + \"yjpt9nG56IAcV8BcRJh4o/2IfLNzC/dVuYJV8wj7XzwlvjysenwdrJCoLadkTr1h\\n\" + \"eIdG6Le07sB9IxrGJL9e04afk37h7c8ESGSE4E+oS4JQEi3ATq8ne1B9DQ9SasXi\\n\" + \"IRmhNAaISDzOPdyLXi9N9V9Lwe/DHcja7hgLGYx3UqfjhLhOKwp8HtoZORixAmOI\\n\" + \"HfILgNmwyugAbuZoCazSKKBhQ0wgO0WZ66ZKTMG8Oho=\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEBzCCAu+gAwIBAgICUYkwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n\" + \"MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n\" + \"DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n\" + \"MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTYxODIx\\n\" + \"MTVaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n\" + \"aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n\" + \"ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n\" + \"em9uIFJEUyB1cy13ZXN0LTIgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n\" + \"ADCCAQoCggEBANCEZBZyu6yJQFZBJmSUZfSZd3Ui2gitczMKC4FLr0QzkbxY+cLa\\n\" + \"uVONIOrPt4Rwi+3h/UdnUg917xao3S53XDf1TDMFEYp4U8EFPXqCn/GXBIWlU86P\\n\" + \"PvBN+gzw3nS+aco7WXb+woTouvFVkk8FGU7J532llW8o/9ydQyDIMtdIkKTuMfho\\n\" + \"OiNHSaNc+QXQ32TgvM9A/6q7ksUoNXGCP8hDOkSZ/YOLiI5TcdLh/aWj00ziL5bj\\n\" + \"pvytiMZkilnc9dLY9QhRNr0vGqL0xjmWdoEXz9/OwjmCihHqJq+20MJPsvFm7D6a\\n\" + \"2NKybR9U+ddrjb8/iyLOjURUZnj5O+2+OPcCAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n\" + \"AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFEBxMBdv81xuzqcK5TVu\\n\" + \"pHj+Aor8MB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n\" + \"DQEBCwUAA4IBAQBZkfiVqGoJjBI37aTlLOSjLcjI75L5wBrwO39q+B4cwcmpj58P\\n\" + \"3sivv+jhYfAGEbQnGRzjuFoyPzWnZ1DesRExX+wrmHsLLQbF2kVjLZhEJMHF9eB7\\n\" + \"GZlTPdTzHErcnuXkwA/OqyXMpj9aghcQFuhCNguEfnROY9sAoK2PTfnTz9NJHL+Q\\n\" + \"UpDLEJEUfc0GZMVWYhahc0x38ZnSY2SKacIPECQrTI0KpqZv/P+ijCEcMD9xmYEb\\n\" + \"jL4en+XKS1uJpw5fIU5Sj0MxhdGstH6S84iAE5J3GM3XHklGSFwwqPYvuTXvANH6\\n\" + \"uboynxRgSae59jIlAK6Jrr6GWMwQRbgcaAlW\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEDDCCAvSgAwIBAgICEkYwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n\" + \"MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n\" + \"DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n\" + \"MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTYxOTUz\\n\" + \"NDdaFw0yNDA4MjIxNzA4NTBaMIGZMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n\" + \"aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n\" + \"ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEqMCgGA1UEAwwhQW1h\\n\" + \"em9uIFJEUyBhcC1zb3V0aGVhc3QtMiAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEF\\n\" + \"AAOCAQ8AMIIBCgKCAQEAufodI2Flker8q7PXZG0P0vmFSlhQDw907A6eJuF/WeMo\\n\" + \"GHnll3b4S6nC3oRS3nGeRMHbyU2KKXDwXNb3Mheu+ox+n5eb/BJ17eoj9HbQR1cd\\n\" + \"gEkIciiAltf8gpMMQH4anP7TD+HNFlZnP7ii3geEJB2GGXSxgSWvUzH4etL67Zmn\\n\" + \"TpGDWQMB0T8lK2ziLCMF4XAC/8xDELN/buHCNuhDpxpPebhct0T+f6Arzsiswt2j\\n\" + \"7OeNeLLZwIZvVwAKF7zUFjC6m7/VmTQC8nidVY559D6l0UhhU0Co/txgq3HVsMOH\\n\" + \"PbxmQUwJEKAzQXoIi+4uZzHFZrvov/nDTNJUhC6DqwIDAQABo2YwZDAOBgNVHQ8B\\n\" + \"Af8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUwaZpaCme+EiV\\n\" + \"M5gcjeHZSTgOn4owHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJ\\n\" + \"KoZIhvcNAQELBQADggEBAAR6a2meCZuXO2TF9bGqKGtZmaah4pH2ETcEVUjkvXVz\\n\" + \"sl+ZKbYjrun+VkcMGGKLUjS812e7eDF726ptoku9/PZZIxlJB0isC/0OyixI8N4M\\n\" + \"NsEyvp52XN9QundTjkl362bomPnHAApeU0mRbMDRR2JdT70u6yAzGLGsUwMkoNnw\\n\" + \"1VR4XKhXHYGWo7KMvFrZ1KcjWhubxLHxZWXRulPVtGmyWg/MvE6KF+2XMLhojhUL\\n\" + \"+9jB3Fpn53s6KMx5tVq1x8PukHmowcZuAF8k+W4gk8Y68wIwynrdZrKRyRv6CVtR\\n\" + \"FZ8DeJgoNZT3y/GT254VqMxxfuy2Ccb/RInd16tEvVk=\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEDDCCAvSgAwIBAgICOYIwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n\" + \"MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n\" + \"DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n\" + \"MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTcyMDA1\\n\" + \"MjlaFw0yNDA4MjIxNzA4NTBaMIGZMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n\" + \"aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n\" + \"ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEqMCgGA1UEAwwhQW1h\\n\" + \"em9uIFJEUyBhcC1ub3J0aGVhc3QtMyAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEF\\n\" + \"AAOCAQ8AMIIBCgKCAQEA4dMak8W+XW8y/2F6nRiytFiA4XLwePadqWebGtlIgyCS\\n\" + \"kbug8Jv5w7nlMkuxOxoUeD4WhI6A9EkAn3r0REM/2f0aYnd2KPxeqS2MrtdxxHw1\\n\" + \"xoOxk2x0piNSlOz6yog1idsKR5Wurf94fvM9FdTrMYPPrDabbGqiBMsZZmoHLvA3\\n\" + \"Z+57HEV2tU0Ei3vWeGIqnNjIekS+E06KhASxrkNU5vi611UsnYZlSi0VtJsH4UGV\\n\" + \"LhnHl53aZL0YFO5mn/fzuNG/51qgk/6EFMMhaWInXX49Dia9FnnuWXwVwi6uX1Wn\\n\" + \"7kjoHi5VtmC8ZlGEHroxX2DxEr6bhJTEpcLMnoQMqwIDAQABo2YwZDAOBgNVHQ8B\\n\" + \"Af8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUsUI5Cb3SWB8+\\n\" + \"gv1YLN/ABPMdxSAwHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJ\\n\" + \"KoZIhvcNAQELBQADggEBAJAF3E9PM1uzVL8YNdzb6fwJrxxqI2shvaMVmC1mXS+w\\n\" + \"G0zh4v2hBZOf91l1EO0rwFD7+fxoI6hzQfMxIczh875T6vUXePKVOCOKI5wCrDad\\n\" + \"zQbVqbFbdhsBjF4aUilOdtw2qjjs9JwPuB0VXN4/jY7m21oKEOcnpe36+7OiSPjN\\n\" + \"xngYewCXKrSRqoj3mw+0w/+exYj3Wsush7uFssX18av78G+ehKPIVDXptOCP/N7W\\n\" + \"8iKVNeQ2QGTnu2fzWsGUSvMGyM7yqT+h1ILaT//yQS8er511aHMLc142bD4D9VSy\\n\" + \"DgactwPDTShK/PXqhvNey9v/sKXm4XatZvwcc8KYlW4=\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEDDCCAvSgAwIBAgICcEUwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n\" + \"MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n\" + \"DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n\" + \"MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTgxNjU2\\n\" + \"MjBaFw0yNDA4MjIxNzA4NTBaMIGZMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n\" + \"aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n\" + \"ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEqMCgGA1UEAwwhQW1h\\n\" + \"em9uIFJEUyBhcC1ub3J0aGVhc3QtMSAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEF\\n\" + \"AAOCAQ8AMIIBCgKCAQEAndtkldmHtk4TVQAyqhAvtEHSMb6pLhyKrIFved1WO3S7\\n\" + \"+I+bWwv9b2W/ljJxLq9kdT43bhvzonNtI4a1LAohS6bqyirmk8sFfsWT3akb+4Sx\\n\" + \"1sjc8Ovc9eqIWJCrUiSvv7+cS7ZTA9AgM1PxvHcsqrcUXiK3Jd/Dax9jdZE1e15s\\n\" + \"BEhb2OEPE+tClFZ+soj8h8Pl2Clo5OAppEzYI4LmFKtp1X/BOf62k4jviXuCSst3\\n\" + \"UnRJzE/CXtjmN6oZySVWSe0rQYuyqRl6//9nK40cfGKyxVnimB8XrrcxUN743Vud\\n\" + \"QQVU0Esm8OVTX013mXWQXJHP2c0aKkog8LOga0vobQIDAQABo2YwZDAOBgNVHQ8B\\n\" + \"Af8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQULmoOS1mFSjj+\\n\" + \"snUPx4DgS3SkLFYwHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJ\\n\" + \"KoZIhvcNAQELBQADggEBAAkVL2P1M2/G9GM3DANVAqYOwmX0Xk58YBHQu6iiQg4j\\n\" + \"b4Ky/qsZIsgT7YBsZA4AOcPKQFgGTWhe9pvhmXqoN3RYltN8Vn7TbUm/ZVDoMsrM\\n\" + \"gwv0+TKxW1/u7s8cXYfHPiTzVSJuOogHx99kBW6b2f99GbP7O1Sv3sLq4j6lVvBX\\n\" + \"Fiacf5LAWC925nvlTzLlBgIc3O9xDtFeAGtZcEtxZJ4fnGXiqEnN4539+nqzIyYq\\n\" + \"nvlgCzyvcfRAxwltrJHuuRu6Maw5AGcd2Y0saMhqOVq9KYKFKuD/927BTrbd2JVf\\n\" + \"2sGWyuPZPCk3gq+5pCjbD0c6DkhcMGI6WwxvM5V/zSM=\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEBzCCAu+gAwIBAgICJDQwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n\" + \"MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n\" + \"DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n\" + \"MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTgxNzAz\\n\" + \"MTVaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n\" + \"aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n\" + \"ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n\" + \"em9uIFJEUyBldS13ZXN0LTMgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n\" + \"ADCCAQoCggEBAL9bL7KE0n02DLVtlZ2PL+g/BuHpMYFq2JnE2RgompGurDIZdjmh\\n\" + \"1pxfL3nT+QIVMubuAOy8InRfkRxfpxyjKYdfLJTPJG+jDVL+wDcPpACFVqoV7Prg\\n\" + \"pVYEV0lc5aoYw4bSeYFhdzgim6F8iyjoPnObjll9mo4XsHzSoqJLCd0QC+VG9Fw2\\n\" + \"q+GDRZrLRmVM2oNGDRbGpGIFg77aRxRapFZa8SnUgs2AqzuzKiprVH5i0S0M6dWr\\n\" + \"i+kk5epmTtkiDHceX+dP/0R1NcnkCPoQ9TglyXyPdUdTPPRfKCq12dftqll+u4mV\\n\" + \"ARdN6WFjovxax8EAP2OAUTi1afY+1JFMj+sCAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n\" + \"AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFLfhrbrO5exkCVgxW0x3\\n\" + \"Y2mAi8lNMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n\" + \"DQEBCwUAA4IBAQAigQ5VBNGyw+OZFXwxeJEAUYaXVoP/qrhTOJ6mCE2DXUVEoJeV\\n\" + \"SxScy/TlFA9tJXqmit8JH8VQ/xDL4ubBfeMFAIAo4WzNWDVoeVMqphVEcDWBHsI1\\n\" + \"AETWzfsapRS9yQekOMmxg63d/nV8xewIl8aNVTHdHYXMqhhik47VrmaVEok1UQb3\\n\" + \"O971RadLXIEbVd9tjY5bMEHm89JsZDnDEw1hQXBb67Elu64OOxoKaHBgUH8AZn/2\\n\" + \"zFsL1ynNUjOhCSAA15pgd1vjwc0YsBbAEBPcHBWYBEyME6NLNarjOzBl4FMtATSF\\n\" + \"wWCKRGkvqN8oxYhwR2jf2rR5Mu4DWkK5Q8Ep\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEBzCCAu+gAwIBAgICJVUwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n\" + \"MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n\" + \"DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n\" + \"MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTkxODE2\\n\" + \"NTNaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n\" + \"aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n\" + \"ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n\" + \"em9uIFJEUyB1cy1lYXN0LTEgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n\" + \"ADCCAQoCggEBAM3i/k2u6cqbMdcISGRvh+m+L0yaSIoOXjtpNEoIftAipTUYoMhL\\n\" + \"InXGlQBVA4shkekxp1N7HXe1Y/iMaPEyb3n+16pf3vdjKl7kaSkIhjdUz3oVUEYt\\n\" + \"i8Z/XeJJ9H2aEGuiZh3kHixQcZczn8cg3dA9aeeyLSEnTkl/npzLf//669Ammyhs\\n\" + \"XcAo58yvT0D4E0D/EEHf2N7HRX7j/TlyWvw/39SW0usiCrHPKDLxByLojxLdHzso\\n\" + \"QIp/S04m+eWn6rmD+uUiRteN1hI5ncQiA3wo4G37mHnUEKo6TtTUh+sd/ku6a8HK\\n\" + \"glMBcgqudDI90s1OpuIAWmuWpY//8xEG2YECAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n\" + \"AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFPqhoWZcrVY9mU7tuemR\\n\" + \"RBnQIj1jMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n\" + \"DQEBCwUAA4IBAQB6zOLZ+YINEs72heHIWlPZ8c6WY8MDU+Be5w1M+BK2kpcVhCUK\\n\" + \"PJO4nMXpgamEX8DIiaO7emsunwJzMSvavSPRnxXXTKIc0i/g1EbiDjnYX9d85DkC\\n\" + \"E1LaAUCmCZBVi9fIe0H2r9whIh4uLWZA41oMnJx/MOmo3XyMfQoWcqaSFlMqfZM4\\n\" + \"0rNoB/tdHLNuV4eIdaw2mlHxdWDtF4oH+HFm+2cVBUVC1jXKrFv/euRVtsTT+A6i\\n\" + \"h2XBHKxQ1Y4HgAn0jACP2QSPEmuoQEIa57bEKEcZsBR8SDY6ZdTd2HLRIApcCOSF\\n\" + \"MRM8CKLeF658I0XgF8D5EsYoKPsA+74Z+jDH\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIDQTCCAimgAwIBAgITBmyfz5m/jAo54vB4ikPmljZbyjANBgkqhkiG9w0BAQsF\\n\" + \"ADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\\n\" + \"b24gUm9vdCBDQSAxMB4XDTE1MDUyNjAwMDAwMFoXDTM4MDExNzAwMDAwMFowOTEL\\n\" + \"MAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\\n\" + \"b3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\\n\" + \"ca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\\n\" + \"9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\\n\" + \"IFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\\n\" + \"VOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\\n\" + \"93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\\n\" + \"jgSubJrIqg0CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC\\n\" + \"AYYwHQYDVR0OBBYEFIQYzIU07LwMlJQuCFmcx7IQTgoIMA0GCSqGSIb3DQEBCwUA\\n\" + \"A4IBAQCY8jdaQZChGsV2USggNiMOruYou6r4lK5IpDB/G/wkjUu0yKGX9rbxenDI\\n\" + \"U5PMCCjjmCXPI6T53iHTfIUJrU6adTrCC2qJeHZERxhlbI1Bjjt/msv0tadQ1wUs\\n\" + \"N+gDS63pYaACbvXy8MWy7Vu33PqUXHeeE6V/Uq2V8viTO96LXFvKWlJbYK8U90vv\\n\" + \"o/ufQJVtMVT8QtPHRh8jrdkPSHCa2XV4cdFyQzR1bldZwgJcJmApzyMZFo6IQ6XU\\n\" + \"5MsI+yMRQ+hDKXJioaldXgjUkK642M4UwtBV8ob2xJNDd2ZhwLnoQdeXeGADbkpy\\n\" + \"rqXRfboQnoZsG4q5WTP468SQvvG5\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEDDCCAvSgAwIBAgIJAMy5uCBvP5roMA0GCSqGSIb3DQEBCwUAMIGSMQswCQYD\\n\" + \"VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n\" + \"MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n\" + \"em9uIFJEUzEjMCEGA1UEAwwaQW1hem9uIFJEUyBDTiBSb290IDIwMTkgQ0EwHhcN\\n\" + \"MTkwOTA5MTY1NzIyWhcNMjQwOTA5MTY1NzIyWjCBkjELMAkGA1UEBhMCVVMxEDAO\\n\" + \"BgNVBAcMB1NlYXR0bGUxEzARBgNVBAgMCldhc2hpbmd0b24xIjAgBgNVBAoMGUFt\\n\" + \"YXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxIzAh\\n\" + \"BgNVBAMMGkFtYXpvbiBSRFMgQ04gUm9vdCAyMDE5IENBMIIBIjANBgkqhkiG9w0B\\n\" + \"AQEFAAOCAQ8AMIIBCgKCAQEAzxl9K4p06ZTZ9eZmEXyTHe9Ut8OIZR86t6A8b8g0\\n\" + \"nhqMe+y4ee+UfqxumVAVyXwNXOiGQVbuJhScLaJ39/Ol4YzIGjdoD8MUvsf4BuET\\n\" + \"udQh2sJL8OnlXuqSICKpecN5ud4UQvoMVZ9FGJ+e8TvXczW14rGO62sPfYM/WrMD\\n\" + \"R7P4fhQfmWFzkc24/hZGRL1nkvwMdtiwuI2TYobhlwZQOdsNcZ9Ek+PcSI4oqgXN\\n\" + \"SqpYy85JzrRZiR5iFGw1CnJtGlC0oatXFzw/B8XOd9wvLTlJhyLo7zw9j3zedKbv\\n\" + \"33fTdjfvpGvcfw9CYggwrbsVmUeUhVDfMntTc9z9MRccmwIDAQABo2MwYTAOBgNV\\n\" + \"HQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU/Z0g+hUMGQou\\n\" + \"hsbyFgSxc5jsbaowHwYDVR0jBBgwFoAU/Z0g+hUMGQouhsbyFgSxc5jsbaowDQYJ\\n\" + \"KoZIhvcNAQELBQADggEBAAlGPCq1D/PGkWoZZpAK3V94EOByklp2HkUPEZ0PPv3Z\\n\" + \"/euD2wUPkXnf27FC1XJE0pJX96B97ZXIEHl4S4obBRSlybzuvmfH4gyu+b+7Tebv\\n\" + \"VmfsAodyfYCm90heAYADWkc/XKDj+oe3NkbR+LokrM+5aOB71f5mMLnFgYHQW/dI\\n\" + \"IRDziUSpP0LMr+YNKvM7qytrobPS2TOWtweWpXesNBBeiLTHZpTEu8DYcE+4e2tj\\n\" + \"O0spF3HuoF0Oc7ioVy2exE+HV1oJOquHGSanZSdMHCAEDMfKUmlT7/zcwC877UT/\\n\" + \"sysqYU/fl6vX48QDfalZuBYj+d1dUxIb1sx6q4Iw4+s=\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEDDCCAvSgAwIBAgIDAIMzMA0GCSqGSIb3DQEBCwUAMIGSMQswCQYDVQQGEwJV\\n\" + \"UzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEiMCAGA1UE\\n\" + \"CgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJE\\n\" + \"UzEjMCEGA1UEAwwaQW1hem9uIFJEUyBDTiBSb290IDIwMTkgQ0EwHhcNMTkwOTA5\\n\" + \"MjAzMjM3WhcNMjQwOTA5MTY1NzIyWjCBlTELMAkGA1UEBhMCVVMxEzARBgNVBAgM\\n\" + \"Cldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoMGUFtYXpvbiBX\\n\" + \"ZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxJjAkBgNVBAMM\\n\" + \"HUFtYXpvbiBSRFMgY24tbm9ydGgtMSAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEF\\n\" + \"AAOCAQ8AMIIBCgKCAQEA1QX8vbiba8pa4b2CLVBNhqFFYwsuekptFPv/RTixRZ6K\\n\" + \"a1fZ/vp/d7xhfhwU9DKXyQ3ONhwOVKnFuvQuWXQiPc2cRkxM+TF7yF6hoPrIOOzr\\n\" + \"s6ANmR2k/n9X0aOO7sqx4q7A73ueIDJst3IjfaFgt1jaqfC7tcSSROB/+vZZTNGP\\n\" + \"KgFvd02ut2mCtLgohzavVDicUc0V8H1sV5Ah4n0VafW7Fqru9ehiPO79JXJKIS7W\\n\" + \"gcgOOiK6YDqxaQRN+LTNYdZ+DZ1+Gx8NBN80fVOO2hpRFpb662k/hQH8onYkvXaY\\n\" + \"kr9ouDTjfr5t8E8CEvkO/Y/B3/lt7mVjEGqImCwJawIDAQABo2YwZDAOBgNVHQ8B\\n\" + \"Af8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUXJaoUok7ROtv\\n\" + \"5/2xeuaRqelnejIwHwYDVR0jBBgwFoAU/Z0g+hUMGQouhsbyFgSxc5jsbaowDQYJ\\n\" + \"KoZIhvcNAQELBQADggEBAIiPRsCpaiMsWUq7liRV6NDgljzjVOMzUsDnfusGUQtO\\n\" + \"fa3tCI+sx5j92jFzlS0GwseB/3FjVQDRll/kFTqbVwpHw2kaLeAbVvquxZAoD/91\\n\" + \"6gBGSF3qmLestFpf02kNHlv9skqnMrBLYkQ4kckgt4Y8E8pNLSeNtJykbp7XCf7H\\n\" + \"A+izbITBxNHxLUqMStEtk8RhIWUmiAbp5ENHwYCL5h9g4VV7X4TsW/1Q4KgEstWa\\n\" + \"1t65VWr3p7NnKpMX5CL/v5FGCYq0TDdr3qmHKbXbofmUKltZ7VxSAh5LFrfLuGzt\\n\" + \"MtXQkd0NDvVqMNHAjEkj7/MtlYyridWrKsiUc3ALBR4=\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIGADCCA+igAwIBAgIQfFbtOHNGJtTnXjvwddAHjTANBgkqhkiG9w0BAQwFADCB\\n\" + \"mDELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n\" + \"Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChB\\n\" + \"bWF6b24gUkRTIGNuLW5vcnRoLTEgUm9vdCBDQSBSU0E0MDk2IEcxMRAwDgYDVQQH\\n\" + \"DAdTZWF0dGxlMCAXDTIxMDUyNTIzMTg1MloYDzIxMjEwNTI2MDAxODUyWjCBmDEL\\n\" + \"MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n\" + \"EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChBbWF6\\n\" + \"b24gUkRTIGNuLW5vcnRoLTEgUm9vdCBDQSBSU0E0MDk2IEcxMRAwDgYDVQQHDAdT\\n\" + \"ZWF0dGxlMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA0OO5+lCMwInN\\n\" + \"tMJ19bv+uyEE74uE5vHQHtla5sI1Hp+A8DhTURgJvIHRxv3Tgtk6ja4v/VcbLcVr\\n\" + \"R4OkZBY9b5RKHMGDK1ljwo/MxMFuK/TGkHcrjhiZcgYyNm2oxK33/YafLqq18a8p\\n\" + \"HREEZwz7wSi6DY8Mf9heH8a2T3ZDlUovj5JUVIDu7kSGYHw16eUi9twX7MtO0b43\\n\" + \"ociygADBSoZeyMKZHisYdyf4D/LLDYgh7ja+Ncu4k3ErMmxGN5cZN+USyquxmnr8\\n\" + \"uXkl2t9VH0BhB0kej/vO9DhLdpKJRVaML1A9Wg3pd0U37xOJhTU6wCm23zdga3kR\\n\" + \"bf9azdS68zDK9tYiDrGc7kRkj7SOUWLY7fagyKv3rESWXrGkV8lzsK7xseomAKvL\\n\" + \"fHEfL0QUD63kEk4W8VH8XY7NwXZD6Je5hiQtLu8/uxed96FWwZ1DJrzojW4mKFQF\\n\" + \"eECHU5b5jza4gjZ/pOeeqRmx3iojjYf2ZVm0+0SRFd+BWWPpqyeVUvC9gVZ+VMPr\\n\" + \"SUqgIrHZ2GMNJXIHt9TR3oq4XnXVcvsPuKQCWg8HIgczfDc//zaYhLdcVQbsTVEo\\n\" + \"I8nLqs6FygTnhyPSbJG9n9fF+RpTowXVb1UNovCTR/UBvR9l8JobnaqKUFMI1W2d\\n\" + \"Dy98l55+LFT1VYm+rbvxJlVJm9kw6usCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB\\n\" + \"/zAdBgNVHQ4EFgQUfVNPfvq3BkZRL2qrVKEvMbPBSHAwDgYDVR0PAQH/BAQDAgGG\\n\" + \"MA0GCSqGSIb3DQEBDAUAA4ICAQBZ9hDaGcZFSxEyV4Yk7ynJrpKznaLWaq8T72lb\\n\" + \"sXcgnGGnTYQtUhdR2atA6KVtc2D8UCxDiP4kE8xC+voGKgRRt3WvIX/KRiYH4Rr/\\n\" + \"8DS/wux6MYYEaXjoCil1xNTOyhMCmtEPIFo8LDStbaur/PmE5VGVr45XcqNdNt5A\\n\" + \"S8esMGK5aI7D2zQEfGN940+U2sUCVYnvuaR1nbcMkgMzzdL2yCCZ1mlyk2KvSsF7\\n\" + \"b0P772MnZ3x4mP3IcUh0/6XSSIxWMAB6r6s1nCZd2JGGIyVSc2YLsB2jib2gYyfT\\n\" + \"zq2SL040aatsOAecrfYDG6UbeL0OUXivhOzycvS92FhEDU0BNB44wEO0Qg/zAc2C\\n\" + \"JlkPCMKIZc9g70RhHQ9VV9kc/SCjVRu1PauryzTmXEfr+ItrbZVW33JQg7ZOmgfj\\n\" + \"jgpKF9q7sG2VJBDCRdp2nfeA1Bblc36yC0LodZ7voSzcJI7nnv1aO3U1CvQl0Mha\\n\" + \"fMjZqd0kPIX6d0G4C5SImvMCF59annWwt4V1sbWrgEvqdICe0kVsofUtEW35kX3C\\n\" + \"W344OxVkmhhFuniTFWYCyuQNlhIIdA0I5trZPtRaWsV2cTkNIzfe2vHGXuMnwd6V\\n\" + \"CwxPaPdyvKB7n6x6tF5RUOXq0EZQf9XOmdOiCTua1WT+vobRX18RtJLaOa/n5AKo\\n\" + \"LlYzqw==\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEATCCAumgAwIBAgIRAN9d6r2p5Wg5Gwl1bK3+WfkwDQYJKoZIhvcNAQELBQAw\\n\" + \"gZgxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n\" + \"bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTExMC8GA1UEAwwo\\n\" + \"QW1hem9uIFJEUyBjbi1ub3J0aC0xIFJvb3QgQ0EgUlNBMjA0OCBHMTEQMA4GA1UE\\n\" + \"BwwHU2VhdHRsZTAgFw0yMTA1MjUyMzE1MDdaGA8yMDYxMDUyNjAwMTUwN1owgZgx\\n\" + \"CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n\" + \"MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTExMC8GA1UEAwwoQW1h\\n\" + \"em9uIFJEUyBjbi1ub3J0aC0xIFJvb3QgQ0EgUlNBMjA0OCBHMTEQMA4GA1UEBwwH\\n\" + \"U2VhdHRsZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKvw4zHfM3cU\\n\" + \"yFI9KFITDF4feeon2P49qXx8YX8KUEYzNbkNQhPSt1J91kvy0ddHLrxxNd+LoQFi\\n\" + \"A5vu7a51VmX1MtKYs7SzEIUdrON3FKK/2cci2yCnwzoc3kam3jXvPUu56op+aH35\\n\" + \"0JHEco0i+NUjh7n5UV/yWc1+8kPLBQr+VMV3ndp85ik209esvCRWgQ+iWuADqHbf\\n\" + \"vjrFm/zjFIiwuX5qapkDtSRVwM6FwIfjSEF6udhZjsermfD2AoTesptZEiNIPRzV\\n\" + \"et6s/U5gMjvAhc+MQgjjdCLBlhbXWR1CPtXOMp6o8Pjn2Et3eiM6G1T0jUO28BGP\\n\" + \"3/iq3JOXFj8CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUEoBo\\n\" + \"nXIxui+T8RXYqgzikVat82EwDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBCwUA\\n\" + \"A4IBAQAk4XdDesWKYgE35KMqg2+tCY/gbBrKVMdvZzy2kAv9QH8bwCcojeMw4wGh\\n\" + \"u0mjfX0vawoot2bNY6Yu0+mVxBtkelhay7enN+mA5g5DfkyKkLb6Jg/9N7m95w4N\\n\" + \"ICQwM3Yb9OsuquxBPPE7JkrZv10AzVz2Xqu/OHDyDpfnkcCfNusHyIAycjxq/ZEF\\n\" + \"7LOSBv3S20sJU72EKfrNGSfMDv9qvnusum/vTYKuSNCTR0vARxbB7LLVZZ/Pg2w8\\n\" + \"22RQK9zr+u5WkfTGMqF4NnbuJGphU21QHUIZYY8QAnte0hbK+AbTUyeKGHxqRDun\\n\" + \"BQn6/GvgP2tPDKj/Huauo/CVSd+M\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIICrzCCAjWgAwIBAgIQTEq2iHmd2QzeVBzmBUbAUTAKBggqhkjOPQQDAzCBlzEL\\n\" + \"MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n\" + \"EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n\" + \"b24gUkRTIGNuLW5vcnRoLTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n\" + \"YXR0bGUwIBcNMjEwNTI1MjMyMjQ4WhgPMjEyMTA1MjYwMDIyNDhaMIGXMQswCQYD\\n\" + \"VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n\" + \"A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpvbiBS\\n\" + \"RFMgY24tbm9ydGgtMSBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UEBwwHU2VhdHRs\\n\" + \"ZTB2MBAGByqGSM49AgEGBSuBBAAiA2IABBV1FSsxoXGFDBIMj6b+EfJvLINkTtVv\\n\" + \"UucbGUqZMidNfuHoUWTlhwZuX5kMv9hlbQbDxrnHCePo1heHkdqovIi2D77lhvhn\\n\" + \"7UgMupcFx9Tjki+5QhKLW3n7W8dmreJLw6NCMEAwDwYDVR0TAQH/BAUwAwEB/zAd\\n\" + \"BgNVHQ4EFgQUFwPUFTDrjPqdIMjuYGif1wkAtr8wDgYDVR0PAQH/BAQDAgGGMAoG\\n\" + \"CCqGSM49BAMDA2gAMGUCMQCrAtoyWILR++OEhFmuJhSR8cgEW/rGyf+lMDwq9dcA\\n\" + \"eJPK7l9S8iT30JOo++hWwYcCMFl9MWvoQU3iUDH+j33I26+whkvZ6LLw2dajww1X\\n\" + \"0MPXbT3P9P0Jk/Vv+gand92fAw==\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEDDCCAvSgAwIBAgIJAMy5uCBvP5roMA0GCSqGSIb3DQEBCwUAMIGSMQswCQYD\\n\" + \"VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n\" + \"MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n\" + \"em9uIFJEUzEjMCEGA1UEAwwaQW1hem9uIFJEUyBDTiBSb290IDIwMTkgQ0EwHhcN\\n\" + \"MTkwOTA5MTY1NzIyWhcNMjQwOTA5MTY1NzIyWjCBkjELMAkGA1UEBhMCVVMxEDAO\\n\" + \"BgNVBAcMB1NlYXR0bGUxEzARBgNVBAgMCldhc2hpbmd0b24xIjAgBgNVBAoMGUFt\\n\" + \"YXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxIzAh\\n\" + \"BgNVBAMMGkFtYXpvbiBSRFMgQ04gUm9vdCAyMDE5IENBMIIBIjANBgkqhkiG9w0B\\n\" + \"AQEFAAOCAQ8AMIIBCgKCAQEAzxl9K4p06ZTZ9eZmEXyTHe9Ut8OIZR86t6A8b8g0\\n\" + \"nhqMe+y4ee+UfqxumVAVyXwNXOiGQVbuJhScLaJ39/Ol4YzIGjdoD8MUvsf4BuET\\n\" + \"udQh2sJL8OnlXuqSICKpecN5ud4UQvoMVZ9FGJ+e8TvXczW14rGO62sPfYM/WrMD\\n\" + \"R7P4fhQfmWFzkc24/hZGRL1nkvwMdtiwuI2TYobhlwZQOdsNcZ9Ek+PcSI4oqgXN\\n\" + \"SqpYy85JzrRZiR5iFGw1CnJtGlC0oatXFzw/B8XOd9wvLTlJhyLo7zw9j3zedKbv\\n\" + \"33fTdjfvpGvcfw9CYggwrbsVmUeUhVDfMntTc9z9MRccmwIDAQABo2MwYTAOBgNV\\n\" + \"HQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU/Z0g+hUMGQou\\n\" + \"hsbyFgSxc5jsbaowHwYDVR0jBBgwFoAU/Z0g+hUMGQouhsbyFgSxc5jsbaowDQYJ\\n\" + \"KoZIhvcNAQELBQADggEBAAlGPCq1D/PGkWoZZpAK3V94EOByklp2HkUPEZ0PPv3Z\\n\" + \"/euD2wUPkXnf27FC1XJE0pJX96B97ZXIEHl4S4obBRSlybzuvmfH4gyu+b+7Tebv\\n\" + \"VmfsAodyfYCm90heAYADWkc/XKDj+oe3NkbR+LokrM+5aOB71f5mMLnFgYHQW/dI\\n\" + \"IRDziUSpP0LMr+YNKvM7qytrobPS2TOWtweWpXesNBBeiLTHZpTEu8DYcE+4e2tj\\n\" + \"O0spF3HuoF0Oc7ioVy2exE+HV1oJOquHGSanZSdMHCAEDMfKUmlT7/zcwC877UT/\\n\" + \"sysqYU/fl6vX48QDfalZuBYj+d1dUxIb1sx6q4Iw4+s=\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEEDCCAvigAwIBAgIDAJJhMA0GCSqGSIb3DQEBCwUAMIGSMQswCQYDVQQGEwJV\\n\" + \"UzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEiMCAGA1UE\\n\" + \"CgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJE\\n\" + \"UzEjMCEGA1UEAwwaQW1hem9uIFJEUyBDTiBSb290IDIwMTkgQ0EwHhcNMTkwOTE3\\n\" + \"MTY0OTE3WhcNMjQwOTA5MTY1NzIyWjCBmTELMAkGA1UEBhMCVVMxEzARBgNVBAgM\\n\" + \"Cldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoMGUFtYXpvbiBX\\n\" + \"ZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxKjAoBgNVBAMM\\n\" + \"IUFtYXpvbiBSRFMgY24tbm9ydGh3ZXN0LTEgMjAxOSBDQTCCASIwDQYJKoZIhvcN\\n\" + \"AQEBBQADggEPADCCAQoCggEBAMr4bvXQVykL0RHtBALyP7FycubzLJM178wMw5vK\\n\" + \"QS/1IVlQlbdZ8bNYmSMqa2IlGoWdjvLonES0jD0T8LCOYJy0uPN0DfiH6I9v9th8\\n\" + \"TvG/hAD9pe01xLOUAOTzuikbzcxEf9XX6mG/xAh5rREHsLbQE9R7D4RkqdeJbQBc\\n\" + \"KVcWWrejW9XaleCr+iEuwSqzXYDXNyfJoYic8aNYA8bADG5YPWTPblxA8MCik+zD\\n\" + \"q9r5wMNafUKmdOAFP6qeYo0zA5o9ESM2xJdYqa2gF7lAYsMagtWZWfEW27ZUrYmf\\n\" + \"tlMXu5xF2zZ1z2n7GKBXa8kA+e/dzalUA5ONHZUDIpU51k8CAwEAAaNmMGQwDgYD\\n\" + \"VR0PAQH/BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFCV3kNIC\\n\" + \"8e01zUu6tXl0/ig8Va5OMB8GA1UdIwQYMBaAFP2dIPoVDBkKLobG8hYEsXOY7G2q\\n\" + \"MA0GCSqGSIb3DQEBCwUAA4IBAQDHKrXWXsv6KKb06XhuC6RrMsLW+fmQXbrU9x4V\\n\" + \"b46VEaHN8lvKx6QWmRKSdnCa7nYZkPUbGdcQtgThfEjkc+UEfJxx/Q2Hb1OslPcj\\n\" + \"Egx5M7NFCGoBbaSKOGnVexEKRfxA2zkPCMi7bDe2m8cgThyBHfsTJSVGJkXsf6VJ\\n\" + \"JKWJULYiHMjF31Npg++eB4iN42bqhPfP5nKloGjOs/TNYdT2rAcI8xZRsd+G+0Aw\\n\" + \"qlQ0VdPmxIK7M0Sv2StGD0244OXbq6A3Ojx4t7/Kl41+FuyaGlnALDvdiYF96Zu1\\n\" + \"VpA/pPn4AC3+/wrXOefZDFJ3dC1uKlIoh63Vv378oI2VQvw3\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIECTCCAvGgAwIBAgIRAOf+QbXXDGRJ7MW8j6FZ5ncwDQYJKoZIhvcNAQELBQAw\\n\" + \"gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n\" + \"bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n\" + \"QW1hem9uIFJEUyBjbi1ub3J0aHdlc3QtMSBSb290IENBIFJTQTIwNDggRzExEDAO\\n\" + \"BgNVBAcMB1NlYXR0bGUwIBcNMjEwNTI1MjI1NjEyWhgPMjA2MTA1MjUyMzU2MTJa\\n\" + \"MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n\" + \"SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n\" + \"LEFtYXpvbiBSRFMgY24tbm9ydGh3ZXN0LTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAw\\n\" + \"DgYDVQQHDAdTZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\n\" + \"0XBh/AY4j5RP9XUbYGMaCaBuG4FAbHU/Qfz/hHBNfy/QMi2hF4LQECGqp+j/8fML\\n\" + \"45c6b0NyCLvZuIfB4F1s+dctJpqauDqzYacw3/fMmxNyzgkrYa8VhoRdPWH6ZX2e\\n\" + \"0VNfTOJo64ShJaePdizBAoBnfX+xvDyZ6BLGtdUsvsfdDSCTt2fgTAk8DBTmHode\\n\" + \"hCC3EfVcAjk99+Fe0RWPnDBXQkA8VrbgSxXPN8Gfag1wIzS44BcxhxHDiwQoL4Ao\\n\" + \"FfOwvgRJANeUGcqnL5IpF8xxU3lk7nMcXuQu17597+UGwTiFLAT0bnVK/TgakefX\\n\" + \"M3ZH9gUi0Di3dJNIKtq/3wIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud\\n\" + \"DgQWBBTX4eJfUNknv33QnNNfkDsrYrO1uzAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZI\\n\" + \"hvcNAQELBQADggEBAKIlgCuSJYIgvHK2zoT9PugiyBE5vvo5HyrTOJIhPknB2aY7\\n\" + \"x2Gwbv7YlXzncpQM+aPA88PlIvwPmGj0Nb8ph6vZ55DOxWrBE8LuXMR/+71vMYaF\\n\" + \"M9iTud2OyRLa2EIpS7nq3jWKjiDFkfrkUg8JmLCWHv0qEANX8XJ5NVhrRSAJzvDA\\n\" + \"MArXq2k5oJZoRJxyGlz6dSoU/rxsQF/oTihpcH/cEbL6ZD8sZ5xLJpCHTJcnBAEZ\\n\" + \"L18sYc8F/91akqXn1re/7/K3NwT9usyh89e5pegx/U2ySI3KJuc464HmCV7YZ0iJ\\n\" + \"EQYsQRGFZr/Miu5V4hrpuggsrnmi/RagWYJGPfQ=\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIGCTCCA/GgAwIBAgIRAJ3YjujPNbJWN/domX9EvW8wDQYJKoZIhvcNAQEMBQAw\\n\" + \"gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n\" + \"bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n\" + \"QW1hem9uIFJEUyBjbi1ub3J0aHdlc3QtMSBSb290IENBIFJTQTQwOTYgRzExEDAO\\n\" + \"BgNVBAcMB1NlYXR0bGUwIBcNMjEwNTI1MjMwMDE1WhgPMjEyMTA1MjYwMDAwMTVa\\n\" + \"MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n\" + \"SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n\" + \"LEFtYXpvbiBSRFMgY24tbm9ydGh3ZXN0LTEgUm9vdCBDQSBSU0E0MDk2IEcxMRAw\\n\" + \"DgYDVQQHDAdTZWF0dGxlMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA\\n\" + \"y8Wy3CndOV9n8V3yZ3aOTm6sKlxmtS7GYlAiguNjyqS2ERP6x3l6JlkuKyAtYut/\\n\" + \"UOJL6TBWQNLUsNpFJnLkomaqWRYNjSSogSLt2F6BIr/fM8pOmXvBHg9OB/I24DUE\\n\" + \"6bKuVbe+qrGN6ypTAsrfZJ94ED0wmMb8RMOlXOBgB3GxbuQjUFN0XLXurJygj9k7\\n\" + \"SM3RQggoaO94T1qoi4LD/NS/4/Z3eUksLZgkC19fSSVnuUfu845x+MXlVhLeHcLo\\n\" + \"9IIONonUJvkKPS90TQtB2spSqFd+MkiX3izPDii1kHfFHsl2CzwcdbxvcAZ742np\\n\" + \"MjDFpE4Zl6Nf28jGm6ODg6F/yZIiqWpvDemfnHfgkv1SFJnMpIAnLEIRnD5iZPRY\\n\" + \"vP9tJVxGo/kB7ogYLKboOtQyzQC5G6KIbkblJ+MjVcf5iQIUn5Ir7s91/7s6uVRT\\n\" + \"OY76S3SppFQltNwh1yW5s7Ppc9XR5cp0F37NfEm90g+r2JMH6da+Zd0zd+oG4JUJ\\n\" + \"GQWAIhvoOo2jjfX33GqxJI5QrhyVFQpIGs6WU3Z7uZou6/orDaEzAkedMC4w53aZ\\n\" + \"KmJevk2btsWRcGTYyJxf5GZ9HnUcDApcZ9QZ/9f7iIrGPTO4W6BJ9wzzc5PoenlD\\n\" + \"oubhx9fofSIepk822gD/93fakRUJlYXKNvxJC8qXRn8CAwEAAaNCMEAwDwYDVR0T\\n\" + \"AQH/BAUwAwEB/zAdBgNVHQ4EFgQUbApE7vMSJDpJph7Lrq6rAMCwQF4wDgYDVR0P\\n\" + \"AQH/BAQDAgGGMA0GCSqGSIb3DQEBDAUAA4ICAQBSTbw8jIpZyAwQiJv5D6B9g4fX\\n\" + \"9PsTFTmb2eszZZZO/i0T8hbqAA3DmjjM5QqUdbjXiq4aLec04aH/ltc/12b6lypX\\n\" + \"sfhtUJd5rgVyEyi9VpZwL+3LrV8CC9rel1v1euOvQ+6ojsoU9PKVLSw5G1Owzy8x\\n\" + \"pQwJU9ZTIMgz0TdlFUugaccLH54uy/c7FclO8HpOwHbwMtuMrsEt3p9vea7UoSn3\\n\" + \"54usb0p8ex2brMrOxKmLXXQOGoDFF8U5JCivdQaYuG7LO9NocaeyLNkc22MrxvhV\\n\" + \"1x3I1CE5Y1vMEqf0B8mMl2tAZ6l68r8qv1SoIrvm3ioZpdDBNkyyYVfRLpvmQBw4\\n\" + \"F0NQIW5wAumqbyHLRKMf/wmeuBwYjWrAeJdwDTsNVDPnhXpTOobKH432+i7v5U8n\\n\" + \"1dcrLdYwzRMXxY2+Wrmgte2JdsvfNkcDou9ZnjqTt8u5L7eFd5kWOLnZAWtsIef5\\n\" + \"2QzfKFjpbg9q/zt9RcNULAUaMB0twG1G6eO9stPElE2B0k3wM0FCTXfrh8v0FWEx\\n\" + \"Zbnef3OwiiHHQ6EBHYvbZm0qwuYdBz8KtwurYwEUpgldls5hcj9eI3pDCjTzJncP\\n\" + \"GpVjJTtIE0CGOcAgIt5G6idQ1oQudW8DMb/M0QXibI5fjqEXYoYQEnjko9AqLdzI\\n\" + \"pn++DGngGu3NLeSVfA==\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIICtjCCAj2gAwIBAgIQHBx4LmhvEVmG1P6tMGhI8DAKBggqhkjOPQQDAzCBmzEL\\n\" + \"MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n\" + \"EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n\" + \"b24gUkRTIGNuLW5vcnRod2VzdC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n\" + \"DAdTZWF0dGxlMCAXDTIxMDUyNTIzMDM1NVoYDzIxMjEwNTI2MDAwMzU1WjCBmzEL\\n\" + \"MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n\" + \"EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n\" + \"b24gUkRTIGNuLW5vcnRod2VzdC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n\" + \"DAdTZWF0dGxlMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEJxUculiPchcuEWMgFK+T\\n\" + \"jmYSVKrpF0NbDteKKJ45BbTzhwwCSKyEY3vVCqwMQ+wYiJZ87OyxLU1cqq/WCg3s\\n\" + \"7aD8Ro9DezvR+Fu+/AV61BLCgeSLr9S1ZCC6cpn5l0a4o0IwQDAPBgNVHRMBAf8E\\n\" + \"BTADAQH/MB0GA1UdDgQWBBSK4CT2IBuyX0nXmkC15OHfxtqh8zAOBgNVHQ8BAf8E\\n\" + \"BAMCAYYwCgYIKoZIzj0EAwMDZwAwZAIwQB38Wg42v48d5O1i53hg2qF/H0QW/8eO\\n\" + \"/xVtA8PK2ztDgQm+O0vKb34nj6X4Kcn8AjBSJmft8t7LMN/UwnhptyYINerpDMzZ\\n\" + \"g0OtBwn1QMWWlkFNf8ajLURXKGg9e2mfkpw=\\n\" + \"-----END CERTIFICATE-----\\n\",\n        \"-----BEGIN CERTIFICATE-----\\n\" + \"MIIEIjCCAwqgAwIBAgIQI2AINKjtLFqXO+5mqmHJOzANBgkqhkiG9w0BAQsFADCB\\n\" + \"nDELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n\" + \"Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTUwMwYDVQQDDCxB\\n\" + \"bWF6b24gUkRTIGNuLW5vcnRod2VzdC0xIFJvb3QgQ0EgUlNBMjA0OCBHMTEQMA4G\\n\" + \"A1UEBwwHU2VhdHRsZTAeFw0yMTEwMjAyMjE5NTBaFw0yNjEwMjAyMzE5NTBaMIGU\\n\" + \"MQswCQYDVQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGlu\\n\" + \"Z3RvbjEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UE\\n\" + \"CwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1hem9uIFJEUyBjbi1ub3J0aHdlc3Qt\\n\" + \"MSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMk+1qHD+w3Wns8f\\n\" + \"WNs6ZKtd6r8eJSilT8SKdhuvZ77C2a5CRaWhihwTznGW1vCaR9+O4OIJZCJj3iV+\\n\" + \"75arKXK5XJTPNJo8aW5pW9ljh/KsudkT7gzURQ3n3xFiv9vQwPRSE9gPn20Cad8U\\n\" + \"64KPl20DvA1XD3CoaACafRz5BlZwGJAi6xI9DqdiQRGEcNlwBzMSv9E0MqkW9pDN\\n\" + \"+goGEkVyfLA83hUM58zXr7AwUEw7RH64rNZcoWYT89AVKvUQnyyEs6hZvIIVwTQm\\n\" + \"v/YpYEH3BsN/SshaQpmh1scN/aHurVfBn0ZaY2EaTBv/u1YsalhbnZglFX6581X7\\n\" + \"9UkEocECAwEAAaNmMGQwEgYDVR0TAQH/BAgwBgEB/wIBADAfBgNVHSMEGDAWgBTX\\n\" + \"4eJfUNknv33QnNNfkDsrYrO1uzAdBgNVHQ4EFgQUfGOsnDYUtkLIlP6gKPd/lkbh\\n\" + \"sn4wDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBCwUAA4IBAQCxYKgzCB6gcrYi\\n\" + \"1op0n615lk/hLD5LEmpNYYgqtOOAPf7mGF1VLu+GtDmyAqRnQjr80hFO2Tvdv614\\n\" + \"u0D5joapjD+aAQIb+OeVVmXYPm3UfUotnUkHGalkofEWkS/7h/dUzKARBdpsKBP9\\n\" + \"ezSf8GBVRd0EDP8PLK5iplX4B+aQxmIBgYNIXSlgjaNX8SfjzKsRiLPmumWrb7gi\\n\" + \"lbqkdRuafQ3hj6K+I2JbgEEz2ggNBgUiwJRr+2B511RWHu3wEW86aEbl0+f5crJA\\n\" + \"XNn0nVq3tl8XMkorbAD+/8dbxMxV5wtMHY7nWsG8TlJ+8Vb9FwC5vIWSYun8u3Rh\\n\" + \"tOoQ3GAy\\n\" + \"-----END CERTIFICATE-----\\n\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/ssl_profiles.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/types.js":
/*!****************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/types.js ***!
  \****************************************************/
/***/ ((module) => {

eval("\nmodule.exports = {\n    0x00: \"DECIMAL\",\n    0x01: \"TINY\",\n    0x02: \"SHORT\",\n    0x03: \"LONG\",\n    0x04: \"FLOAT\",\n    0x05: \"DOUBLE\",\n    0x06: \"NULL\",\n    0x07: \"TIMESTAMP\",\n    0x08: \"LONGLONG\",\n    0x09: \"INT24\",\n    0x0a: \"DATE\",\n    0x0b: \"TIME\",\n    0x0c: \"DATETIME\",\n    0x0d: \"YEAR\",\n    0x0e: \"NEWDATE\",\n    0x0f: \"VARCHAR\",\n    0x10: \"BIT\",\n    0xf5: \"JSON\",\n    0xf6: \"NEWDECIMAL\",\n    0xf7: \"ENUM\",\n    0xf8: \"SET\",\n    0xf9: \"TINY_BLOB\",\n    0xfa: \"MEDIUM_BLOB\",\n    0xfb: \"LONG_BLOB\",\n    0xfc: \"BLOB\",\n    0xfd: \"VAR_STRING\",\n    0xfe: \"STRING\",\n    0xff: \"GEOMETRY\" // aka GEOMETRY\n};\n// Manually extracted from mysql-5.5.23/include/mysql_com.h\n// some more info here: http://dev.mysql.com/doc/refman/5.5/en/c-api-prepared-statement-type-codes.html\nmodule.exports.DECIMAL = 0x00; // aka DECIMAL (http://dev.mysql.com/doc/refman/5.0/en/precision-math-decimal-changes.html)\nmodule.exports.TINY = 0x01; // aka TINYINT, 1 byte\nmodule.exports.SHORT = 0x02; // aka SMALLINT, 2 bytes\nmodule.exports.LONG = 0x03; // aka INT, 4 bytes\nmodule.exports.FLOAT = 0x04; // aka FLOAT, 4-8 bytes\nmodule.exports.DOUBLE = 0x05; // aka DOUBLE, 8 bytes\nmodule.exports.NULL = 0x06; // NULL (used for prepared statements, I think)\nmodule.exports.TIMESTAMP = 0x07; // aka TIMESTAMP\nmodule.exports.LONGLONG = 0x08; // aka BIGINT, 8 bytes\nmodule.exports.INT24 = 0x09; // aka MEDIUMINT, 3 bytes\nmodule.exports.DATE = 0x0a; // aka DATE\nmodule.exports.TIME = 0x0b; // aka TIME\nmodule.exports.DATETIME = 0x0c; // aka DATETIME\nmodule.exports.YEAR = 0x0d; // aka YEAR, 1 byte (don't ask)\nmodule.exports.NEWDATE = 0x0e; // aka ?\nmodule.exports.VARCHAR = 0x0f; // aka VARCHAR (?)\nmodule.exports.BIT = 0x10; // aka BIT, 1-8 byte\nmodule.exports.JSON = 0xf5;\nmodule.exports.NEWDECIMAL = 0xf6; // aka DECIMAL\nmodule.exports.ENUM = 0xf7; // aka ENUM\nmodule.exports.SET = 0xf8; // aka SET\nmodule.exports.TINY_BLOB = 0xf9; // aka TINYBLOB, TINYTEXT\nmodule.exports.MEDIUM_BLOB = 0xfa; // aka MEDIUMBLOB, MEDIUMTEXT\nmodule.exports.LONG_BLOB = 0xfb; // aka LONGBLOG, LONGTEXT\nmodule.exports.BLOB = 0xfc; // aka BLOB, TEXT\nmodule.exports.VAR_STRING = 0xfd; // aka VARCHAR, VARBINARY\nmodule.exports.STRING = 0xfe; // aka CHAR, BINARY\nmodule.exports.GEOMETRY = 0xff; // aka GEOMETRY\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHO0lBQ2YsTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTSxXQUFXLGVBQWU7QUFDbEM7QUFHQSwyREFBMkQ7QUFDM0QsdUdBQXVHO0FBQ3ZHRCxzQkFBc0IsR0FBRyxNQUFNLDJGQUEyRjtBQUMxSEEsbUJBQW1CLEdBQUcsTUFBTSxzQkFBc0I7QUFDbERBLG9CQUFvQixHQUFHLE1BQU0sd0JBQXdCO0FBQ3JEQSxtQkFBbUIsR0FBRyxNQUFNLG1CQUFtQjtBQUMvQ0Esb0JBQW9CLEdBQUcsTUFBTSx1QkFBdUI7QUFDcERBLHFCQUFxQixHQUFHLE1BQU0sc0JBQXNCO0FBQ3BEQSxtQkFBbUIsR0FBRyxNQUFNLCtDQUErQztBQUMzRUEsd0JBQXdCLEdBQUcsTUFBTSxnQkFBZ0I7QUFDakRBLHVCQUF1QixHQUFHLE1BQU0sc0JBQXNCO0FBQ3REQSxvQkFBb0IsR0FBRyxNQUFNLHlCQUF5QjtBQUN0REEsbUJBQW1CLEdBQUcsTUFBTSxXQUFXO0FBQ3ZDQSxtQkFBbUIsR0FBRyxNQUFNLFdBQVc7QUFDdkNBLHVCQUF1QixHQUFHLE1BQU0sZUFBZTtBQUMvQ0EsbUJBQW1CLEdBQUcsTUFBTSwrQkFBK0I7QUFDM0RBLHNCQUFzQixHQUFHLE1BQU0sUUFBUTtBQUN2Q0Esc0JBQXNCLEdBQUcsTUFBTSxrQkFBa0I7QUFDakRBLGtCQUFrQixHQUFHLE1BQU0sb0JBQW9CO0FBQy9DQSxtQkFBbUIsR0FBRztBQUN0QkEseUJBQXlCLEdBQUcsTUFBTSxjQUFjO0FBQ2hEQSxtQkFBbUIsR0FBRyxNQUFNLFdBQVc7QUFDdkNBLGtCQUFrQixHQUFHLE1BQU0sVUFBVTtBQUNyQ0Esd0JBQXdCLEdBQUcsTUFBTSx5QkFBeUI7QUFDMURBLDBCQUEwQixHQUFHLE1BQU0sNkJBQTZCO0FBQ2hFQSx3QkFBd0IsR0FBRyxNQUFNLHlCQUF5QjtBQUMxREEsbUJBQW1CLEdBQUcsTUFBTSxpQkFBaUI7QUFDN0NBLHlCQUF5QixHQUFHLE1BQU0seUJBQXlCO0FBQzNEQSxxQkFBcUIsR0FBRyxNQUFNLG1CQUFtQjtBQUNqREEsdUJBQXVCLEdBQUcsTUFBTSxlQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWNlZS1wcm90by1vbmUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvdHlwZXMuanM/MzUxMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAweDAwOiAnREVDSU1BTCcsIC8vIGFrYSBERUNJTUFMIFxuICAweDAxOiAnVElOWScsIC8vIGFrYSBUSU5ZSU5ULCAxIGJ5dGVcbiAgMHgwMjogJ1NIT1JUJywgLy8gYWthIFNNQUxMSU5ULCAyIGJ5dGVzXG4gIDB4MDM6ICdMT05HJywgLy8gYWthIElOVCwgNCBieXRlc1xuICAweDA0OiAnRkxPQVQnLCAvLyBha2EgRkxPQVQsIDQtOCBieXRlc1xuICAweDA1OiAnRE9VQkxFJywgLy8gYWthIERPVUJMRSwgOCBieXRlc1xuICAweDA2OiAnTlVMTCcsIC8vIE5VTEwgKHVzZWQgZm9yIHByZXBhcmVkIHN0YXRlbWVudHMsIEkgdGhpbmspXG4gIDB4MDc6ICdUSU1FU1RBTVAnLCAvLyBha2EgVElNRVNUQU1QXG4gIDB4MDg6ICdMT05HTE9ORycsIC8vIGFrYSBCSUdJTlQsIDggYnl0ZXNcbiAgMHgwOTogJ0lOVDI0JywgLy8gYWthIE1FRElVTUlOVCwgMyBieXRlc1xuICAweDBhOiAnREFURScsIC8vIGFrYSBEQVRFXG4gIDB4MGI6ICdUSU1FJywgLy8gYWthIFRJTUVcbiAgMHgwYzogJ0RBVEVUSU1FJywgLy8gYWthIERBVEVUSU1FXG4gIDB4MGQ6ICdZRUFSJywgLy8gYWthIFlFQVIsIDEgYnl0ZSAoZG9uJ3QgYXNrKVxuICAweDBlOiAnTkVXREFURScsIC8vIGFrYSA/XG4gIDB4MGY6ICdWQVJDSEFSJywgLy8gYWthIFZBUkNIQVIgKD8pXG4gIDB4MTA6ICdCSVQnLCAvLyBha2EgQklULCAxLTggYnl0ZVxuICAweGY1OiAnSlNPTicsXG4gIDB4ZjY6ICdORVdERUNJTUFMJywgLy8gYWthIERFQ0lNQUxcbiAgMHhmNzogJ0VOVU0nLCAvLyBha2EgRU5VTVxuICAweGY4OiAnU0VUJywgLy8gYWthIFNFVFxuICAweGY5OiAnVElOWV9CTE9CJywgLy8gYWthIFRJTllCTE9CLCBUSU5ZVEVYVFxuICAweGZhOiAnTUVESVVNX0JMT0InLCAvLyBha2EgTUVESVVNQkxPQiwgTUVESVVNVEVYVFxuICAweGZiOiAnTE9OR19CTE9CJywgLy8gYWthIExPTkdCTE9HLCBMT05HVEVYVFxuICAweGZjOiAnQkxPQicsIC8vIGFrYSBCTE9CLCBURVhUXG4gIDB4ZmQ6ICdWQVJfU1RSSU5HJywgLy8gYWthIFZBUkNIQVIsIFZBUkJJTkFSWVxuICAweGZlOiAnU1RSSU5HJywgLy8gYWthIENIQVIsIEJJTkFSWVxuICAweGZmOiAnR0VPTUVUUlknIC8vIGFrYSBHRU9NRVRSWVxufTtcblxuXG4vLyBNYW51YWxseSBleHRyYWN0ZWQgZnJvbSBteXNxbC01LjUuMjMvaW5jbHVkZS9teXNxbF9jb20uaFxuLy8gc29tZSBtb3JlIGluZm8gaGVyZTogaHR0cDovL2Rldi5teXNxbC5jb20vZG9jL3JlZm1hbi81LjUvZW4vYy1hcGktcHJlcGFyZWQtc3RhdGVtZW50LXR5cGUtY29kZXMuaHRtbFxubW9kdWxlLmV4cG9ydHMuREVDSU1BTCA9IDB4MDA7IC8vIGFrYSBERUNJTUFMIChodHRwOi8vZGV2Lm15c3FsLmNvbS9kb2MvcmVmbWFuLzUuMC9lbi9wcmVjaXNpb24tbWF0aC1kZWNpbWFsLWNoYW5nZXMuaHRtbClcbm1vZHVsZS5leHBvcnRzLlRJTlkgPSAweDAxOyAvLyBha2EgVElOWUlOVCwgMSBieXRlXG5tb2R1bGUuZXhwb3J0cy5TSE9SVCA9IDB4MDI7IC8vIGFrYSBTTUFMTElOVCwgMiBieXRlc1xubW9kdWxlLmV4cG9ydHMuTE9ORyA9IDB4MDM7IC8vIGFrYSBJTlQsIDQgYnl0ZXNcbm1vZHVsZS5leHBvcnRzLkZMT0FUID0gMHgwNDsgLy8gYWthIEZMT0FULCA0LTggYnl0ZXNcbm1vZHVsZS5leHBvcnRzLkRPVUJMRSA9IDB4MDU7IC8vIGFrYSBET1VCTEUsIDggYnl0ZXNcbm1vZHVsZS5leHBvcnRzLk5VTEwgPSAweDA2OyAvLyBOVUxMICh1c2VkIGZvciBwcmVwYXJlZCBzdGF0ZW1lbnRzLCBJIHRoaW5rKVxubW9kdWxlLmV4cG9ydHMuVElNRVNUQU1QID0gMHgwNzsgLy8gYWthIFRJTUVTVEFNUFxubW9kdWxlLmV4cG9ydHMuTE9OR0xPTkcgPSAweDA4OyAvLyBha2EgQklHSU5ULCA4IGJ5dGVzXG5tb2R1bGUuZXhwb3J0cy5JTlQyNCA9IDB4MDk7IC8vIGFrYSBNRURJVU1JTlQsIDMgYnl0ZXNcbm1vZHVsZS5leHBvcnRzLkRBVEUgPSAweDBhOyAvLyBha2EgREFURVxubW9kdWxlLmV4cG9ydHMuVElNRSA9IDB4MGI7IC8vIGFrYSBUSU1FXG5tb2R1bGUuZXhwb3J0cy5EQVRFVElNRSA9IDB4MGM7IC8vIGFrYSBEQVRFVElNRVxubW9kdWxlLmV4cG9ydHMuWUVBUiA9IDB4MGQ7IC8vIGFrYSBZRUFSLCAxIGJ5dGUgKGRvbid0IGFzaylcbm1vZHVsZS5leHBvcnRzLk5FV0RBVEUgPSAweDBlOyAvLyBha2EgP1xubW9kdWxlLmV4cG9ydHMuVkFSQ0hBUiA9IDB4MGY7IC8vIGFrYSBWQVJDSEFSICg/KVxubW9kdWxlLmV4cG9ydHMuQklUID0gMHgxMDsgLy8gYWthIEJJVCwgMS04IGJ5dGVcbm1vZHVsZS5leHBvcnRzLkpTT04gPSAweGY1O1xubW9kdWxlLmV4cG9ydHMuTkVXREVDSU1BTCA9IDB4ZjY7IC8vIGFrYSBERUNJTUFMXG5tb2R1bGUuZXhwb3J0cy5FTlVNID0gMHhmNzsgLy8gYWthIEVOVU1cbm1vZHVsZS5leHBvcnRzLlNFVCA9IDB4Zjg7IC8vIGFrYSBTRVRcbm1vZHVsZS5leHBvcnRzLlRJTllfQkxPQiA9IDB4Zjk7IC8vIGFrYSBUSU5ZQkxPQiwgVElOWVRFWFRcbm1vZHVsZS5leHBvcnRzLk1FRElVTV9CTE9CID0gMHhmYTsgLy8gYWthIE1FRElVTUJMT0IsIE1FRElVTVRFWFRcbm1vZHVsZS5leHBvcnRzLkxPTkdfQkxPQiA9IDB4ZmI7IC8vIGFrYSBMT05HQkxPRywgTE9OR1RFWFRcbm1vZHVsZS5leHBvcnRzLkJMT0IgPSAweGZjOyAvLyBha2EgQkxPQiwgVEVYVFxubW9kdWxlLmV4cG9ydHMuVkFSX1NUUklORyA9IDB4ZmQ7IC8vIGFrYSBWQVJDSEFSLCBWQVJCSU5BUllcbm1vZHVsZS5leHBvcnRzLlNUUklORyA9IDB4ZmU7IC8vIGFrYSBDSEFSLCBCSU5BUllcbm1vZHVsZS5leHBvcnRzLkdFT01FVFJZID0gMHhmZjsgLy8gYWthIEdFT01FVFJZXG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIkRFQ0lNQUwiLCJUSU5ZIiwiU0hPUlQiLCJMT05HIiwiRkxPQVQiLCJET1VCTEUiLCJOVUxMIiwiVElNRVNUQU1QIiwiTE9OR0xPTkciLCJJTlQyNCIsIkRBVEUiLCJUSU1FIiwiREFURVRJTUUiLCJZRUFSIiwiTkVXREFURSIsIlZBUkNIQVIiLCJCSVQiLCJKU09OIiwiTkVXREVDSU1BTCIsIkVOVU0iLCJTRVQiLCJUSU5ZX0JMT0IiLCJNRURJVU1fQkxPQiIsIkxPTkdfQkxPQiIsIkJMT0IiLCJWQVJfU1RSSU5HIiwiU1RSSU5HIiwiR0VPTUVUUlkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/helpers.js":
/*!********************************************!*\
  !*** ./node_modules/mysql2/lib/helpers.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n\n  this seems to be not only shorter, but faster than\n  string.replace(/\\\\/g, '\\\\\\\\').\n            replace(/\\u0008/g, '\\\\b').\n            replace(/\\t/g, '\\\\t').\n            replace(/\\n/g, '\\\\n').\n            replace(/\\f/g, '\\\\f').\n            replace(/\\r/g, '\\\\r').\n            replace(/'/g, '\\\\\\'').\n            replace(/\"/g, '\\\\\"');\n  or string.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\")\n  see http://jsperf.com/string-escape-regexp-vs-json-stringify\n  */ function srcEscape(str) {\n    return JSON.stringify({\n        [str]: 1\n    }).slice(1, -3);\n}\nexports.srcEscape = srcEscape;\nlet highlightFn;\nlet cardinalRecommended = false;\ntry {\n    // the purpose of this is to prevent projects using Webpack from displaying a warning during runtime if cardinal is not a dependency\n    const REQUIRE_TERMINATOR = \"\";\n    highlightFn = __webpack_require__(\"(rsc)/./node_modules/mysql2/lib sync recursive ^cardinal.*$\")(`cardinal${REQUIRE_TERMINATOR}`).highlight;\n} catch (err) {\n    highlightFn = (text)=>{\n        if (!cardinalRecommended) {\n            // eslint-disable-next-line no-console\n            console.log(\"For nicer debug output consider install cardinal@^2.0.0\");\n            cardinalRecommended = true;\n        }\n        return text;\n    };\n}\n/**\n * Prints debug message with code frame, will try to use `cardinal` if available.\n */ function printDebugWithCode(msg, code) {\n    // eslint-disable-next-line no-console\n    console.log(`\\n\\n${msg}:\\n`);\n    // eslint-disable-next-line no-console\n    console.log(`${highlightFn(code)}\\n`);\n}\nexports.printDebugWithCode = printDebugWithCode;\n/**\n * checks whether the `type` is in the `list`\n */ function typeMatch(type, list, Types) {\n    if (Array.isArray(list)) {\n        return list.some((t)=>type === Types[t]);\n    }\n    return !!list;\n}\nexports.typeMatch = typeMatch;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9oZWxwZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUE7Ozs7Ozs7Ozs7Ozs7RUFhRSxHQUNGLFNBQVNBLFVBQVVDLEdBQUc7SUFDcEIsT0FBT0MsS0FBS0MsU0FBUyxDQUFDO1FBQ3BCLENBQUNGLElBQUksRUFBRTtJQUNULEdBQUdHLEtBQUssQ0FBQyxHQUFHLENBQUM7QUFDZjtBQUVBQyxpQkFBaUIsR0FBR0w7QUFFcEIsSUFBSU07QUFDSixJQUFJQyxzQkFBc0I7QUFDMUIsSUFBSTtJQUNGLG9JQUFvSTtJQUNwSSxNQUFNQyxxQkFBcUI7SUFDM0JGLGNBQWNHLG1GQUFRLFNBQVMsRUFBRUQsbUJBQW1CLENBQUMsQ0FBQyxDQUFDRSxTQUFTO0FBQ2xFLEVBQUUsT0FBT0MsS0FBSztJQUNaTCxjQUFjTSxDQUFBQTtRQUNaLElBQUksQ0FBQ0wscUJBQXFCO1lBQ3hCLHNDQUFzQztZQUN0Q00sUUFBUUMsR0FBRyxDQUFDO1lBQ1pQLHNCQUFzQjtRQUN4QjtRQUNBLE9BQU9LO0lBQ1Q7QUFDRjtBQUVBOztDQUVDLEdBQ0QsU0FBU0csbUJBQW1CQyxHQUFHLEVBQUVDLElBQUk7SUFDbkMsc0NBQXNDO0lBQ3RDSixRQUFRQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUVFLElBQUksR0FBRyxDQUFDO0lBQzNCLHNDQUFzQztJQUN0Q0gsUUFBUUMsR0FBRyxDQUFDLENBQUMsRUFBRVIsWUFBWVcsTUFBTSxFQUFFLENBQUM7QUFDdEM7QUFFQVosMEJBQTBCLEdBQUdVO0FBRTdCOztDQUVDLEdBQ0QsU0FBU0csVUFBVUMsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLEtBQUs7SUFDbEMsSUFBSUMsTUFBTUMsT0FBTyxDQUFDSCxPQUFPO1FBQ3ZCLE9BQU9BLEtBQUtJLElBQUksQ0FBQ0MsQ0FBQUEsSUFBS04sU0FBU0UsS0FBSyxDQUFDSSxFQUFFO0lBQ3pDO0lBRUEsT0FBTyxDQUFDLENBQUNMO0FBQ1g7QUFFQWYsaUJBQWlCLEdBQUdhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWNlZS1wcm90by1vbmUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9oZWxwZXJzLmpzPzRkODkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKlxuXG4gIHRoaXMgc2VlbXMgdG8gYmUgbm90IG9ubHkgc2hvcnRlciwgYnV0IGZhc3RlciB0aGFuXG4gIHN0cmluZy5yZXBsYWNlKC9cXFxcL2csICdcXFxcXFxcXCcpLlxuICAgICAgICAgICAgcmVwbGFjZSgvXFx1MDAwOC9nLCAnXFxcXGInKS5cbiAgICAgICAgICAgIHJlcGxhY2UoL1xcdC9nLCAnXFxcXHQnKS5cbiAgICAgICAgICAgIHJlcGxhY2UoL1xcbi9nLCAnXFxcXG4nKS5cbiAgICAgICAgICAgIHJlcGxhY2UoL1xcZi9nLCAnXFxcXGYnKS5cbiAgICAgICAgICAgIHJlcGxhY2UoL1xcci9nLCAnXFxcXHInKS5cbiAgICAgICAgICAgIHJlcGxhY2UoLycvZywgJ1xcXFxcXCcnKS5cbiAgICAgICAgICAgIHJlcGxhY2UoL1wiL2csICdcXFxcXCInKTtcbiAgb3Igc3RyaW5nLnJlcGxhY2UoL1tcXC1cXFtcXF1cXC9cXHtcXH1cXChcXClcXCpcXCtcXD9cXC5cXFxcXFxeXFwkXFx8XS9nLCBcIlxcXFwkJlwiKVxuICBzZWUgaHR0cDovL2pzcGVyZi5jb20vc3RyaW5nLWVzY2FwZS1yZWdleHAtdnMtanNvbi1zdHJpbmdpZnlcbiAgKi9cbmZ1bmN0aW9uIHNyY0VzY2FwZShzdHIpIHtcbiAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHtcbiAgICBbc3RyXTogMVxuICB9KS5zbGljZSgxLCAtMyk7XG59XG5cbmV4cG9ydHMuc3JjRXNjYXBlID0gc3JjRXNjYXBlO1xuXG5sZXQgaGlnaGxpZ2h0Rm47XG5sZXQgY2FyZGluYWxSZWNvbW1lbmRlZCA9IGZhbHNlO1xudHJ5IHtcbiAgLy8gdGhlIHB1cnBvc2Ugb2YgdGhpcyBpcyB0byBwcmV2ZW50IHByb2plY3RzIHVzaW5nIFdlYnBhY2sgZnJvbSBkaXNwbGF5aW5nIGEgd2FybmluZyBkdXJpbmcgcnVudGltZSBpZiBjYXJkaW5hbCBpcyBub3QgYSBkZXBlbmRlbmN5XG4gIGNvbnN0IFJFUVVJUkVfVEVSTUlOQVRPUiA9ICcnO1xuICBoaWdobGlnaHRGbiA9IHJlcXVpcmUoYGNhcmRpbmFsJHtSRVFVSVJFX1RFUk1JTkFUT1J9YCkuaGlnaGxpZ2h0O1xufSBjYXRjaCAoZXJyKSB7XG4gIGhpZ2hsaWdodEZuID0gdGV4dCA9PiB7XG4gICAgaWYgKCFjYXJkaW5hbFJlY29tbWVuZGVkKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgY29uc29sZS5sb2coJ0ZvciBuaWNlciBkZWJ1ZyBvdXRwdXQgY29uc2lkZXIgaW5zdGFsbCBjYXJkaW5hbEBeMi4wLjAnKTtcbiAgICAgIGNhcmRpbmFsUmVjb21tZW5kZWQgPSB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gdGV4dDtcbiAgfTtcbn1cblxuLyoqXG4gKiBQcmludHMgZGVidWcgbWVzc2FnZSB3aXRoIGNvZGUgZnJhbWUsIHdpbGwgdHJ5IHRvIHVzZSBgY2FyZGluYWxgIGlmIGF2YWlsYWJsZS5cbiAqL1xuZnVuY3Rpb24gcHJpbnREZWJ1Z1dpdGhDb2RlKG1zZywgY29kZSkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICBjb25zb2xlLmxvZyhgXFxuXFxuJHttc2d9OlxcbmApO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICBjb25zb2xlLmxvZyhgJHtoaWdobGlnaHRGbihjb2RlKX1cXG5gKTtcbn1cblxuZXhwb3J0cy5wcmludERlYnVnV2l0aENvZGUgPSBwcmludERlYnVnV2l0aENvZGU7XG5cbi8qKlxuICogY2hlY2tzIHdoZXRoZXIgdGhlIGB0eXBlYCBpcyBpbiB0aGUgYGxpc3RgXG4gKi9cbmZ1bmN0aW9uIHR5cGVNYXRjaCh0eXBlLCBsaXN0LCBUeXBlcykge1xuICBpZiAoQXJyYXkuaXNBcnJheShsaXN0KSkge1xuICAgIHJldHVybiBsaXN0LnNvbWUodCA9PiB0eXBlID09PSBUeXBlc1t0XSk7XG4gIH1cblxuICByZXR1cm4gISFsaXN0O1xufVxuXG5leHBvcnRzLnR5cGVNYXRjaCA9IHR5cGVNYXRjaDtcbiJdLCJuYW1lcyI6WyJzcmNFc2NhcGUiLCJzdHIiLCJKU09OIiwic3RyaW5naWZ5Iiwic2xpY2UiLCJleHBvcnRzIiwiaGlnaGxpZ2h0Rm4iLCJjYXJkaW5hbFJlY29tbWVuZGVkIiwiUkVRVUlSRV9URVJNSU5BVE9SIiwicmVxdWlyZSIsImhpZ2hsaWdodCIsImVyciIsInRleHQiLCJjb25zb2xlIiwibG9nIiwicHJpbnREZWJ1Z1dpdGhDb2RlIiwibXNnIiwiY29kZSIsInR5cGVNYXRjaCIsInR5cGUiLCJsaXN0IiwiVHlwZXMiLCJBcnJheSIsImlzQXJyYXkiLCJzb21lIiwidCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/helpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packet_parser.js":
/*!**************************************************!*\
  !*** ./node_modules/mysql2/lib/packet_parser.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Packet = __webpack_require__(/*! ./packets/packet.js */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst MAX_PACKET_LENGTH = 16777215;\nfunction readPacketLength(b, off) {\n    const b0 = b[off];\n    const b1 = b[off + 1];\n    const b2 = b[off + 2];\n    if (b1 + b2 === 0) {\n        return b0;\n    }\n    return b0 + (b1 << 8) + (b2 << 16);\n}\nclass PacketParser {\n    constructor(onPacket, packetHeaderLength){\n        // 4 for normal packets, 7 for comprssed protocol packets\n        if (typeof packetHeaderLength === \"undefined\") {\n            packetHeaderLength = 4;\n        }\n        // array of last payload chunks\n        // only used when current payload is not complete\n        this.buffer = [];\n        // total length of chunks on buffer\n        this.bufferLength = 0;\n        this.packetHeaderLength = packetHeaderLength;\n        // incomplete header state: number of header bytes received\n        this.headerLen = 0;\n        // expected payload length\n        this.length = 0;\n        this.largePacketParts = [];\n        this.firstPacketSequenceId = 0;\n        this.onPacket = onPacket;\n        this.execute = PacketParser.prototype.executeStart;\n        this._flushLargePacket = packetHeaderLength === 7 ? this._flushLargePacket7 : this._flushLargePacket4;\n    }\n    _flushLargePacket4() {\n        const numPackets = this.largePacketParts.length;\n        this.largePacketParts.unshift(Buffer.from([\n            0,\n            0,\n            0,\n            0\n        ])); // insert header\n        const body = Buffer.concat(this.largePacketParts);\n        const packet = new Packet(this.firstPacketSequenceId, body, 0, body.length);\n        this.largePacketParts.length = 0;\n        packet.numPackets = numPackets;\n        this.onPacket(packet);\n    }\n    _flushLargePacket7() {\n        const numPackets = this.largePacketParts.length;\n        this.largePacketParts.unshift(Buffer.from([\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0\n        ])); // insert header\n        const body = Buffer.concat(this.largePacketParts);\n        this.largePacketParts.length = 0;\n        const packet = new Packet(this.firstPacketSequenceId, body, 0, body.length);\n        packet.numPackets = numPackets;\n        this.onPacket(packet);\n    }\n    executeStart(chunk) {\n        let start = 0;\n        const end = chunk.length;\n        while(end - start >= 3){\n            this.length = readPacketLength(chunk, start);\n            if (end - start >= this.length + this.packetHeaderLength) {\n                // at least one full packet\n                const sequenceId = chunk[start + 3];\n                if (this.length < MAX_PACKET_LENGTH && this.largePacketParts.length === 0) {\n                    this.onPacket(new Packet(sequenceId, chunk, start, start + this.packetHeaderLength + this.length));\n                } else {\n                    // first large packet - remember it's id\n                    if (this.largePacketParts.length === 0) {\n                        this.firstPacketSequenceId = sequenceId;\n                    }\n                    this.largePacketParts.push(chunk.slice(start + this.packetHeaderLength, start + this.packetHeaderLength + this.length));\n                    if (this.length < MAX_PACKET_LENGTH) {\n                        this._flushLargePacket();\n                    }\n                }\n                start += this.packetHeaderLength + this.length;\n            } else {\n                // payload is incomplete\n                this.buffer = [\n                    chunk.slice(start + 3, end)\n                ];\n                this.bufferLength = end - start - 3;\n                this.execute = PacketParser.prototype.executePayload;\n                return;\n            }\n        }\n        if (end - start > 0) {\n            // there is start of length header, but it's not full 3 bytes\n            this.headerLen = end - start; // 1 or 2 bytes\n            this.length = chunk[start];\n            if (this.headerLen === 2) {\n                this.length = chunk[start] + (chunk[start + 1] << 8);\n                this.execute = PacketParser.prototype.executeHeader3;\n            } else {\n                this.execute = PacketParser.prototype.executeHeader2;\n            }\n        }\n    }\n    executePayload(chunk) {\n        let start = 0;\n        const end = chunk.length;\n        const remainingPayload = this.length - this.bufferLength + this.packetHeaderLength - 3;\n        if (end - start >= remainingPayload) {\n            // last chunk for payload\n            const payload = Buffer.allocUnsafe(this.length + this.packetHeaderLength);\n            let offset = 3;\n            for(let i = 0; i < this.buffer.length; ++i){\n                this.buffer[i].copy(payload, offset);\n                offset += this.buffer[i].length;\n            }\n            chunk.copy(payload, offset, start, start + remainingPayload);\n            const sequenceId = payload[3];\n            if (this.length < MAX_PACKET_LENGTH && this.largePacketParts.length === 0) {\n                this.onPacket(new Packet(sequenceId, payload, 0, this.length + this.packetHeaderLength));\n            } else {\n                // first large packet - remember it's id\n                if (this.largePacketParts.length === 0) {\n                    this.firstPacketSequenceId = sequenceId;\n                }\n                this.largePacketParts.push(payload.slice(this.packetHeaderLength, this.packetHeaderLength + this.length));\n                if (this.length < MAX_PACKET_LENGTH) {\n                    this._flushLargePacket();\n                }\n            }\n            this.buffer = [];\n            this.bufferLength = 0;\n            this.execute = PacketParser.prototype.executeStart;\n            start += remainingPayload;\n            if (end - start > 0) {\n                return this.execute(chunk.slice(start, end));\n            }\n        } else {\n            this.buffer.push(chunk);\n            this.bufferLength += chunk.length;\n        }\n        return null;\n    }\n    executeHeader2(chunk) {\n        this.length += chunk[0] << 8;\n        if (chunk.length > 1) {\n            this.length += chunk[1] << 16;\n            this.execute = PacketParser.prototype.executePayload;\n            return this.executePayload(chunk.slice(2));\n        }\n        this.execute = PacketParser.prototype.executeHeader3;\n        return null;\n    }\n    executeHeader3(chunk) {\n        this.length += chunk[0] << 16;\n        this.execute = PacketParser.prototype.executePayload;\n        return this.executePayload(chunk.slice(1));\n    }\n}\nmodule.exports = PacketParser;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRfcGFyc2VyLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsU0FBU0MsbUJBQU9BLENBQUM7QUFFdkIsTUFBTUMsb0JBQW9CO0FBRTFCLFNBQVNDLGlCQUFpQkMsQ0FBQyxFQUFFQyxHQUFHO0lBQzlCLE1BQU1DLEtBQUtGLENBQUMsQ0FBQ0MsSUFBSTtJQUNqQixNQUFNRSxLQUFLSCxDQUFDLENBQUNDLE1BQU0sRUFBRTtJQUNyQixNQUFNRyxLQUFLSixDQUFDLENBQUNDLE1BQU0sRUFBRTtJQUNyQixJQUFJRSxLQUFLQyxPQUFPLEdBQUc7UUFDakIsT0FBT0Y7SUFDVDtJQUNBLE9BQU9BLEtBQU1DLENBQUFBLE1BQU0sS0FBTUMsQ0FBQUEsTUFBTSxFQUFDO0FBQ2xDO0FBRUEsTUFBTUM7SUFDSkMsWUFBWUMsUUFBUSxFQUFFQyxrQkFBa0IsQ0FBRTtRQUN4Qyx5REFBeUQ7UUFDekQsSUFBSSxPQUFPQSx1QkFBdUIsYUFBYTtZQUM3Q0EscUJBQXFCO1FBQ3ZCO1FBQ0EsK0JBQStCO1FBQy9CLGlEQUFpRDtRQUNqRCxJQUFJLENBQUNDLE1BQU0sR0FBRyxFQUFFO1FBQ2hCLG1DQUFtQztRQUNuQyxJQUFJLENBQUNDLFlBQVksR0FBRztRQUNwQixJQUFJLENBQUNGLGtCQUFrQixHQUFHQTtRQUMxQiwyREFBMkQ7UUFDM0QsSUFBSSxDQUFDRyxTQUFTLEdBQUc7UUFDakIsMEJBQTBCO1FBQzFCLElBQUksQ0FBQ0MsTUFBTSxHQUFHO1FBQ2QsSUFBSSxDQUFDQyxnQkFBZ0IsR0FBRyxFQUFFO1FBQzFCLElBQUksQ0FBQ0MscUJBQXFCLEdBQUc7UUFDN0IsSUFBSSxDQUFDUCxRQUFRLEdBQUdBO1FBQ2hCLElBQUksQ0FBQ1EsT0FBTyxHQUFHVixhQUFhVyxTQUFTLENBQUNDLFlBQVk7UUFDbEQsSUFBSSxDQUFDQyxpQkFBaUIsR0FDcEJWLHVCQUF1QixJQUNuQixJQUFJLENBQUNXLGtCQUFrQixHQUN2QixJQUFJLENBQUNDLGtCQUFrQjtJQUMvQjtJQUVBQSxxQkFBcUI7UUFDbkIsTUFBTUMsYUFBYSxJQUFJLENBQUNSLGdCQUFnQixDQUFDRCxNQUFNO1FBQy9DLElBQUksQ0FBQ0MsZ0JBQWdCLENBQUNTLE9BQU8sQ0FBQ0MsT0FBT0MsSUFBSSxDQUFDO1lBQUM7WUFBRztZQUFHO1lBQUc7U0FBRSxJQUFJLGdCQUFnQjtRQUMxRSxNQUFNQyxPQUFPRixPQUFPRyxNQUFNLENBQUMsSUFBSSxDQUFDYixnQkFBZ0I7UUFDaEQsTUFBTWMsU0FBUyxJQUFJL0IsT0FBTyxJQUFJLENBQUNrQixxQkFBcUIsRUFBRVcsTUFBTSxHQUFHQSxLQUFLYixNQUFNO1FBQzFFLElBQUksQ0FBQ0MsZ0JBQWdCLENBQUNELE1BQU0sR0FBRztRQUMvQmUsT0FBT04sVUFBVSxHQUFHQTtRQUNwQixJQUFJLENBQUNkLFFBQVEsQ0FBQ29CO0lBQ2hCO0lBRUFSLHFCQUFxQjtRQUNuQixNQUFNRSxhQUFhLElBQUksQ0FBQ1IsZ0JBQWdCLENBQUNELE1BQU07UUFDL0MsSUFBSSxDQUFDQyxnQkFBZ0IsQ0FBQ1MsT0FBTyxDQUFDQyxPQUFPQyxJQUFJLENBQUM7WUFBQztZQUFHO1lBQUc7WUFBRztZQUFHO1lBQUc7WUFBRztTQUFFLElBQUksZ0JBQWdCO1FBQ25GLE1BQU1DLE9BQU9GLE9BQU9HLE1BQU0sQ0FBQyxJQUFJLENBQUNiLGdCQUFnQjtRQUNoRCxJQUFJLENBQUNBLGdCQUFnQixDQUFDRCxNQUFNLEdBQUc7UUFDL0IsTUFBTWUsU0FBUyxJQUFJL0IsT0FBTyxJQUFJLENBQUNrQixxQkFBcUIsRUFBRVcsTUFBTSxHQUFHQSxLQUFLYixNQUFNO1FBQzFFZSxPQUFPTixVQUFVLEdBQUdBO1FBQ3BCLElBQUksQ0FBQ2QsUUFBUSxDQUFDb0I7SUFDaEI7SUFFQVYsYUFBYVcsS0FBSyxFQUFFO1FBQ2xCLElBQUlDLFFBQVE7UUFDWixNQUFNQyxNQUFNRixNQUFNaEIsTUFBTTtRQUN4QixNQUFPa0IsTUFBTUQsU0FBUyxFQUFHO1lBQ3ZCLElBQUksQ0FBQ2pCLE1BQU0sR0FBR2IsaUJBQWlCNkIsT0FBT0M7WUFDdEMsSUFBSUMsTUFBTUQsU0FBUyxJQUFJLENBQUNqQixNQUFNLEdBQUcsSUFBSSxDQUFDSixrQkFBa0IsRUFBRTtnQkFDeEQsMkJBQTJCO2dCQUMzQixNQUFNdUIsYUFBYUgsS0FBSyxDQUFDQyxRQUFRLEVBQUU7Z0JBQ25DLElBQ0UsSUFBSSxDQUFDakIsTUFBTSxHQUFHZCxxQkFDZCxJQUFJLENBQUNlLGdCQUFnQixDQUFDRCxNQUFNLEtBQUssR0FDakM7b0JBQ0EsSUFBSSxDQUFDTCxRQUFRLENBQ1gsSUFBSVgsT0FDRm1DLFlBQ0FILE9BQ0FDLE9BQ0FBLFFBQVEsSUFBSSxDQUFDckIsa0JBQWtCLEdBQUcsSUFBSSxDQUFDSSxNQUFNO2dCQUduRCxPQUFPO29CQUNMLHdDQUF3QztvQkFDeEMsSUFBSSxJQUFJLENBQUNDLGdCQUFnQixDQUFDRCxNQUFNLEtBQUssR0FBRzt3QkFDdEMsSUFBSSxDQUFDRSxxQkFBcUIsR0FBR2lCO29CQUMvQjtvQkFDQSxJQUFJLENBQUNsQixnQkFBZ0IsQ0FBQ21CLElBQUksQ0FDeEJKLE1BQU1LLEtBQUssQ0FDVEosUUFBUSxJQUFJLENBQUNyQixrQkFBa0IsRUFDL0JxQixRQUFRLElBQUksQ0FBQ3JCLGtCQUFrQixHQUFHLElBQUksQ0FBQ0ksTUFBTTtvQkFHakQsSUFBSSxJQUFJLENBQUNBLE1BQU0sR0FBR2QsbUJBQW1CO3dCQUNuQyxJQUFJLENBQUNvQixpQkFBaUI7b0JBQ3hCO2dCQUNGO2dCQUNBVyxTQUFTLElBQUksQ0FBQ3JCLGtCQUFrQixHQUFHLElBQUksQ0FBQ0ksTUFBTTtZQUNoRCxPQUFPO2dCQUNMLHdCQUF3QjtnQkFDeEIsSUFBSSxDQUFDSCxNQUFNLEdBQUc7b0JBQUNtQixNQUFNSyxLQUFLLENBQUNKLFFBQVEsR0FBR0M7aUJBQUs7Z0JBQzNDLElBQUksQ0FBQ3BCLFlBQVksR0FBR29CLE1BQU1ELFFBQVE7Z0JBQ2xDLElBQUksQ0FBQ2QsT0FBTyxHQUFHVixhQUFhVyxTQUFTLENBQUNrQixjQUFjO2dCQUNwRDtZQUNGO1FBQ0Y7UUFDQSxJQUFJSixNQUFNRCxRQUFRLEdBQUc7WUFDbkIsNkRBQTZEO1lBQzdELElBQUksQ0FBQ2xCLFNBQVMsR0FBR21CLE1BQU1ELE9BQU8sZUFBZTtZQUM3QyxJQUFJLENBQUNqQixNQUFNLEdBQUdnQixLQUFLLENBQUNDLE1BQU07WUFDMUIsSUFBSSxJQUFJLENBQUNsQixTQUFTLEtBQUssR0FBRztnQkFDeEIsSUFBSSxDQUFDQyxNQUFNLEdBQUdnQixLQUFLLENBQUNDLE1BQU0sR0FBSUQsQ0FBQUEsS0FBSyxDQUFDQyxRQUFRLEVBQUUsSUFBSTtnQkFDbEQsSUFBSSxDQUFDZCxPQUFPLEdBQUdWLGFBQWFXLFNBQVMsQ0FBQ21CLGNBQWM7WUFDdEQsT0FBTztnQkFDTCxJQUFJLENBQUNwQixPQUFPLEdBQUdWLGFBQWFXLFNBQVMsQ0FBQ29CLGNBQWM7WUFDdEQ7UUFDRjtJQUNGO0lBRUFGLGVBQWVOLEtBQUssRUFBRTtRQUNwQixJQUFJQyxRQUFRO1FBQ1osTUFBTUMsTUFBTUYsTUFBTWhCLE1BQU07UUFDeEIsTUFBTXlCLG1CQUNKLElBQUksQ0FBQ3pCLE1BQU0sR0FBRyxJQUFJLENBQUNGLFlBQVksR0FBRyxJQUFJLENBQUNGLGtCQUFrQixHQUFHO1FBQzlELElBQUlzQixNQUFNRCxTQUFTUSxrQkFBa0I7WUFDbkMseUJBQXlCO1lBQ3pCLE1BQU1DLFVBQVVmLE9BQU9nQixXQUFXLENBQUMsSUFBSSxDQUFDM0IsTUFBTSxHQUFHLElBQUksQ0FBQ0osa0JBQWtCO1lBQ3hFLElBQUlnQyxTQUFTO1lBQ2IsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUksSUFBSSxDQUFDaEMsTUFBTSxDQUFDRyxNQUFNLEVBQUUsRUFBRTZCLEVBQUc7Z0JBQzNDLElBQUksQ0FBQ2hDLE1BQU0sQ0FBQ2dDLEVBQUUsQ0FBQ0MsSUFBSSxDQUFDSixTQUFTRTtnQkFDN0JBLFVBQVUsSUFBSSxDQUFDL0IsTUFBTSxDQUFDZ0MsRUFBRSxDQUFDN0IsTUFBTTtZQUNqQztZQUNBZ0IsTUFBTWMsSUFBSSxDQUFDSixTQUFTRSxRQUFRWCxPQUFPQSxRQUFRUTtZQUMzQyxNQUFNTixhQUFhTyxPQUFPLENBQUMsRUFBRTtZQUM3QixJQUNFLElBQUksQ0FBQzFCLE1BQU0sR0FBR2QscUJBQ2QsSUFBSSxDQUFDZSxnQkFBZ0IsQ0FBQ0QsTUFBTSxLQUFLLEdBQ2pDO2dCQUNBLElBQUksQ0FBQ0wsUUFBUSxDQUNYLElBQUlYLE9BQ0ZtQyxZQUNBTyxTQUNBLEdBQ0EsSUFBSSxDQUFDMUIsTUFBTSxHQUFHLElBQUksQ0FBQ0osa0JBQWtCO1lBRzNDLE9BQU87Z0JBQ0wsd0NBQXdDO2dCQUN4QyxJQUFJLElBQUksQ0FBQ0ssZ0JBQWdCLENBQUNELE1BQU0sS0FBSyxHQUFHO29CQUN0QyxJQUFJLENBQUNFLHFCQUFxQixHQUFHaUI7Z0JBQy9CO2dCQUNBLElBQUksQ0FBQ2xCLGdCQUFnQixDQUFDbUIsSUFBSSxDQUN4Qk0sUUFBUUwsS0FBSyxDQUNYLElBQUksQ0FBQ3pCLGtCQUFrQixFQUN2QixJQUFJLENBQUNBLGtCQUFrQixHQUFHLElBQUksQ0FBQ0ksTUFBTTtnQkFHekMsSUFBSSxJQUFJLENBQUNBLE1BQU0sR0FBR2QsbUJBQW1CO29CQUNuQyxJQUFJLENBQUNvQixpQkFBaUI7Z0JBQ3hCO1lBQ0Y7WUFDQSxJQUFJLENBQUNULE1BQU0sR0FBRyxFQUFFO1lBQ2hCLElBQUksQ0FBQ0MsWUFBWSxHQUFHO1lBQ3BCLElBQUksQ0FBQ0ssT0FBTyxHQUFHVixhQUFhVyxTQUFTLENBQUNDLFlBQVk7WUFDbERZLFNBQVNRO1lBQ1QsSUFBSVAsTUFBTUQsUUFBUSxHQUFHO2dCQUNuQixPQUFPLElBQUksQ0FBQ2QsT0FBTyxDQUFDYSxNQUFNSyxLQUFLLENBQUNKLE9BQU9DO1lBQ3pDO1FBQ0YsT0FBTztZQUNMLElBQUksQ0FBQ3JCLE1BQU0sQ0FBQ3VCLElBQUksQ0FBQ0o7WUFDakIsSUFBSSxDQUFDbEIsWUFBWSxJQUFJa0IsTUFBTWhCLE1BQU07UUFDbkM7UUFDQSxPQUFPO0lBQ1Q7SUFFQXdCLGVBQWVSLEtBQUssRUFBRTtRQUNwQixJQUFJLENBQUNoQixNQUFNLElBQUlnQixLQUFLLENBQUMsRUFBRSxJQUFJO1FBQzNCLElBQUlBLE1BQU1oQixNQUFNLEdBQUcsR0FBRztZQUNwQixJQUFJLENBQUNBLE1BQU0sSUFBSWdCLEtBQUssQ0FBQyxFQUFFLElBQUk7WUFDM0IsSUFBSSxDQUFDYixPQUFPLEdBQUdWLGFBQWFXLFNBQVMsQ0FBQ2tCLGNBQWM7WUFDcEQsT0FBTyxJQUFJLENBQUNBLGNBQWMsQ0FBQ04sTUFBTUssS0FBSyxDQUFDO1FBQ3pDO1FBQ0EsSUFBSSxDQUFDbEIsT0FBTyxHQUFHVixhQUFhVyxTQUFTLENBQUNtQixjQUFjO1FBRXBELE9BQU87SUFDVDtJQUVBQSxlQUFlUCxLQUFLLEVBQUU7UUFDcEIsSUFBSSxDQUFDaEIsTUFBTSxJQUFJZ0IsS0FBSyxDQUFDLEVBQUUsSUFBSTtRQUMzQixJQUFJLENBQUNiLE9BQU8sR0FBR1YsYUFBYVcsU0FBUyxDQUFDa0IsY0FBYztRQUNwRCxPQUFPLElBQUksQ0FBQ0EsY0FBYyxDQUFDTixNQUFNSyxLQUFLLENBQUM7SUFDekM7QUFDRjtBQUVBVSxPQUFPQyxPQUFPLEdBQUd2QyIsInNvdXJjZXMiOlsid2VicGFjazovL2FjZWUtcHJvdG8tb25lLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0X3BhcnNlci5qcz82ODMyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgUGFja2V0ID0gcmVxdWlyZSgnLi9wYWNrZXRzL3BhY2tldC5qcycpO1xuXG5jb25zdCBNQVhfUEFDS0VUX0xFTkdUSCA9IDE2Nzc3MjE1O1xuXG5mdW5jdGlvbiByZWFkUGFja2V0TGVuZ3RoKGIsIG9mZikge1xuICBjb25zdCBiMCA9IGJbb2ZmXTtcbiAgY29uc3QgYjEgPSBiW29mZiArIDFdO1xuICBjb25zdCBiMiA9IGJbb2ZmICsgMl07XG4gIGlmIChiMSArIGIyID09PSAwKSB7XG4gICAgcmV0dXJuIGIwO1xuICB9XG4gIHJldHVybiBiMCArIChiMSA8PCA4KSArIChiMiA8PCAxNik7XG59XG5cbmNsYXNzIFBhY2tldFBhcnNlciB7XG4gIGNvbnN0cnVjdG9yKG9uUGFja2V0LCBwYWNrZXRIZWFkZXJMZW5ndGgpIHtcbiAgICAvLyA0IGZvciBub3JtYWwgcGFja2V0cywgNyBmb3IgY29tcHJzc2VkIHByb3RvY29sIHBhY2tldHNcbiAgICBpZiAodHlwZW9mIHBhY2tldEhlYWRlckxlbmd0aCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHBhY2tldEhlYWRlckxlbmd0aCA9IDQ7XG4gICAgfVxuICAgIC8vIGFycmF5IG9mIGxhc3QgcGF5bG9hZCBjaHVua3NcbiAgICAvLyBvbmx5IHVzZWQgd2hlbiBjdXJyZW50IHBheWxvYWQgaXMgbm90IGNvbXBsZXRlXG4gICAgdGhpcy5idWZmZXIgPSBbXTtcbiAgICAvLyB0b3RhbCBsZW5ndGggb2YgY2h1bmtzIG9uIGJ1ZmZlclxuICAgIHRoaXMuYnVmZmVyTGVuZ3RoID0gMDtcbiAgICB0aGlzLnBhY2tldEhlYWRlckxlbmd0aCA9IHBhY2tldEhlYWRlckxlbmd0aDtcbiAgICAvLyBpbmNvbXBsZXRlIGhlYWRlciBzdGF0ZTogbnVtYmVyIG9mIGhlYWRlciBieXRlcyByZWNlaXZlZFxuICAgIHRoaXMuaGVhZGVyTGVuID0gMDtcbiAgICAvLyBleHBlY3RlZCBwYXlsb2FkIGxlbmd0aFxuICAgIHRoaXMubGVuZ3RoID0gMDtcbiAgICB0aGlzLmxhcmdlUGFja2V0UGFydHMgPSBbXTtcbiAgICB0aGlzLmZpcnN0UGFja2V0U2VxdWVuY2VJZCA9IDA7XG4gICAgdGhpcy5vblBhY2tldCA9IG9uUGFja2V0O1xuICAgIHRoaXMuZXhlY3V0ZSA9IFBhY2tldFBhcnNlci5wcm90b3R5cGUuZXhlY3V0ZVN0YXJ0O1xuICAgIHRoaXMuX2ZsdXNoTGFyZ2VQYWNrZXQgPVxuICAgICAgcGFja2V0SGVhZGVyTGVuZ3RoID09PSA3XG4gICAgICAgID8gdGhpcy5fZmx1c2hMYXJnZVBhY2tldDdcbiAgICAgICAgOiB0aGlzLl9mbHVzaExhcmdlUGFja2V0NDtcbiAgfVxuXG4gIF9mbHVzaExhcmdlUGFja2V0NCgpIHtcbiAgICBjb25zdCBudW1QYWNrZXRzID0gdGhpcy5sYXJnZVBhY2tldFBhcnRzLmxlbmd0aDtcbiAgICB0aGlzLmxhcmdlUGFja2V0UGFydHMudW5zaGlmdChCdWZmZXIuZnJvbShbMCwgMCwgMCwgMF0pKTsgLy8gaW5zZXJ0IGhlYWRlclxuICAgIGNvbnN0IGJvZHkgPSBCdWZmZXIuY29uY2F0KHRoaXMubGFyZ2VQYWNrZXRQYXJ0cyk7XG4gICAgY29uc3QgcGFja2V0ID0gbmV3IFBhY2tldCh0aGlzLmZpcnN0UGFja2V0U2VxdWVuY2VJZCwgYm9keSwgMCwgYm9keS5sZW5ndGgpO1xuICAgIHRoaXMubGFyZ2VQYWNrZXRQYXJ0cy5sZW5ndGggPSAwO1xuICAgIHBhY2tldC5udW1QYWNrZXRzID0gbnVtUGFja2V0cztcbiAgICB0aGlzLm9uUGFja2V0KHBhY2tldCk7XG4gIH1cblxuICBfZmx1c2hMYXJnZVBhY2tldDcoKSB7XG4gICAgY29uc3QgbnVtUGFja2V0cyA9IHRoaXMubGFyZ2VQYWNrZXRQYXJ0cy5sZW5ndGg7XG4gICAgdGhpcy5sYXJnZVBhY2tldFBhcnRzLnVuc2hpZnQoQnVmZmVyLmZyb20oWzAsIDAsIDAsIDAsIDAsIDAsIDBdKSk7IC8vIGluc2VydCBoZWFkZXJcbiAgICBjb25zdCBib2R5ID0gQnVmZmVyLmNvbmNhdCh0aGlzLmxhcmdlUGFja2V0UGFydHMpO1xuICAgIHRoaXMubGFyZ2VQYWNrZXRQYXJ0cy5sZW5ndGggPSAwO1xuICAgIGNvbnN0IHBhY2tldCA9IG5ldyBQYWNrZXQodGhpcy5maXJzdFBhY2tldFNlcXVlbmNlSWQsIGJvZHksIDAsIGJvZHkubGVuZ3RoKTtcbiAgICBwYWNrZXQubnVtUGFja2V0cyA9IG51bVBhY2tldHM7XG4gICAgdGhpcy5vblBhY2tldChwYWNrZXQpO1xuICB9XG5cbiAgZXhlY3V0ZVN0YXJ0KGNodW5rKSB7XG4gICAgbGV0IHN0YXJ0ID0gMDtcbiAgICBjb25zdCBlbmQgPSBjaHVuay5sZW5ndGg7XG4gICAgd2hpbGUgKGVuZCAtIHN0YXJ0ID49IDMpIHtcbiAgICAgIHRoaXMubGVuZ3RoID0gcmVhZFBhY2tldExlbmd0aChjaHVuaywgc3RhcnQpO1xuICAgICAgaWYgKGVuZCAtIHN0YXJ0ID49IHRoaXMubGVuZ3RoICsgdGhpcy5wYWNrZXRIZWFkZXJMZW5ndGgpIHtcbiAgICAgICAgLy8gYXQgbGVhc3Qgb25lIGZ1bGwgcGFja2V0XG4gICAgICAgIGNvbnN0IHNlcXVlbmNlSWQgPSBjaHVua1tzdGFydCArIDNdO1xuICAgICAgICBpZiAoXG4gICAgICAgICAgdGhpcy5sZW5ndGggPCBNQVhfUEFDS0VUX0xFTkdUSCAmJlxuICAgICAgICAgIHRoaXMubGFyZ2VQYWNrZXRQYXJ0cy5sZW5ndGggPT09IDBcbiAgICAgICAgKSB7XG4gICAgICAgICAgdGhpcy5vblBhY2tldChcbiAgICAgICAgICAgIG5ldyBQYWNrZXQoXG4gICAgICAgICAgICAgIHNlcXVlbmNlSWQsXG4gICAgICAgICAgICAgIGNodW5rLFxuICAgICAgICAgICAgICBzdGFydCxcbiAgICAgICAgICAgICAgc3RhcnQgKyB0aGlzLnBhY2tldEhlYWRlckxlbmd0aCArIHRoaXMubGVuZ3RoXG4gICAgICAgICAgICApXG4gICAgICAgICAgKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBmaXJzdCBsYXJnZSBwYWNrZXQgLSByZW1lbWJlciBpdCdzIGlkXG4gICAgICAgICAgaWYgKHRoaXMubGFyZ2VQYWNrZXRQYXJ0cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHRoaXMuZmlyc3RQYWNrZXRTZXF1ZW5jZUlkID0gc2VxdWVuY2VJZDtcbiAgICAgICAgICB9XG4gICAgICAgICAgdGhpcy5sYXJnZVBhY2tldFBhcnRzLnB1c2goXG4gICAgICAgICAgICBjaHVuay5zbGljZShcbiAgICAgICAgICAgICAgc3RhcnQgKyB0aGlzLnBhY2tldEhlYWRlckxlbmd0aCxcbiAgICAgICAgICAgICAgc3RhcnQgKyB0aGlzLnBhY2tldEhlYWRlckxlbmd0aCArIHRoaXMubGVuZ3RoXG4gICAgICAgICAgICApXG4gICAgICAgICAgKTtcbiAgICAgICAgICBpZiAodGhpcy5sZW5ndGggPCBNQVhfUEFDS0VUX0xFTkdUSCkge1xuICAgICAgICAgICAgdGhpcy5fZmx1c2hMYXJnZVBhY2tldCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBzdGFydCArPSB0aGlzLnBhY2tldEhlYWRlckxlbmd0aCArIHRoaXMubGVuZ3RoO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gcGF5bG9hZCBpcyBpbmNvbXBsZXRlXG4gICAgICAgIHRoaXMuYnVmZmVyID0gW2NodW5rLnNsaWNlKHN0YXJ0ICsgMywgZW5kKV07XG4gICAgICAgIHRoaXMuYnVmZmVyTGVuZ3RoID0gZW5kIC0gc3RhcnQgLSAzO1xuICAgICAgICB0aGlzLmV4ZWN1dGUgPSBQYWNrZXRQYXJzZXIucHJvdG90eXBlLmV4ZWN1dGVQYXlsb2FkO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChlbmQgLSBzdGFydCA+IDApIHtcbiAgICAgIC8vIHRoZXJlIGlzIHN0YXJ0IG9mIGxlbmd0aCBoZWFkZXIsIGJ1dCBpdCdzIG5vdCBmdWxsIDMgYnl0ZXNcbiAgICAgIHRoaXMuaGVhZGVyTGVuID0gZW5kIC0gc3RhcnQ7IC8vIDEgb3IgMiBieXRlc1xuICAgICAgdGhpcy5sZW5ndGggPSBjaHVua1tzdGFydF07XG4gICAgICBpZiAodGhpcy5oZWFkZXJMZW4gPT09IDIpIHtcbiAgICAgICAgdGhpcy5sZW5ndGggPSBjaHVua1tzdGFydF0gKyAoY2h1bmtbc3RhcnQgKyAxXSA8PCA4KTtcbiAgICAgICAgdGhpcy5leGVjdXRlID0gUGFja2V0UGFyc2VyLnByb3RvdHlwZS5leGVjdXRlSGVhZGVyMztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuZXhlY3V0ZSA9IFBhY2tldFBhcnNlci5wcm90b3R5cGUuZXhlY3V0ZUhlYWRlcjI7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZXhlY3V0ZVBheWxvYWQoY2h1bmspIHtcbiAgICBsZXQgc3RhcnQgPSAwO1xuICAgIGNvbnN0IGVuZCA9IGNodW5rLmxlbmd0aDtcbiAgICBjb25zdCByZW1haW5pbmdQYXlsb2FkID1cbiAgICAgIHRoaXMubGVuZ3RoIC0gdGhpcy5idWZmZXJMZW5ndGggKyB0aGlzLnBhY2tldEhlYWRlckxlbmd0aCAtIDM7XG4gICAgaWYgKGVuZCAtIHN0YXJ0ID49IHJlbWFpbmluZ1BheWxvYWQpIHtcbiAgICAgIC8vIGxhc3QgY2h1bmsgZm9yIHBheWxvYWRcbiAgICAgIGNvbnN0IHBheWxvYWQgPSBCdWZmZXIuYWxsb2NVbnNhZmUodGhpcy5sZW5ndGggKyB0aGlzLnBhY2tldEhlYWRlckxlbmd0aCk7XG4gICAgICBsZXQgb2Zmc2V0ID0gMztcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5idWZmZXIubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgdGhpcy5idWZmZXJbaV0uY29weShwYXlsb2FkLCBvZmZzZXQpO1xuICAgICAgICBvZmZzZXQgKz0gdGhpcy5idWZmZXJbaV0ubGVuZ3RoO1xuICAgICAgfVxuICAgICAgY2h1bmsuY29weShwYXlsb2FkLCBvZmZzZXQsIHN0YXJ0LCBzdGFydCArIHJlbWFpbmluZ1BheWxvYWQpO1xuICAgICAgY29uc3Qgc2VxdWVuY2VJZCA9IHBheWxvYWRbM107XG4gICAgICBpZiAoXG4gICAgICAgIHRoaXMubGVuZ3RoIDwgTUFYX1BBQ0tFVF9MRU5HVEggJiZcbiAgICAgICAgdGhpcy5sYXJnZVBhY2tldFBhcnRzLmxlbmd0aCA9PT0gMFxuICAgICAgKSB7XG4gICAgICAgIHRoaXMub25QYWNrZXQoXG4gICAgICAgICAgbmV3IFBhY2tldChcbiAgICAgICAgICAgIHNlcXVlbmNlSWQsXG4gICAgICAgICAgICBwYXlsb2FkLFxuICAgICAgICAgICAgMCxcbiAgICAgICAgICAgIHRoaXMubGVuZ3RoICsgdGhpcy5wYWNrZXRIZWFkZXJMZW5ndGhcbiAgICAgICAgICApXG4gICAgICAgICk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBmaXJzdCBsYXJnZSBwYWNrZXQgLSByZW1lbWJlciBpdCdzIGlkXG4gICAgICAgIGlmICh0aGlzLmxhcmdlUGFja2V0UGFydHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgdGhpcy5maXJzdFBhY2tldFNlcXVlbmNlSWQgPSBzZXF1ZW5jZUlkO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMubGFyZ2VQYWNrZXRQYXJ0cy5wdXNoKFxuICAgICAgICAgIHBheWxvYWQuc2xpY2UoXG4gICAgICAgICAgICB0aGlzLnBhY2tldEhlYWRlckxlbmd0aCxcbiAgICAgICAgICAgIHRoaXMucGFja2V0SGVhZGVyTGVuZ3RoICsgdGhpcy5sZW5ndGhcbiAgICAgICAgICApXG4gICAgICAgICk7XG4gICAgICAgIGlmICh0aGlzLmxlbmd0aCA8IE1BWF9QQUNLRVRfTEVOR1RIKSB7XG4gICAgICAgICAgdGhpcy5fZmx1c2hMYXJnZVBhY2tldCgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB0aGlzLmJ1ZmZlciA9IFtdO1xuICAgICAgdGhpcy5idWZmZXJMZW5ndGggPSAwO1xuICAgICAgdGhpcy5leGVjdXRlID0gUGFja2V0UGFyc2VyLnByb3RvdHlwZS5leGVjdXRlU3RhcnQ7XG4gICAgICBzdGFydCArPSByZW1haW5pbmdQYXlsb2FkO1xuICAgICAgaWYgKGVuZCAtIHN0YXJ0ID4gMCkge1xuICAgICAgICByZXR1cm4gdGhpcy5leGVjdXRlKGNodW5rLnNsaWNlKHN0YXJ0LCBlbmQpKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5idWZmZXIucHVzaChjaHVuayk7XG4gICAgICB0aGlzLmJ1ZmZlckxlbmd0aCArPSBjaHVuay5sZW5ndGg7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgZXhlY3V0ZUhlYWRlcjIoY2h1bmspIHtcbiAgICB0aGlzLmxlbmd0aCArPSBjaHVua1swXSA8PCA4O1xuICAgIGlmIChjaHVuay5sZW5ndGggPiAxKSB7XG4gICAgICB0aGlzLmxlbmd0aCArPSBjaHVua1sxXSA8PCAxNjtcbiAgICAgIHRoaXMuZXhlY3V0ZSA9IFBhY2tldFBhcnNlci5wcm90b3R5cGUuZXhlY3V0ZVBheWxvYWQ7XG4gICAgICByZXR1cm4gdGhpcy5leGVjdXRlUGF5bG9hZChjaHVuay5zbGljZSgyKSk7XG4gICAgfSBcbiAgICB0aGlzLmV4ZWN1dGUgPSBQYWNrZXRQYXJzZXIucHJvdG90eXBlLmV4ZWN1dGVIZWFkZXIzO1xuICAgIFxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgZXhlY3V0ZUhlYWRlcjMoY2h1bmspIHtcbiAgICB0aGlzLmxlbmd0aCArPSBjaHVua1swXSA8PCAxNjtcbiAgICB0aGlzLmV4ZWN1dGUgPSBQYWNrZXRQYXJzZXIucHJvdG90eXBlLmV4ZWN1dGVQYXlsb2FkO1xuICAgIHJldHVybiB0aGlzLmV4ZWN1dGVQYXlsb2FkKGNodW5rLnNsaWNlKDEpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFBhY2tldFBhcnNlcjtcbiJdLCJuYW1lcyI6WyJQYWNrZXQiLCJyZXF1aXJlIiwiTUFYX1BBQ0tFVF9MRU5HVEgiLCJyZWFkUGFja2V0TGVuZ3RoIiwiYiIsIm9mZiIsImIwIiwiYjEiLCJiMiIsIlBhY2tldFBhcnNlciIsImNvbnN0cnVjdG9yIiwib25QYWNrZXQiLCJwYWNrZXRIZWFkZXJMZW5ndGgiLCJidWZmZXIiLCJidWZmZXJMZW5ndGgiLCJoZWFkZXJMZW4iLCJsZW5ndGgiLCJsYXJnZVBhY2tldFBhcnRzIiwiZmlyc3RQYWNrZXRTZXF1ZW5jZUlkIiwiZXhlY3V0ZSIsInByb3RvdHlwZSIsImV4ZWN1dGVTdGFydCIsIl9mbHVzaExhcmdlUGFja2V0IiwiX2ZsdXNoTGFyZ2VQYWNrZXQ3IiwiX2ZsdXNoTGFyZ2VQYWNrZXQ0IiwibnVtUGFja2V0cyIsInVuc2hpZnQiLCJCdWZmZXIiLCJmcm9tIiwiYm9keSIsImNvbmNhdCIsInBhY2tldCIsImNodW5rIiwic3RhcnQiLCJlbmQiLCJzZXF1ZW5jZUlkIiwicHVzaCIsInNsaWNlIiwiZXhlY3V0ZVBheWxvYWQiLCJleGVjdXRlSGVhZGVyMyIsImV4ZWN1dGVIZWFkZXIyIiwicmVtYWluaW5nUGF5bG9hZCIsInBheWxvYWQiLCJhbGxvY1Vuc2FmZSIsIm9mZnNldCIsImkiLCJjb3B5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packet_parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/auth_next_factor.js":
/*!*************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/auth_next_factor.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Copyright (c) 2021, Oracle and/or its affiliates.\n\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nclass AuthNextFactor {\n    constructor(opts){\n        this.pluginName = opts.pluginName;\n        this.pluginData = opts.pluginData;\n    }\n    toPacket(encoding) {\n        const length = 6 + this.pluginName.length + this.pluginData.length;\n        const buffer = Buffer.allocUnsafe(length);\n        const packet = new Packet(0, buffer, 0, length);\n        packet.offset = 4;\n        packet.writeInt8(0x02);\n        packet.writeNullTerminatedString(this.pluginName, encoding);\n        packet.writeBuffer(this.pluginData);\n        return packet;\n    }\n    static fromPacket(packet, encoding) {\n        packet.readInt8(); // marker\n        const name = packet.readNullTerminatedString(encoding);\n        const data = packet.readBuffer();\n        return new AuthNextFactor({\n            pluginName: name,\n            pluginData: data\n        });\n    }\n}\nmodule.exports = AuthNextFactor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2F1dGhfbmV4dF9mYWN0b3IuanMiLCJtYXBwaW5ncyI6IkFBQUEsb0RBQW9EO0FBRXBEO0FBRUEsTUFBTUEsU0FBU0MsbUJBQU9BLENBQUM7QUFFdkIsTUFBTUM7SUFDSkMsWUFBWUMsSUFBSSxDQUFFO1FBQ2hCLElBQUksQ0FBQ0MsVUFBVSxHQUFHRCxLQUFLQyxVQUFVO1FBQ2pDLElBQUksQ0FBQ0MsVUFBVSxHQUFHRixLQUFLRSxVQUFVO0lBQ25DO0lBRUFDLFNBQVNDLFFBQVEsRUFBRTtRQUNqQixNQUFNQyxTQUFTLElBQUksSUFBSSxDQUFDSixVQUFVLENBQUNJLE1BQU0sR0FBRyxJQUFJLENBQUNILFVBQVUsQ0FBQ0csTUFBTTtRQUNsRSxNQUFNQyxTQUFTQyxPQUFPQyxXQUFXLENBQUNIO1FBQ2xDLE1BQU1JLFNBQVMsSUFBSWIsT0FBTyxHQUFHVSxRQUFRLEdBQUdEO1FBQ3hDSSxPQUFPQyxNQUFNLEdBQUc7UUFDaEJELE9BQU9FLFNBQVMsQ0FBQztRQUNqQkYsT0FBT0cseUJBQXlCLENBQUMsSUFBSSxDQUFDWCxVQUFVLEVBQUVHO1FBQ2xESyxPQUFPSSxXQUFXLENBQUMsSUFBSSxDQUFDWCxVQUFVO1FBQ2xDLE9BQU9PO0lBQ1Q7SUFFQSxPQUFPSyxXQUFXTCxNQUFNLEVBQUVMLFFBQVEsRUFBRTtRQUNsQ0ssT0FBT00sUUFBUSxJQUFJLFNBQVM7UUFDNUIsTUFBTUMsT0FBT1AsT0FBT1Esd0JBQXdCLENBQUNiO1FBQzdDLE1BQU1jLE9BQU9ULE9BQU9VLFVBQVU7UUFDOUIsT0FBTyxJQUFJckIsZUFBZTtZQUN4QkcsWUFBWWU7WUFDWmQsWUFBWWdCO1FBQ2Q7SUFDRjtBQUNGO0FBRUFFLE9BQU9DLE9BQU8sR0FBR3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWNlZS1wcm90by1vbmUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2F1dGhfbmV4dF9mYWN0b3IuanM/NmQyYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMjEsIE9yYWNsZSBhbmQvb3IgaXRzIGFmZmlsaWF0ZXMuXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgUGFja2V0ID0gcmVxdWlyZSgnLi4vcGFja2V0cy9wYWNrZXQnKTtcblxuY2xhc3MgQXV0aE5leHRGYWN0b3Ige1xuICBjb25zdHJ1Y3RvcihvcHRzKSB7XG4gICAgdGhpcy5wbHVnaW5OYW1lID0gb3B0cy5wbHVnaW5OYW1lO1xuICAgIHRoaXMucGx1Z2luRGF0YSA9IG9wdHMucGx1Z2luRGF0YTtcbiAgfVxuXG4gIHRvUGFja2V0KGVuY29kaW5nKSB7XG4gICAgY29uc3QgbGVuZ3RoID0gNiArIHRoaXMucGx1Z2luTmFtZS5sZW5ndGggKyB0aGlzLnBsdWdpbkRhdGEubGVuZ3RoO1xuICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShsZW5ndGgpO1xuICAgIGNvbnN0IHBhY2tldCA9IG5ldyBQYWNrZXQoMCwgYnVmZmVyLCAwLCBsZW5ndGgpO1xuICAgIHBhY2tldC5vZmZzZXQgPSA0O1xuICAgIHBhY2tldC53cml0ZUludDgoMHgwMik7XG4gICAgcGFja2V0LndyaXRlTnVsbFRlcm1pbmF0ZWRTdHJpbmcodGhpcy5wbHVnaW5OYW1lLCBlbmNvZGluZyk7XG4gICAgcGFja2V0LndyaXRlQnVmZmVyKHRoaXMucGx1Z2luRGF0YSk7XG4gICAgcmV0dXJuIHBhY2tldDtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tUGFja2V0KHBhY2tldCwgZW5jb2RpbmcpIHtcbiAgICBwYWNrZXQucmVhZEludDgoKTsgLy8gbWFya2VyXG4gICAgY29uc3QgbmFtZSA9IHBhY2tldC5yZWFkTnVsbFRlcm1pbmF0ZWRTdHJpbmcoZW5jb2RpbmcpO1xuICAgIGNvbnN0IGRhdGEgPSBwYWNrZXQucmVhZEJ1ZmZlcigpO1xuICAgIHJldHVybiBuZXcgQXV0aE5leHRGYWN0b3Ioe1xuICAgICAgcGx1Z2luTmFtZTogbmFtZSxcbiAgICAgIHBsdWdpbkRhdGE6IGRhdGFcbiAgICB9KTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEF1dGhOZXh0RmFjdG9yO1xuIl0sIm5hbWVzIjpbIlBhY2tldCIsInJlcXVpcmUiLCJBdXRoTmV4dEZhY3RvciIsImNvbnN0cnVjdG9yIiwib3B0cyIsInBsdWdpbk5hbWUiLCJwbHVnaW5EYXRhIiwidG9QYWNrZXQiLCJlbmNvZGluZyIsImxlbmd0aCIsImJ1ZmZlciIsIkJ1ZmZlciIsImFsbG9jVW5zYWZlIiwicGFja2V0Iiwib2Zmc2V0Iiwid3JpdGVJbnQ4Iiwid3JpdGVOdWxsVGVybWluYXRlZFN0cmluZyIsIndyaXRlQnVmZmVyIiwiZnJvbVBhY2tldCIsInJlYWRJbnQ4IiwibmFtZSIsInJlYWROdWxsVGVybWluYXRlZFN0cmluZyIsImRhdGEiLCJyZWFkQnVmZmVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/auth_next_factor.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/auth_switch_request.js":
/*!****************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/auth_switch_request.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::AuthSwitchRequest\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nclass AuthSwitchRequest {\n    constructor(opts){\n        this.pluginName = opts.pluginName;\n        this.pluginData = opts.pluginData;\n    }\n    toPacket() {\n        const length = 6 + this.pluginName.length + this.pluginData.length;\n        const buffer = Buffer.allocUnsafe(length);\n        const packet = new Packet(0, buffer, 0, length);\n        packet.offset = 4;\n        packet.writeInt8(0xfe);\n        // TODO: use server encoding\n        packet.writeNullTerminatedString(this.pluginName, \"cesu8\");\n        packet.writeBuffer(this.pluginData);\n        return packet;\n    }\n    static fromPacket(packet) {\n        packet.readInt8(); // marker\n        // assert marker == 0xfe?\n        // TODO: use server encoding\n        const name = packet.readNullTerminatedString(\"cesu8\");\n        const data = packet.readBuffer();\n        return new AuthSwitchRequest({\n            pluginName: name,\n            pluginData: data\n        });\n    }\n}\nmodule.exports = AuthSwitchRequest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2F1dGhfc3dpdGNoX3JlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSx5R0FBeUc7QUFFekcsTUFBTUEsU0FBU0MsbUJBQU9BLENBQUM7QUFFdkIsTUFBTUM7SUFDSkMsWUFBWUMsSUFBSSxDQUFFO1FBQ2hCLElBQUksQ0FBQ0MsVUFBVSxHQUFHRCxLQUFLQyxVQUFVO1FBQ2pDLElBQUksQ0FBQ0MsVUFBVSxHQUFHRixLQUFLRSxVQUFVO0lBQ25DO0lBRUFDLFdBQVc7UUFDVCxNQUFNQyxTQUFTLElBQUksSUFBSSxDQUFDSCxVQUFVLENBQUNHLE1BQU0sR0FBRyxJQUFJLENBQUNGLFVBQVUsQ0FBQ0UsTUFBTTtRQUNsRSxNQUFNQyxTQUFTQyxPQUFPQyxXQUFXLENBQUNIO1FBQ2xDLE1BQU1JLFNBQVMsSUFBSVosT0FBTyxHQUFHUyxRQUFRLEdBQUdEO1FBQ3hDSSxPQUFPQyxNQUFNLEdBQUc7UUFDaEJELE9BQU9FLFNBQVMsQ0FBQztRQUNqQiw0QkFBNEI7UUFDNUJGLE9BQU9HLHlCQUF5QixDQUFDLElBQUksQ0FBQ1YsVUFBVSxFQUFFO1FBQ2xETyxPQUFPSSxXQUFXLENBQUMsSUFBSSxDQUFDVixVQUFVO1FBQ2xDLE9BQU9NO0lBQ1Q7SUFFQSxPQUFPSyxXQUFXTCxNQUFNLEVBQUU7UUFDeEJBLE9BQU9NLFFBQVEsSUFBSSxTQUFTO1FBQzVCLHlCQUF5QjtRQUN6Qiw0QkFBNEI7UUFDNUIsTUFBTUMsT0FBT1AsT0FBT1Esd0JBQXdCLENBQUM7UUFDN0MsTUFBTUMsT0FBT1QsT0FBT1UsVUFBVTtRQUM5QixPQUFPLElBQUlwQixrQkFBa0I7WUFDM0JHLFlBQVljO1lBQ1piLFlBQVllO1FBQ2Q7SUFDRjtBQUNGO0FBRUFFLE9BQU9DLE9BQU8sR0FBR3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWNlZS1wcm90by1vbmUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2F1dGhfc3dpdGNoX3JlcXVlc3QuanM/N2RiYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8vIGh0dHA6Ly9kZXYubXlzcWwuY29tL2RvYy9pbnRlcm5hbHMvZW4vY29ubmVjdGlvbi1waGFzZS1wYWNrZXRzLmh0bWwjcGFja2V0LVByb3RvY29sOjpBdXRoU3dpdGNoUmVxdWVzdFxuXG5jb25zdCBQYWNrZXQgPSByZXF1aXJlKCcuLi9wYWNrZXRzL3BhY2tldCcpO1xuXG5jbGFzcyBBdXRoU3dpdGNoUmVxdWVzdCB7XG4gIGNvbnN0cnVjdG9yKG9wdHMpIHtcbiAgICB0aGlzLnBsdWdpbk5hbWUgPSBvcHRzLnBsdWdpbk5hbWU7XG4gICAgdGhpcy5wbHVnaW5EYXRhID0gb3B0cy5wbHVnaW5EYXRhO1xuICB9XG5cbiAgdG9QYWNrZXQoKSB7XG4gICAgY29uc3QgbGVuZ3RoID0gNiArIHRoaXMucGx1Z2luTmFtZS5sZW5ndGggKyB0aGlzLnBsdWdpbkRhdGEubGVuZ3RoO1xuICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShsZW5ndGgpO1xuICAgIGNvbnN0IHBhY2tldCA9IG5ldyBQYWNrZXQoMCwgYnVmZmVyLCAwLCBsZW5ndGgpO1xuICAgIHBhY2tldC5vZmZzZXQgPSA0O1xuICAgIHBhY2tldC53cml0ZUludDgoMHhmZSk7XG4gICAgLy8gVE9ETzogdXNlIHNlcnZlciBlbmNvZGluZ1xuICAgIHBhY2tldC53cml0ZU51bGxUZXJtaW5hdGVkU3RyaW5nKHRoaXMucGx1Z2luTmFtZSwgJ2Nlc3U4Jyk7XG4gICAgcGFja2V0LndyaXRlQnVmZmVyKHRoaXMucGx1Z2luRGF0YSk7XG4gICAgcmV0dXJuIHBhY2tldDtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tUGFja2V0KHBhY2tldCkge1xuICAgIHBhY2tldC5yZWFkSW50OCgpOyAvLyBtYXJrZXJcbiAgICAvLyBhc3NlcnQgbWFya2VyID09IDB4ZmU/XG4gICAgLy8gVE9ETzogdXNlIHNlcnZlciBlbmNvZGluZ1xuICAgIGNvbnN0IG5hbWUgPSBwYWNrZXQucmVhZE51bGxUZXJtaW5hdGVkU3RyaW5nKCdjZXN1OCcpO1xuICAgIGNvbnN0IGRhdGEgPSBwYWNrZXQucmVhZEJ1ZmZlcigpO1xuICAgIHJldHVybiBuZXcgQXV0aFN3aXRjaFJlcXVlc3Qoe1xuICAgICAgcGx1Z2luTmFtZTogbmFtZSxcbiAgICAgIHBsdWdpbkRhdGE6IGRhdGFcbiAgICB9KTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEF1dGhTd2l0Y2hSZXF1ZXN0O1xuIl0sIm5hbWVzIjpbIlBhY2tldCIsInJlcXVpcmUiLCJBdXRoU3dpdGNoUmVxdWVzdCIsImNvbnN0cnVjdG9yIiwib3B0cyIsInBsdWdpbk5hbWUiLCJwbHVnaW5EYXRhIiwidG9QYWNrZXQiLCJsZW5ndGgiLCJidWZmZXIiLCJCdWZmZXIiLCJhbGxvY1Vuc2FmZSIsInBhY2tldCIsIm9mZnNldCIsIndyaXRlSW50OCIsIndyaXRlTnVsbFRlcm1pbmF0ZWRTdHJpbmciLCJ3cml0ZUJ1ZmZlciIsImZyb21QYWNrZXQiLCJyZWFkSW50OCIsIm5hbWUiLCJyZWFkTnVsbFRlcm1pbmF0ZWRTdHJpbmciLCJkYXRhIiwicmVhZEJ1ZmZlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/auth_switch_request.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/auth_switch_request_more_data.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/auth_switch_request_more_data.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::AuthSwitchRequest\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nclass AuthSwitchRequestMoreData {\n    constructor(data){\n        this.data = data;\n    }\n    toPacket() {\n        const length = 5 + this.data.length;\n        const buffer = Buffer.allocUnsafe(length);\n        const packet = new Packet(0, buffer, 0, length);\n        packet.offset = 4;\n        packet.writeInt8(0x01);\n        packet.writeBuffer(this.data);\n        return packet;\n    }\n    static fromPacket(packet) {\n        packet.readInt8(); // marker\n        const data = packet.readBuffer();\n        return new AuthSwitchRequestMoreData(data);\n    }\n    static verifyMarker(packet) {\n        return packet.peekByte() === 0x01;\n    }\n}\nmodule.exports = AuthSwitchRequestMoreData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2F1dGhfc3dpdGNoX3JlcXVlc3RfbW9yZV9kYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEseUdBQXlHO0FBRXpHLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDO0FBRXZCLE1BQU1DO0lBQ0pDLFlBQVlDLElBQUksQ0FBRTtRQUNoQixJQUFJLENBQUNBLElBQUksR0FBR0E7SUFDZDtJQUVBQyxXQUFXO1FBQ1QsTUFBTUMsU0FBUyxJQUFJLElBQUksQ0FBQ0YsSUFBSSxDQUFDRSxNQUFNO1FBQ25DLE1BQU1DLFNBQVNDLE9BQU9DLFdBQVcsQ0FBQ0g7UUFDbEMsTUFBTUksU0FBUyxJQUFJVixPQUFPLEdBQUdPLFFBQVEsR0FBR0Q7UUFDeENJLE9BQU9DLE1BQU0sR0FBRztRQUNoQkQsT0FBT0UsU0FBUyxDQUFDO1FBQ2pCRixPQUFPRyxXQUFXLENBQUMsSUFBSSxDQUFDVCxJQUFJO1FBQzVCLE9BQU9NO0lBQ1Q7SUFFQSxPQUFPSSxXQUFXSixNQUFNLEVBQUU7UUFDeEJBLE9BQU9LLFFBQVEsSUFBSSxTQUFTO1FBQzVCLE1BQU1YLE9BQU9NLE9BQU9NLFVBQVU7UUFDOUIsT0FBTyxJQUFJZCwwQkFBMEJFO0lBQ3ZDO0lBRUEsT0FBT2EsYUFBYVAsTUFBTSxFQUFFO1FBQzFCLE9BQU9BLE9BQU9RLFFBQVEsT0FBTztJQUMvQjtBQUNGO0FBRUFDLE9BQU9DLE9BQU8sR0FBR2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWNlZS1wcm90by1vbmUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2F1dGhfc3dpdGNoX3JlcXVlc3RfbW9yZV9kYXRhLmpzPzFmYTIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyBodHRwOi8vZGV2Lm15c3FsLmNvbS9kb2MvaW50ZXJuYWxzL2VuL2Nvbm5lY3Rpb24tcGhhc2UtcGFja2V0cy5odG1sI3BhY2tldC1Qcm90b2NvbDo6QXV0aFN3aXRjaFJlcXVlc3RcblxuY29uc3QgUGFja2V0ID0gcmVxdWlyZSgnLi4vcGFja2V0cy9wYWNrZXQnKTtcblxuY2xhc3MgQXV0aFN3aXRjaFJlcXVlc3RNb3JlRGF0YSB7XG4gIGNvbnN0cnVjdG9yKGRhdGEpIHtcbiAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICB9XG5cbiAgdG9QYWNrZXQoKSB7XG4gICAgY29uc3QgbGVuZ3RoID0gNSArIHRoaXMuZGF0YS5sZW5ndGg7XG4gICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aCk7XG4gICAgY29uc3QgcGFja2V0ID0gbmV3IFBhY2tldCgwLCBidWZmZXIsIDAsIGxlbmd0aCk7XG4gICAgcGFja2V0Lm9mZnNldCA9IDQ7XG4gICAgcGFja2V0LndyaXRlSW50OCgweDAxKTtcbiAgICBwYWNrZXQud3JpdGVCdWZmZXIodGhpcy5kYXRhKTtcbiAgICByZXR1cm4gcGFja2V0O1xuICB9XG5cbiAgc3RhdGljIGZyb21QYWNrZXQocGFja2V0KSB7XG4gICAgcGFja2V0LnJlYWRJbnQ4KCk7IC8vIG1hcmtlclxuICAgIGNvbnN0IGRhdGEgPSBwYWNrZXQucmVhZEJ1ZmZlcigpO1xuICAgIHJldHVybiBuZXcgQXV0aFN3aXRjaFJlcXVlc3RNb3JlRGF0YShkYXRhKTtcbiAgfVxuXG4gIHN0YXRpYyB2ZXJpZnlNYXJrZXIocGFja2V0KSB7XG4gICAgcmV0dXJuIHBhY2tldC5wZWVrQnl0ZSgpID09PSAweDAxO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQXV0aFN3aXRjaFJlcXVlc3RNb3JlRGF0YTtcbiJdLCJuYW1lcyI6WyJQYWNrZXQiLCJyZXF1aXJlIiwiQXV0aFN3aXRjaFJlcXVlc3RNb3JlRGF0YSIsImNvbnN0cnVjdG9yIiwiZGF0YSIsInRvUGFja2V0IiwibGVuZ3RoIiwiYnVmZmVyIiwiQnVmZmVyIiwiYWxsb2NVbnNhZmUiLCJwYWNrZXQiLCJvZmZzZXQiLCJ3cml0ZUludDgiLCJ3cml0ZUJ1ZmZlciIsImZyb21QYWNrZXQiLCJyZWFkSW50OCIsInJlYWRCdWZmZXIiLCJ2ZXJpZnlNYXJrZXIiLCJwZWVrQnl0ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/auth_switch_request_more_data.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/auth_switch_response.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/auth_switch_response.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::AuthSwitchRequest\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nclass AuthSwitchResponse {\n    constructor(data){\n        if (!Buffer.isBuffer(data)) {\n            data = Buffer.from(data);\n        }\n        this.data = data;\n    }\n    toPacket() {\n        const length = 4 + this.data.length;\n        const buffer = Buffer.allocUnsafe(length);\n        const packet = new Packet(0, buffer, 0, length);\n        packet.offset = 4;\n        packet.writeBuffer(this.data);\n        return packet;\n    }\n    static fromPacket(packet) {\n        const data = packet.readBuffer();\n        return new AuthSwitchResponse(data);\n    }\n}\nmodule.exports = AuthSwitchResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2F1dGhfc3dpdGNoX3Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEseUdBQXlHO0FBRXpHLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDO0FBRXZCLE1BQU1DO0lBQ0pDLFlBQVlDLElBQUksQ0FBRTtRQUNoQixJQUFJLENBQUNDLE9BQU9DLFFBQVEsQ0FBQ0YsT0FBTztZQUMxQkEsT0FBT0MsT0FBT0UsSUFBSSxDQUFDSDtRQUNyQjtRQUNBLElBQUksQ0FBQ0EsSUFBSSxHQUFHQTtJQUNkO0lBRUFJLFdBQVc7UUFDVCxNQUFNQyxTQUFTLElBQUksSUFBSSxDQUFDTCxJQUFJLENBQUNLLE1BQU07UUFDbkMsTUFBTUMsU0FBU0wsT0FBT00sV0FBVyxDQUFDRjtRQUNsQyxNQUFNRyxTQUFTLElBQUlaLE9BQU8sR0FBR1UsUUFBUSxHQUFHRDtRQUN4Q0csT0FBT0MsTUFBTSxHQUFHO1FBQ2hCRCxPQUFPRSxXQUFXLENBQUMsSUFBSSxDQUFDVixJQUFJO1FBQzVCLE9BQU9RO0lBQ1Q7SUFFQSxPQUFPRyxXQUFXSCxNQUFNLEVBQUU7UUFDeEIsTUFBTVIsT0FBT1EsT0FBT0ksVUFBVTtRQUM5QixPQUFPLElBQUlkLG1CQUFtQkU7SUFDaEM7QUFDRjtBQUVBYSxPQUFPQyxPQUFPLEdBQUdoQiIsInNvdXJjZXMiOlsid2VicGFjazovL2FjZWUtcHJvdG8tb25lLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9hdXRoX3N3aXRjaF9yZXNwb25zZS5qcz9iNDhjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLy8gaHR0cDovL2Rldi5teXNxbC5jb20vZG9jL2ludGVybmFscy9lbi9jb25uZWN0aW9uLXBoYXNlLXBhY2tldHMuaHRtbCNwYWNrZXQtUHJvdG9jb2w6OkF1dGhTd2l0Y2hSZXF1ZXN0XG5cbmNvbnN0IFBhY2tldCA9IHJlcXVpcmUoJy4uL3BhY2tldHMvcGFja2V0Jyk7XG5cbmNsYXNzIEF1dGhTd2l0Y2hSZXNwb25zZSB7XG4gIGNvbnN0cnVjdG9yKGRhdGEpIHtcbiAgICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihkYXRhKSkge1xuICAgICAgZGF0YSA9IEJ1ZmZlci5mcm9tKGRhdGEpO1xuICAgIH1cbiAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICB9XG5cbiAgdG9QYWNrZXQoKSB7XG4gICAgY29uc3QgbGVuZ3RoID0gNCArIHRoaXMuZGF0YS5sZW5ndGg7XG4gICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aCk7XG4gICAgY29uc3QgcGFja2V0ID0gbmV3IFBhY2tldCgwLCBidWZmZXIsIDAsIGxlbmd0aCk7XG4gICAgcGFja2V0Lm9mZnNldCA9IDQ7XG4gICAgcGFja2V0LndyaXRlQnVmZmVyKHRoaXMuZGF0YSk7XG4gICAgcmV0dXJuIHBhY2tldDtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tUGFja2V0KHBhY2tldCkge1xuICAgIGNvbnN0IGRhdGEgPSBwYWNrZXQucmVhZEJ1ZmZlcigpO1xuICAgIHJldHVybiBuZXcgQXV0aFN3aXRjaFJlc3BvbnNlKGRhdGEpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQXV0aFN3aXRjaFJlc3BvbnNlO1xuIl0sIm5hbWVzIjpbIlBhY2tldCIsInJlcXVpcmUiLCJBdXRoU3dpdGNoUmVzcG9uc2UiLCJjb25zdHJ1Y3RvciIsImRhdGEiLCJCdWZmZXIiLCJpc0J1ZmZlciIsImZyb20iLCJ0b1BhY2tldCIsImxlbmd0aCIsImJ1ZmZlciIsImFsbG9jVW5zYWZlIiwicGFja2V0Iiwib2Zmc2V0Iiwid3JpdGVCdWZmZXIiLCJmcm9tUGFja2V0IiwicmVhZEJ1ZmZlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/auth_switch_response.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/binary_row.js":
/*!*******************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/binary_row.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Types = __webpack_require__(/*! ../constants/types */ \"(rsc)/./node_modules/mysql2/lib/constants/types.js\");\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst binaryReader = new Array(256);\nclass BinaryRow {\n    constructor(columns){\n        this.columns = columns || [];\n    }\n    static toPacket(columns, encoding) {\n        // throw new Error('Not implemented');\n        const sequenceId = 0; // TODO remove, this is calculated now in connecton\n        let length = 0;\n        columns.forEach((val)=>{\n            if (val === null || typeof val === \"undefined\") {\n                ++length;\n                return;\n            }\n            length += Packet.lengthCodedStringLength(val.toString(10), encoding);\n        });\n        length = length + 2;\n        const buffer = Buffer.allocUnsafe(length + 4);\n        const packet = new Packet(sequenceId, buffer, 0, length + 4);\n        packet.offset = 4;\n        packet.writeInt8(0);\n        let bitmap = 0;\n        let bitValue = 1;\n        columns.forEach((parameter)=>{\n            if (parameter.type === Types.NULL) {\n                bitmap += bitValue;\n            }\n            bitValue *= 2;\n            if (bitValue === 256) {\n                packet.writeInt8(bitmap);\n                bitmap = 0;\n                bitValue = 1;\n            }\n        });\n        if (bitValue !== 1) {\n            packet.writeInt8(bitmap);\n        }\n        columns.forEach((val)=>{\n            if (val === null) {\n                packet.writeNull();\n                return;\n            }\n            if (typeof val === \"undefined\") {\n                packet.writeInt8(0);\n                return;\n            }\n            packet.writeLengthCodedString(val.toString(10), encoding);\n        });\n        return packet;\n    }\n    // TODO: complete list of types...\n    static fromPacket(fields, packet) {\n        const columns = new Array(fields.length);\n        packet.readInt8(); // TODO check it's 0\n        const nullBitmapLength = Math.floor((fields.length + 7 + 2) / 8);\n        // TODO: read and interpret null bitmap\n        packet.skip(nullBitmapLength);\n        for(let i = 0; i < columns.length; ++i){\n            columns[i] = binaryReader[fields[i].columnType].apply(packet);\n        }\n        return new BinaryRow(columns);\n    }\n}\n// TODO: replace with constants.MYSQL_TYPE_*\nbinaryReader[Types.DECIMAL] = Packet.prototype.readLengthCodedString;\nbinaryReader[1] = Packet.prototype.readInt8; // tiny\nbinaryReader[2] = Packet.prototype.readInt16; // short\nbinaryReader[3] = Packet.prototype.readInt32; // long\nbinaryReader[4] = Packet.prototype.readFloat; // float\nbinaryReader[5] = Packet.prototype.readDouble; // double\nbinaryReader[6] = Packet.prototype.assertInvalid; // null, should be skipped vie null bitmap\nbinaryReader[7] = Packet.prototype.readTimestamp; // timestamp, http://dev.mysql.com/doc/internals/en/prepared-statements.html#packet-ProtocolBinary::MYSQL_TYPE_TIMESTAMP\nbinaryReader[8] = Packet.prototype.readInt64; // long long\nbinaryReader[9] = Packet.prototype.readInt32; // int24\nbinaryReader[10] = Packet.prototype.readTimestamp; // date\nbinaryReader[11] = Packet.prototype.readTime; // time, http://dev.mysql.com/doc/internals/en/prepared-statements.html#packet-ProtocolBinary::MYSQL_TYPE_TIME\nbinaryReader[12] = Packet.prototype.readDateTime; // datetime, http://dev.mysql.com/doc/internals/en/prepared-statements.html#packet-ProtocolBinary::MYSQL_TYPE_DATETIME\nbinaryReader[13] = Packet.prototype.readInt16; // year\nbinaryReader[Types.VAR_STRING] = Packet.prototype.readLengthCodedString; // var string\nmodule.exports = BinaryRow;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/binary_row.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/binlog_dump.js":
/*!********************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/binlog_dump.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// http://dev.mysql.com/doc/internals/en/com-binlog-dump.html#packet-COM_BINLOG_DUMP\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst CommandCodes = __webpack_require__(/*! ../constants/commands */ \"(rsc)/./node_modules/mysql2/lib/constants/commands.js\");\n// TODO: add flag to constants\n// 0x01 - BINLOG_DUMP_NON_BLOCK\n// send EOF instead of blocking\nclass BinlogDump {\n    constructor(opts){\n        this.binlogPos = opts.binlogPos || 0;\n        this.serverId = opts.serverId || 0;\n        this.flags = opts.flags || 0;\n        this.filename = opts.filename || \"\";\n    }\n    toPacket() {\n        const length = 15 + Buffer.byteLength(this.filename, \"utf8\"); // TODO: should be ascii?\n        const buffer = Buffer.allocUnsafe(length);\n        const packet = new Packet(0, buffer, 0, length);\n        packet.offset = 4;\n        packet.writeInt8(CommandCodes.BINLOG_DUMP);\n        packet.writeInt32(this.binlogPos);\n        packet.writeInt16(this.flags);\n        packet.writeInt32(this.serverId);\n        packet.writeString(this.filename);\n        return packet;\n    }\n}\nmodule.exports = BinlogDump;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2JpbmxvZ19kdW1wLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsb0ZBQW9GO0FBRXBGLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDO0FBQ3ZCLE1BQU1DLGVBQWVELG1CQUFPQSxDQUFDO0FBRTdCLDhCQUE4QjtBQUM5QiwrQkFBK0I7QUFDL0IsK0JBQStCO0FBQy9CLE1BQU1FO0lBQ0pDLFlBQVlDLElBQUksQ0FBRTtRQUNoQixJQUFJLENBQUNDLFNBQVMsR0FBR0QsS0FBS0MsU0FBUyxJQUFJO1FBQ25DLElBQUksQ0FBQ0MsUUFBUSxHQUFHRixLQUFLRSxRQUFRLElBQUk7UUFDakMsSUFBSSxDQUFDQyxLQUFLLEdBQUdILEtBQUtHLEtBQUssSUFBSTtRQUMzQixJQUFJLENBQUNDLFFBQVEsR0FBR0osS0FBS0ksUUFBUSxJQUFJO0lBQ25DO0lBRUFDLFdBQVc7UUFDVCxNQUFNQyxTQUFTLEtBQUtDLE9BQU9DLFVBQVUsQ0FBQyxJQUFJLENBQUNKLFFBQVEsRUFBRSxTQUFTLHlCQUF5QjtRQUN2RixNQUFNSyxTQUFTRixPQUFPRyxXQUFXLENBQUNKO1FBQ2xDLE1BQU1LLFNBQVMsSUFBSWhCLE9BQU8sR0FBR2MsUUFBUSxHQUFHSDtRQUN4Q0ssT0FBT0MsTUFBTSxHQUFHO1FBQ2hCRCxPQUFPRSxTQUFTLENBQUNoQixhQUFhaUIsV0FBVztRQUN6Q0gsT0FBT0ksVUFBVSxDQUFDLElBQUksQ0FBQ2QsU0FBUztRQUNoQ1UsT0FBT0ssVUFBVSxDQUFDLElBQUksQ0FBQ2IsS0FBSztRQUM1QlEsT0FBT0ksVUFBVSxDQUFDLElBQUksQ0FBQ2IsUUFBUTtRQUMvQlMsT0FBT00sV0FBVyxDQUFDLElBQUksQ0FBQ2IsUUFBUTtRQUNoQyxPQUFPTztJQUNUO0FBQ0Y7QUFFQU8sT0FBT0MsT0FBTyxHQUFHckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hY2VlLXByb3RvLW9uZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL3BhY2tldHMvYmlubG9nX2R1bXAuanM/NmNhMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8vIGh0dHA6Ly9kZXYubXlzcWwuY29tL2RvYy9pbnRlcm5hbHMvZW4vY29tLWJpbmxvZy1kdW1wLmh0bWwjcGFja2V0LUNPTV9CSU5MT0dfRFVNUFxuXG5jb25zdCBQYWNrZXQgPSByZXF1aXJlKCcuLi9wYWNrZXRzL3BhY2tldCcpO1xuY29uc3QgQ29tbWFuZENvZGVzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL2NvbW1hbmRzJyk7XG5cbi8vIFRPRE86IGFkZCBmbGFnIHRvIGNvbnN0YW50c1xuLy8gMHgwMSAtIEJJTkxPR19EVU1QX05PTl9CTE9DS1xuLy8gc2VuZCBFT0YgaW5zdGVhZCBvZiBibG9ja2luZ1xuY2xhc3MgQmlubG9nRHVtcCB7XG4gIGNvbnN0cnVjdG9yKG9wdHMpIHtcbiAgICB0aGlzLmJpbmxvZ1BvcyA9IG9wdHMuYmlubG9nUG9zIHx8IDA7XG4gICAgdGhpcy5zZXJ2ZXJJZCA9IG9wdHMuc2VydmVySWQgfHwgMDtcbiAgICB0aGlzLmZsYWdzID0gb3B0cy5mbGFncyB8fCAwO1xuICAgIHRoaXMuZmlsZW5hbWUgPSBvcHRzLmZpbGVuYW1lIHx8ICcnO1xuICB9XG5cbiAgdG9QYWNrZXQoKSB7XG4gICAgY29uc3QgbGVuZ3RoID0gMTUgKyBCdWZmZXIuYnl0ZUxlbmd0aCh0aGlzLmZpbGVuYW1lLCAndXRmOCcpOyAvLyBUT0RPOiBzaG91bGQgYmUgYXNjaWk/XG4gICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aCk7XG4gICAgY29uc3QgcGFja2V0ID0gbmV3IFBhY2tldCgwLCBidWZmZXIsIDAsIGxlbmd0aCk7XG4gICAgcGFja2V0Lm9mZnNldCA9IDQ7XG4gICAgcGFja2V0LndyaXRlSW50OChDb21tYW5kQ29kZXMuQklOTE9HX0RVTVApO1xuICAgIHBhY2tldC53cml0ZUludDMyKHRoaXMuYmlubG9nUG9zKTtcbiAgICBwYWNrZXQud3JpdGVJbnQxNih0aGlzLmZsYWdzKTtcbiAgICBwYWNrZXQud3JpdGVJbnQzMih0aGlzLnNlcnZlcklkKTtcbiAgICBwYWNrZXQud3JpdGVTdHJpbmcodGhpcy5maWxlbmFtZSk7XG4gICAgcmV0dXJuIHBhY2tldDtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEJpbmxvZ0R1bXA7XG4iXSwibmFtZXMiOlsiUGFja2V0IiwicmVxdWlyZSIsIkNvbW1hbmRDb2RlcyIsIkJpbmxvZ0R1bXAiLCJjb25zdHJ1Y3RvciIsIm9wdHMiLCJiaW5sb2dQb3MiLCJzZXJ2ZXJJZCIsImZsYWdzIiwiZmlsZW5hbWUiLCJ0b1BhY2tldCIsImxlbmd0aCIsIkJ1ZmZlciIsImJ5dGVMZW5ndGgiLCJidWZmZXIiLCJhbGxvY1Vuc2FmZSIsInBhY2tldCIsIm9mZnNldCIsIndyaXRlSW50OCIsIkJJTkxPR19EVU1QIiwid3JpdGVJbnQzMiIsIndyaXRlSW50MTYiLCJ3cml0ZVN0cmluZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/binlog_dump.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/binlog_query_statusvars.js":
/*!********************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/binlog_query_statusvars.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n// http://dev.mysql.com/doc/internals/en/query-event.html\nconst keys = {\n    FLAGS2: 0,\n    SQL_MODE: 1,\n    CATALOG: 2,\n    AUTO_INCREMENT: 3,\n    CHARSET: 4,\n    TIME_ZONE: 5,\n    CATALOG_NZ: 6,\n    LC_TIME_NAMES: 7,\n    CHARSET_DATABASE: 8,\n    TABLE_MAP_FOR_UPDATE: 9,\n    MASTER_DATA_WRITTEN: 10,\n    INVOKERS: 11,\n    UPDATED_DB_NAMES: 12,\n    MICROSECONDS: 3\n};\nmodule.exports = function parseStatusVars(buffer) {\n    const result = {};\n    let offset = 0;\n    let key, length, prevOffset;\n    while(offset < buffer.length){\n        key = buffer[offset++];\n        switch(key){\n            case keys.FLAGS2:\n                result.flags = buffer.readUInt32LE(offset);\n                offset += 4;\n                break;\n            case keys.SQL_MODE:\n                // value is 8 bytes, but all dcumented flags are in first 4 bytes\n                result.sqlMode = buffer.readUInt32LE(offset);\n                offset += 8;\n                break;\n            case keys.CATALOG:\n                length = buffer[offset++];\n                result.catalog = buffer.toString(\"utf8\", offset, offset + length);\n                offset += length + 1; // null byte after string\n                break;\n            case keys.CHARSET:\n                result.clientCharset = buffer.readUInt16LE(offset);\n                result.connectionCollation = buffer.readUInt16LE(offset + 2);\n                result.serverCharset = buffer.readUInt16LE(offset + 4);\n                offset += 6;\n                break;\n            case keys.TIME_ZONE:\n                length = buffer[offset++];\n                result.timeZone = buffer.toString(\"utf8\", offset, offset + length);\n                offset += length; // no null byte\n                break;\n            case keys.CATALOG_NZ:\n                length = buffer[offset++];\n                result.catalogNz = buffer.toString(\"utf8\", offset, offset + length);\n                offset += length; // no null byte\n                break;\n            case keys.LC_TIME_NAMES:\n                result.lcTimeNames = buffer.readUInt16LE(offset);\n                offset += 2;\n                break;\n            case keys.CHARSET_DATABASE:\n                result.schemaCharset = buffer.readUInt16LE(offset);\n                offset += 2;\n                break;\n            case keys.TABLE_MAP_FOR_UPDATE:\n                result.mapForUpdate1 = buffer.readUInt32LE(offset);\n                result.mapForUpdate2 = buffer.readUInt32LE(offset + 4);\n                offset += 8;\n                break;\n            case keys.MASTER_DATA_WRITTEN:\n                result.masterDataWritten = buffer.readUInt32LE(offset);\n                offset += 4;\n                break;\n            case keys.INVOKERS:\n                length = buffer[offset++];\n                result.invokerUsername = buffer.toString(\"utf8\", offset, offset + length);\n                offset += length;\n                length = buffer[offset++];\n                result.invokerHostname = buffer.toString(\"utf8\", offset, offset + length);\n                offset += length;\n                break;\n            case keys.UPDATED_DB_NAMES:\n                length = buffer[offset++];\n                // length - number of null-terminated strings\n                result.updatedDBs = []; // we'll store them as array here\n                for(; length; --length){\n                    prevOffset = offset;\n                    // fast forward to null terminating byte\n                    while(buffer[offset++] && offset < buffer.length){\n                    // empty body, everything inside while condition\n                    }\n                    result.updatedDBs.push(buffer.toString(\"utf8\", prevOffset, offset - 1));\n                }\n                break;\n            case keys.MICROSECONDS:\n                result.microseconds = // REVIEW: INVALID UNKNOWN VARIABLE!\n                buffer.readInt16LE(offset) + (buffer[offset + 2] << 16);\n                offset += 3;\n        }\n    }\n    return result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/binlog_query_statusvars.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/change_user.js":
/*!********************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/change_user.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst CommandCode = __webpack_require__(/*! ../constants/commands.js */ \"(rsc)/./node_modules/mysql2/lib/constants/commands.js\");\nconst ClientConstants = __webpack_require__(/*! ../constants/client.js */ \"(rsc)/./node_modules/mysql2/lib/constants/client.js\");\nconst Packet = __webpack_require__(/*! ../packets/packet.js */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst auth41 = __webpack_require__(/*! ../auth_41.js */ \"(rsc)/./node_modules/mysql2/lib/auth_41.js\");\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\n// https://dev.mysql.com/doc/internals/en/com-change-user.html#packet-COM_CHANGE_USER\nclass ChangeUser {\n    constructor(opts){\n        this.flags = opts.flags;\n        this.user = opts.user || \"\";\n        this.database = opts.database || \"\";\n        this.password = opts.password || \"\";\n        this.passwordSha1 = opts.passwordSha1;\n        this.authPluginData1 = opts.authPluginData1;\n        this.authPluginData2 = opts.authPluginData2;\n        this.connectAttributes = opts.connectAttrinutes || {};\n        let authToken;\n        if (this.passwordSha1) {\n            authToken = auth41.calculateTokenFromPasswordSha(this.passwordSha1, this.authPluginData1, this.authPluginData2);\n        } else {\n            authToken = auth41.calculateToken(this.password, this.authPluginData1, this.authPluginData2);\n        }\n        this.authToken = authToken;\n        this.charsetNumber = opts.charsetNumber;\n    }\n    // TODO\n    // ChangeUser.fromPacket = function(packet)\n    // };\n    serializeToBuffer(buffer) {\n        const isSet = (flag)=>this.flags & ClientConstants[flag];\n        const packet = new Packet(0, buffer, 0, buffer.length);\n        packet.offset = 4;\n        const encoding = CharsetToEncoding[this.charsetNumber];\n        packet.writeInt8(CommandCode.CHANGE_USER);\n        packet.writeNullTerminatedString(this.user, encoding);\n        if (isSet(\"SECURE_CONNECTION\")) {\n            packet.writeInt8(this.authToken.length);\n            packet.writeBuffer(this.authToken);\n        } else {\n            packet.writeBuffer(this.authToken);\n            packet.writeInt8(0);\n        }\n        packet.writeNullTerminatedString(this.database, encoding);\n        packet.writeInt16(this.charsetNumber);\n        if (isSet(\"PLUGIN_AUTH\")) {\n            // TODO: read this from parameters\n            packet.writeNullTerminatedString(\"mysql_native_password\", \"latin1\");\n        }\n        if (isSet(\"CONNECT_ATTRS\")) {\n            const connectAttributes = this.connectAttributes;\n            const attrNames = Object.keys(connectAttributes);\n            let keysLength = 0;\n            for(let k = 0; k < attrNames.length; ++k){\n                keysLength += Packet.lengthCodedStringLength(attrNames[k], encoding);\n                keysLength += Packet.lengthCodedStringLength(connectAttributes[attrNames[k]], encoding);\n            }\n            packet.writeLengthCodedNumber(keysLength);\n            for(let k = 0; k < attrNames.length; ++k){\n                packet.writeLengthCodedString(attrNames[k], encoding);\n                packet.writeLengthCodedString(connectAttributes[attrNames[k]], encoding);\n            }\n        }\n        return packet;\n    }\n    toPacket() {\n        if (typeof this.user !== \"string\") {\n            throw new Error('\"user\" connection config property must be a string');\n        }\n        if (typeof this.database !== \"string\") {\n            throw new Error('\"database\" connection config property must be a string');\n        }\n        // dry run: calculate resulting packet length\n        const p = this.serializeToBuffer(Packet.MockBuffer());\n        return this.serializeToBuffer(Buffer.allocUnsafe(p.offset));\n    }\n}\nmodule.exports = ChangeUser;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/change_user.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/close_statement.js":
/*!************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/close_statement.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst CommandCodes = __webpack_require__(/*! ../constants/commands */ \"(rsc)/./node_modules/mysql2/lib/constants/commands.js\");\nclass CloseStatement {\n    constructor(id){\n        this.id = id;\n    }\n    // note: no response sent back\n    toPacket() {\n        const packet = new Packet(0, Buffer.allocUnsafe(9), 0, 9);\n        packet.offset = 4;\n        packet.writeInt8(CommandCodes.STMT_CLOSE);\n        packet.writeInt32(this.id);\n        return packet;\n    }\n}\nmodule.exports = CloseStatement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2Nsb3NlX3N0YXRlbWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDO0FBQ3ZCLE1BQU1DLGVBQWVELG1CQUFPQSxDQUFDO0FBRTdCLE1BQU1FO0lBQ0pDLFlBQVlDLEVBQUUsQ0FBRTtRQUNkLElBQUksQ0FBQ0EsRUFBRSxHQUFHQTtJQUNaO0lBRUEsOEJBQThCO0lBQzlCQyxXQUFXO1FBQ1QsTUFBTUMsU0FBUyxJQUFJUCxPQUFPLEdBQUdRLE9BQU9DLFdBQVcsQ0FBQyxJQUFJLEdBQUc7UUFDdkRGLE9BQU9HLE1BQU0sR0FBRztRQUNoQkgsT0FBT0ksU0FBUyxDQUFDVCxhQUFhVSxVQUFVO1FBQ3hDTCxPQUFPTSxVQUFVLENBQUMsSUFBSSxDQUFDUixFQUFFO1FBQ3pCLE9BQU9FO0lBQ1Q7QUFDRjtBQUVBTyxPQUFPQyxPQUFPLEdBQUdaIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWNlZS1wcm90by1vbmUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2Nsb3NlX3N0YXRlbWVudC5qcz80YTc0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgUGFja2V0ID0gcmVxdWlyZSgnLi4vcGFja2V0cy9wYWNrZXQnKTtcbmNvbnN0IENvbW1hbmRDb2RlcyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9jb21tYW5kcycpO1xuXG5jbGFzcyBDbG9zZVN0YXRlbWVudCB7XG4gIGNvbnN0cnVjdG9yKGlkKSB7XG4gICAgdGhpcy5pZCA9IGlkO1xuICB9XG5cbiAgLy8gbm90ZTogbm8gcmVzcG9uc2Ugc2VudCBiYWNrXG4gIHRvUGFja2V0KCkge1xuICAgIGNvbnN0IHBhY2tldCA9IG5ldyBQYWNrZXQoMCwgQnVmZmVyLmFsbG9jVW5zYWZlKDkpLCAwLCA5KTtcbiAgICBwYWNrZXQub2Zmc2V0ID0gNDtcbiAgICBwYWNrZXQud3JpdGVJbnQ4KENvbW1hbmRDb2Rlcy5TVE1UX0NMT1NFKTtcbiAgICBwYWNrZXQud3JpdGVJbnQzMih0aGlzLmlkKTtcbiAgICByZXR1cm4gcGFja2V0O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQ2xvc2VTdGF0ZW1lbnQ7XG4iXSwibmFtZXMiOlsiUGFja2V0IiwicmVxdWlyZSIsIkNvbW1hbmRDb2RlcyIsIkNsb3NlU3RhdGVtZW50IiwiY29uc3RydWN0b3IiLCJpZCIsInRvUGFja2V0IiwicGFja2V0IiwiQnVmZmVyIiwiYWxsb2NVbnNhZmUiLCJvZmZzZXQiLCJ3cml0ZUludDgiLCJTVE1UX0NMT1NFIiwid3JpdGVJbnQzMiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/close_statement.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/column_definition.js":
/*!**************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/column_definition.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst StringParser = __webpack_require__(/*! ../parsers/string */ \"(rsc)/./node_modules/mysql2/lib/parsers/string.js\");\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\nconst fields = [\n    \"catalog\",\n    \"schema\",\n    \"table\",\n    \"orgTable\",\n    \"name\",\n    \"orgName\"\n];\n// creating JS string is relatively expensive (compared to\n// reading few bytes from buffer) because all string properties\n// except for name are unlikely to be used we postpone\n// string conversion until property access\n//\n// TODO: watch for integration benchmarks (one with real network buffer)\n// there could be bad side effect as keeping reference to a buffer makes it\n// sit in the memory longer (usually until final .query() callback)\n// Latest v8 perform much better in regard to bufferer -> string conversion,\n// at some point of time this optimisation might become unnecessary\n// see https://github.com/sidorares/node-mysql2/pull/137\n//\nclass ColumnDefinition {\n    constructor(packet, clientEncoding){\n        this._buf = packet.buffer;\n        this._clientEncoding = clientEncoding;\n        this._catalogLength = packet.readLengthCodedNumber();\n        this._catalogStart = packet.offset;\n        packet.offset += this._catalogLength;\n        this._schemaLength = packet.readLengthCodedNumber();\n        this._schemaStart = packet.offset;\n        packet.offset += this._schemaLength;\n        this._tableLength = packet.readLengthCodedNumber();\n        this._tableStart = packet.offset;\n        packet.offset += this._tableLength;\n        this._orgTableLength = packet.readLengthCodedNumber();\n        this._orgTableStart = packet.offset;\n        packet.offset += this._orgTableLength;\n        // name is always used, don't make it lazy\n        const _nameLength = packet.readLengthCodedNumber();\n        const _nameStart = packet.offset;\n        packet.offset += _nameLength;\n        this._orgNameLength = packet.readLengthCodedNumber();\n        this._orgNameStart = packet.offset;\n        packet.offset += this._orgNameLength;\n        packet.skip(1); //  length of the following fields (always 0x0c)\n        this.characterSet = packet.readInt16();\n        this.encoding = CharsetToEncoding[this.characterSet];\n        this.name = StringParser.decode(this._buf, this.encoding === \"binary\" ? this._clientEncoding : this.encoding, _nameStart, _nameStart + _nameLength);\n        this.columnLength = packet.readInt32();\n        this.columnType = packet.readInt8();\n        this.type = this.columnType;\n        this.flags = packet.readInt16();\n        this.decimals = packet.readInt8();\n    }\n    inspect() {\n        return {\n            catalog: this.catalog,\n            schema: this.schema,\n            name: this.name,\n            orgName: this.orgName,\n            table: this.table,\n            orgTable: this.orgTable,\n            characterSet: this.characterSet,\n            encoding: this.encoding,\n            columnLength: this.columnLength,\n            type: this.columnType,\n            flags: this.flags,\n            decimals: this.decimals\n        };\n    }\n    [Symbol.for(\"nodejs.util.inspect.custom\")](depth, inspectOptions, inspect) {\n        const Types = __webpack_require__(/*! ../constants/types.js */ \"(rsc)/./node_modules/mysql2/lib/constants/types.js\");\n        const typeNames = [];\n        for(const t in Types){\n            typeNames[Types[t]] = t;\n        }\n        const fiedFlags = __webpack_require__(/*! ../constants/field_flags.js */ \"(rsc)/./node_modules/mysql2/lib/constants/field_flags.js\");\n        const flagNames = [];\n        // TODO: respect inspectOptions.showHidden\n        //const inspectFlags = inspectOptions.showHidden ? this.flags : this.flags & ~fiedFlags.PRI_KEY;\n        const inspectFlags = this.flags;\n        for(const f in fiedFlags){\n            if (inspectFlags & fiedFlags[f]) {\n                if (f === \"PRI_KEY\") {\n                    flagNames.push(\"PRIMARY KEY\");\n                } else if (f === \"NOT_NULL\") {\n                    flagNames.push(\"NOT NULL\");\n                } else if (f === \"BINARY\") {\n                // ignore flag for now\n                } else if (f === \"MULTIPLE_KEY\") {\n                // not sure if that should be part of inspection.\n                // in the schema usually this is part of index definition\n                // example: UNIQUE KEY `my_uniq_id` (`id_box_elements`,`id_router`)\n                // note that only first column has MULTIPLE_KEY flag set in this case\n                // so there is no good way of knowing that this is part of index just \n                // by looking at indifidual field flags\n                } else if (f === \"NO_DEFAULT_VALUE\") {\n                // almost the same as NOT_NULL?\n                } else if (f === \"BLOB\") {\n                // included in the type\n                } else if (f === \"UNSIGNED\") {\n                // this should be first after type\n                } else if (f === \"TIMESTAMP\") {\n                // timestamp flag is redundant for inspection - already included in type\n                } else if (f === \"ON_UPDATE_NOW\") {\n                    flagNames.push(\"ON UPDATE CURRENT_TIMESTAMP\");\n                } else {\n                    flagNames.push(f);\n                }\n            }\n        }\n        if (depth > 1) {\n            return inspect({\n                ...this.inspect(),\n                typeName: typeNames[this.columnType],\n                flags: flagNames\n            });\n        }\n        const isUnsigned = this.flags & fiedFlags.UNSIGNED;\n        let typeName = typeNames[this.columnType];\n        if (typeName === \"BLOB\") {\n            // TODO: check for non-utf8mb4 encoding\n            if (this.columnLength === 4294967295) {\n                typeName = \"LONGTEXT\";\n            } else if (this.columnLength === 67108860) {\n                typeName = \"MEDIUMTEXT\";\n            } else if (this.columnLength === 262140) {\n                typeName = \"TEXT\";\n            } else if (this.columnLength === 1020) {\n                typeName = \"TINYTEXT\";\n            } else {\n                typeName = `BLOB(${this.columnLength})`;\n            }\n        } else if (typeName === \"VAR_STRING\") {\n            // TODO: check for non-utf8mb4 encoding\n            typeName = `VARCHAR(${Math.ceil(this.columnLength / 4)})`;\n        } else if (typeName === \"TINY\") {\n            if (this.columnLength === 3 && isUnsigned || this.columnLength === 4 && !isUnsigned) {\n                typeName = \"TINYINT\";\n            } else {\n                typeName = `TINYINT(${this.columnLength})`;\n            }\n        } else if (typeName === \"LONGLONG\") {\n            if (this.columnLength === 20) {\n                typeName = \"BIGINT\";\n            } else {\n                typeName = `BIGINT(${this.columnLength})`;\n            }\n        } else if (typeName === \"SHORT\") {\n            if (isUnsigned && this.columnLength === 5) {\n                typeName = \"SMALLINT\";\n            } else if (!isUnsigned && this.columnLength === 6) {\n                typeName = \"SMALLINT\";\n            } else {\n                typeName = `SMALLINT(${this.columnLength})`;\n            }\n        } else if (typeName === \"LONG\") {\n            if (isUnsigned && this.columnLength === 10) {\n                typeName = \"INT\";\n            } else if (!isUnsigned && this.columnLength === 11) {\n                typeName = \"INT\";\n            } else {\n                typeName = `INT(${this.columnLength})`;\n            }\n        } else if (typeName === \"INT24\") {\n            if (isUnsigned && this.columnLength === 8) {\n                typeName = \"MEDIUMINT\";\n            } else if (!isUnsigned && this.columnLength === 9) {\n                typeName = \"MEDIUMINT\";\n            } else {\n                typeName = `MEDIUMINT(${this.columnLength})`;\n            }\n        } else if (typeName === \"DOUBLE\") {\n            // DOUBLE without modifiers is reported as DOUBLE(22, 31)\n            if (this.columnLength === 22 && this.decimals === 31) {\n                typeName = \"DOUBLE\";\n            } else {\n                typeName = `DOUBLE(${this.columnLength},${this.decimals})`;\n            }\n        } else if (typeName === \"FLOAT\") {\n            // FLOAT without modifiers is reported as FLOAT(12, 31)\n            if (this.columnLength === 12 && this.decimals === 31) {\n                typeName = \"FLOAT\";\n            } else {\n                typeName = `FLOAT(${this.columnLength},${this.decimals})`;\n            }\n        } else if (typeName === \"NEWDECIMAL\") {\n            if (this.columnLength === 11 && this.decimals === 0) {\n                typeName = \"DECIMAL\";\n            } else if (this.decimals === 0) {\n                // not sure why, but DECIMAL(13) is reported as DECIMAL(14, 0)\n                // and DECIMAL(13, 9) is reported as NEWDECIMAL(15, 9)\n                if (isUnsigned) {\n                    typeName = `DECIMAL(${this.columnLength})`;\n                } else {\n                    typeName = `DECIMAL(${this.columnLength - 1})`;\n                }\n            } else {\n                typeName = `DECIMAL(${this.columnLength - 2},${this.decimals})`;\n            }\n        } else {\n            typeName = `${typeNames[this.columnType]}(${this.columnLength})`;\n        }\n        if (isUnsigned) {\n            typeName += \" UNSIGNED\";\n        }\n        // TODO respect colors option\n        return `\\`${this.name}\\` ${[\n            typeName,\n            ...flagNames\n        ].join(\" \")}`;\n    }\n    static toPacket(column, sequenceId) {\n        let length = 17; // = 4 padding + 1 + 12 for the rest\n        fields.forEach((field)=>{\n            length += Packet.lengthCodedStringLength(column[field], CharsetToEncoding[column.characterSet]);\n        });\n        const buffer = Buffer.allocUnsafe(length);\n        const packet = new Packet(sequenceId, buffer, 0, length);\n        function writeField(name) {\n            packet.writeLengthCodedString(column[name], CharsetToEncoding[column.characterSet]);\n        }\n        packet.offset = 4;\n        fields.forEach(writeField);\n        packet.writeInt8(0x0c);\n        packet.writeInt16(column.characterSet);\n        packet.writeInt32(column.columnLength);\n        packet.writeInt8(column.columnType);\n        packet.writeInt16(column.flags);\n        packet.writeInt8(column.decimals);\n        packet.writeInt16(0); // filler\n        return packet;\n    }\n    // node-mysql compatibility: alias \"db\" to \"schema\"\n    get db() {\n        return this.schema;\n    }\n}\nconst addString = function(name) {\n    Object.defineProperty(ColumnDefinition.prototype, name, {\n        get: function() {\n            const start = this[`_${name}Start`];\n            const end = start + this[`_${name}Length`];\n            const val = StringParser.decode(this._buf, this.encoding === \"binary\" ? this._clientEncoding : this.encoding, start, end);\n            Object.defineProperty(this, name, {\n                value: val,\n                writable: false,\n                configurable: false,\n                enumerable: false\n            });\n            return val;\n        }\n    });\n};\naddString(\"catalog\");\naddString(\"schema\");\naddString(\"table\");\naddString(\"orgTable\");\naddString(\"orgName\");\nmodule.exports = ColumnDefinition;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/column_definition.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/execute.js":
/*!****************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/execute.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst CursorType = __webpack_require__(/*! ../constants/cursor */ \"(rsc)/./node_modules/mysql2/lib/constants/cursor.js\");\nconst CommandCodes = __webpack_require__(/*! ../constants/commands */ \"(rsc)/./node_modules/mysql2/lib/constants/commands.js\");\nconst Types = __webpack_require__(/*! ../constants/types */ \"(rsc)/./node_modules/mysql2/lib/constants/types.js\");\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\nfunction isJSON(value) {\n    return Array.isArray(value) || value.constructor === Object || typeof value.toJSON === \"function\" && !Buffer.isBuffer(value);\n}\n/**\n * Converts a value to an object describing type, String/Buffer representation and length\n * @param {*} value\n */ function toParameter(value, encoding, timezone) {\n    let type = Types.VAR_STRING;\n    let length;\n    let writer = function(value) {\n        // eslint-disable-next-line no-invalid-this\n        return Packet.prototype.writeLengthCodedString.call(this, value, encoding);\n    };\n    if (value !== null) {\n        switch(typeof value){\n            case \"undefined\":\n                throw new TypeError(\"Bind parameters must not contain undefined\");\n            case \"number\":\n                type = Types.DOUBLE;\n                length = 8;\n                writer = Packet.prototype.writeDouble;\n                break;\n            case \"boolean\":\n                value = value | 0;\n                type = Types.TINY;\n                length = 1;\n                writer = Packet.prototype.writeInt8;\n                break;\n            case \"object\":\n                if (Object.prototype.toString.call(value) === \"[object Date]\") {\n                    type = Types.DATETIME;\n                    length = 12;\n                    writer = function(value) {\n                        // eslint-disable-next-line no-invalid-this\n                        return Packet.prototype.writeDate.call(this, value, timezone);\n                    };\n                } else if (isJSON(value)) {\n                    value = JSON.stringify(value);\n                    type = Types.JSON;\n                } else if (Buffer.isBuffer(value)) {\n                    length = Packet.lengthCodedNumberLength(value.length) + value.length;\n                    writer = Packet.prototype.writeLengthCodedBuffer;\n                }\n                break;\n            default:\n                value = value.toString();\n        }\n    } else {\n        value = \"\";\n        type = Types.NULL;\n    }\n    if (!length) {\n        length = Packet.lengthCodedStringLength(value, encoding);\n    }\n    return {\n        value,\n        type,\n        length,\n        writer\n    };\n}\nclass Execute {\n    constructor(id, parameters, charsetNumber, timezone){\n        this.id = id;\n        this.parameters = parameters;\n        this.encoding = CharsetToEncoding[charsetNumber];\n        this.timezone = timezone;\n    }\n    static fromPacket(packet, encoding) {\n        const stmtId = packet.readInt32();\n        const flags = packet.readInt8();\n        const iterationCount = packet.readInt32();\n        let i = packet.offset;\n        while(i < packet.end - 1){\n            if ((packet.buffer[i + 1] === Types.VAR_STRING || packet.buffer[i + 1] === Types.NULL || packet.buffer[i + 1] === Types.DOUBLE || packet.buffer[i + 1] === Types.TINY || packet.buffer[i + 1] === Types.DATETIME || packet.buffer[i + 1] === Types.JSON) && packet.buffer[i] === 1 && packet.buffer[i + 2] === 0) {\n                break;\n            } else {\n                packet.readInt8();\n            }\n            i++;\n        }\n        const types = [];\n        for(let i = packet.offset + 1; i < packet.end - 1; i++){\n            if ((packet.buffer[i] === Types.VAR_STRING || packet.buffer[i] === Types.NULL || packet.buffer[i] === Types.DOUBLE || packet.buffer[i] === Types.TINY || packet.buffer[i] === Types.DATETIME || packet.buffer[i] === Types.JSON) && packet.buffer[i + 1] === 0) {\n                types.push(packet.buffer[i]);\n                packet.skip(2);\n            }\n        }\n        packet.skip(1);\n        const values = [];\n        for(let i = 0; i < types.length; i++){\n            if (types[i] === Types.VAR_STRING) {\n                values.push(packet.readLengthCodedString(encoding));\n            } else if (types[i] === Types.DOUBLE) {\n                values.push(packet.readDouble());\n            } else if (types[i] === Types.TINY) {\n                values.push(packet.readInt8());\n            } else if (types[i] === Types.DATETIME) {\n                values.push(packet.readDateTime());\n            } else if (types[i] === Types.JSON) {\n                values.push(JSON.parse(packet.readLengthCodedString(encoding)));\n            }\n            if (types[i] === Types.NULL) {\n                values.push(null);\n            }\n        }\n        return {\n            stmtId,\n            flags,\n            iterationCount,\n            values\n        };\n    }\n    toPacket() {\n        // TODO: don't try to calculate packet length in advance, allocate some big buffer in advance (header + 256 bytes?)\n        // and copy + reallocate if not enough\n        // 0 + 4 - length, seqId\n        // 4 + 1 - COM_EXECUTE\n        // 5 + 4 - stmtId\n        // 9 + 1 - flags\n        // 10 + 4 - iteration-count (always 1)\n        let length = 14;\n        let parameters;\n        if (this.parameters && this.parameters.length > 0) {\n            length += Math.floor((this.parameters.length + 7) / 8);\n            length += 1; // new-params-bound-flag\n            length += 2 * this.parameters.length; // type byte for each parameter if new-params-bound-flag is set\n            parameters = this.parameters.map((value)=>toParameter(value, this.encoding, this.timezone));\n            length += parameters.reduce((accumulator, parameter)=>accumulator + parameter.length, 0);\n        }\n        const buffer = Buffer.allocUnsafe(length);\n        const packet = new Packet(0, buffer, 0, length);\n        packet.offset = 4;\n        packet.writeInt8(CommandCodes.STMT_EXECUTE);\n        packet.writeInt32(this.id);\n        packet.writeInt8(CursorType.NO_CURSOR); // flags\n        packet.writeInt32(1); // iteration-count, always 1\n        if (parameters) {\n            let bitmap = 0;\n            let bitValue = 1;\n            parameters.forEach((parameter)=>{\n                if (parameter.type === Types.NULL) {\n                    bitmap += bitValue;\n                }\n                bitValue *= 2;\n                if (bitValue === 256) {\n                    packet.writeInt8(bitmap);\n                    bitmap = 0;\n                    bitValue = 1;\n                }\n            });\n            if (bitValue !== 1) {\n                packet.writeInt8(bitmap);\n            }\n            // TODO: explain meaning of the flag\n            // afaik, if set n*2 bytes with type of parameter are sent before parameters\n            // if not, previous execution types are used (TODO prooflink)\n            packet.writeInt8(1); // new-params-bound-flag\n            // Write parameter types\n            parameters.forEach((parameter)=>{\n                packet.writeInt8(parameter.type); // field type\n                packet.writeInt8(0); // parameter flag\n            });\n            // Write parameter values\n            parameters.forEach((parameter)=>{\n                if (parameter.type !== Types.NULL) {\n                    parameter.writer.call(packet, parameter.value);\n                }\n            });\n        }\n        return packet;\n    }\n}\nmodule.exports = Execute;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/execute.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/handshake.js":
/*!******************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/handshake.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst ClientConstants = __webpack_require__(/*! ../constants/client.js */ \"(rsc)/./node_modules/mysql2/lib/constants/client.js\");\n// https://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::Handshake\nclass Handshake {\n    constructor(args){\n        this.protocolVersion = args.protocolVersion;\n        this.serverVersion = args.serverVersion;\n        this.capabilityFlags = args.capabilityFlags;\n        this.connectionId = args.connectionId;\n        this.authPluginData1 = args.authPluginData1;\n        this.authPluginData2 = args.authPluginData2;\n        this.characterSet = args.characterSet;\n        this.statusFlags = args.statusFlags;\n        this.autPluginName = args.autPluginName;\n    }\n    setScrambleData(cb) {\n        (__webpack_require__(/*! crypto */ \"crypto\").randomBytes)(20, (err, data)=>{\n            if (err) {\n                cb(err);\n                return;\n            }\n            this.authPluginData1 = data.slice(0, 8);\n            this.authPluginData2 = data.slice(8, 20);\n            cb();\n        });\n    }\n    toPacket(sequenceId) {\n        const length = 68 + Buffer.byteLength(this.serverVersion, \"utf8\");\n        const buffer = Buffer.alloc(length + 4, 0); // zero fill, 10 bytes filler later needs to contain zeros\n        const packet = new Packet(sequenceId, buffer, 0, length + 4);\n        packet.offset = 4;\n        packet.writeInt8(this.protocolVersion);\n        packet.writeString(this.serverVersion, \"cesu8\");\n        packet.writeInt8(0);\n        packet.writeInt32(this.connectionId);\n        packet.writeBuffer(this.authPluginData1);\n        packet.writeInt8(0);\n        const capabilityFlagsBuffer = Buffer.allocUnsafe(4);\n        capabilityFlagsBuffer.writeUInt32LE(this.capabilityFlags, 0);\n        packet.writeBuffer(capabilityFlagsBuffer.slice(0, 2));\n        packet.writeInt8(this.characterSet);\n        packet.writeInt16(this.statusFlags);\n        packet.writeBuffer(capabilityFlagsBuffer.slice(2, 4));\n        packet.writeInt8(21); // authPluginDataLength\n        packet.skip(10);\n        packet.writeBuffer(this.authPluginData2);\n        packet.writeInt8(0);\n        packet.writeString(\"mysql_native_password\", \"latin1\");\n        packet.writeInt8(0);\n        return packet;\n    }\n    static fromPacket(packet) {\n        const args = {};\n        args.protocolVersion = packet.readInt8();\n        args.serverVersion = packet.readNullTerminatedString(\"cesu8\");\n        args.connectionId = packet.readInt32();\n        args.authPluginData1 = packet.readBuffer(8);\n        packet.skip(1);\n        const capabilityFlagsBuffer = Buffer.allocUnsafe(4);\n        capabilityFlagsBuffer[0] = packet.readInt8();\n        capabilityFlagsBuffer[1] = packet.readInt8();\n        if (packet.haveMoreData()) {\n            args.characterSet = packet.readInt8();\n            args.statusFlags = packet.readInt16();\n            // upper 2 bytes\n            capabilityFlagsBuffer[2] = packet.readInt8();\n            capabilityFlagsBuffer[3] = packet.readInt8();\n            args.capabilityFlags = capabilityFlagsBuffer.readUInt32LE(0);\n            if (args.capabilityFlags & ClientConstants.PLUGIN_AUTH) {\n                args.authPluginDataLength = packet.readInt8();\n            } else {\n                args.authPluginDataLength = 0;\n                packet.skip(1);\n            }\n            packet.skip(10);\n        } else {\n            args.capabilityFlags = capabilityFlagsBuffer.readUInt16LE(0);\n        }\n        const isSecureConnection = args.capabilityFlags & ClientConstants.SECURE_CONNECTION;\n        if (isSecureConnection) {\n            const authPluginDataLength = args.authPluginDataLength;\n            if (authPluginDataLength === 0) {\n                // for Secure Password Authentication\n                args.authPluginDataLength = 20;\n                args.authPluginData2 = packet.readBuffer(12);\n                packet.skip(1);\n            } else {\n                // length > 0\n                // for Custom Auth Plugin (PLUGIN_AUTH)\n                const len = Math.max(13, authPluginDataLength - 8);\n                args.authPluginData2 = packet.readBuffer(len);\n            }\n        }\n        if (args.capabilityFlags & ClientConstants.PLUGIN_AUTH) {\n            args.autPluginName = packet.readNullTerminatedString(\"ascii\");\n        }\n        return new Handshake(args);\n    }\n}\nmodule.exports = Handshake;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/handshake.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/handshake_response.js":
/*!***************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/handshake_response.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst ClientConstants = __webpack_require__(/*! ../constants/client.js */ \"(rsc)/./node_modules/mysql2/lib/constants/client.js\");\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\nconst Packet = __webpack_require__(/*! ../packets/packet.js */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst auth41 = __webpack_require__(/*! ../auth_41.js */ \"(rsc)/./node_modules/mysql2/lib/auth_41.js\");\nclass HandshakeResponse {\n    constructor(handshake){\n        this.user = handshake.user || \"\";\n        this.database = handshake.database || \"\";\n        this.password = handshake.password || \"\";\n        this.passwordSha1 = handshake.passwordSha1;\n        this.authPluginData1 = handshake.authPluginData1;\n        this.authPluginData2 = handshake.authPluginData2;\n        this.compress = handshake.compress;\n        this.clientFlags = handshake.flags;\n        // TODO: pre-4.1 auth support\n        let authToken;\n        if (this.passwordSha1) {\n            authToken = auth41.calculateTokenFromPasswordSha(this.passwordSha1, this.authPluginData1, this.authPluginData2);\n        } else {\n            authToken = auth41.calculateToken(this.password, this.authPluginData1, this.authPluginData2);\n        }\n        this.authToken = authToken;\n        this.charsetNumber = handshake.charsetNumber;\n        this.encoding = CharsetToEncoding[handshake.charsetNumber];\n        this.connectAttributes = handshake.connectAttributes;\n    }\n    serializeResponse(buffer) {\n        const isSet = (flag)=>this.clientFlags & ClientConstants[flag];\n        const packet = new Packet(0, buffer, 0, buffer.length);\n        packet.offset = 4;\n        packet.writeInt32(this.clientFlags);\n        packet.writeInt32(0); // max packet size. todo: move to config\n        packet.writeInt8(this.charsetNumber);\n        packet.skip(23);\n        const encoding = this.encoding;\n        packet.writeNullTerminatedString(this.user, encoding);\n        let k;\n        if (isSet(\"PLUGIN_AUTH_LENENC_CLIENT_DATA\")) {\n            packet.writeLengthCodedNumber(this.authToken.length);\n            packet.writeBuffer(this.authToken);\n        } else if (isSet(\"SECURE_CONNECTION\")) {\n            packet.writeInt8(this.authToken.length);\n            packet.writeBuffer(this.authToken);\n        } else {\n            packet.writeBuffer(this.authToken);\n            packet.writeInt8(0);\n        }\n        if (isSet(\"CONNECT_WITH_DB\")) {\n            packet.writeNullTerminatedString(this.database, encoding);\n        }\n        if (isSet(\"PLUGIN_AUTH\")) {\n            // TODO: pass from config\n            packet.writeNullTerminatedString(\"mysql_native_password\", \"latin1\");\n        }\n        if (isSet(\"CONNECT_ATTRS\")) {\n            const connectAttributes = this.connectAttributes || {};\n            const attrNames = Object.keys(connectAttributes);\n            let keysLength = 0;\n            for(k = 0; k < attrNames.length; ++k){\n                keysLength += Packet.lengthCodedStringLength(attrNames[k], encoding);\n                keysLength += Packet.lengthCodedStringLength(connectAttributes[attrNames[k]], encoding);\n            }\n            packet.writeLengthCodedNumber(keysLength);\n            for(k = 0; k < attrNames.length; ++k){\n                packet.writeLengthCodedString(attrNames[k], encoding);\n                packet.writeLengthCodedString(connectAttributes[attrNames[k]], encoding);\n            }\n        }\n        return packet;\n    }\n    toPacket() {\n        if (typeof this.user !== \"string\") {\n            throw new Error('\"user\" connection config property must be a string');\n        }\n        if (typeof this.database !== \"string\") {\n            throw new Error('\"database\" connection config property must be a string');\n        }\n        // dry run: calculate resulting packet length\n        const p = this.serializeResponse(Packet.MockBuffer());\n        return this.serializeResponse(Buffer.alloc(p.offset));\n    }\n    static fromPacket(packet) {\n        const args = {};\n        args.clientFlags = packet.readInt32();\n        function isSet(flag) {\n            return args.clientFlags & ClientConstants[flag];\n        }\n        args.maxPacketSize = packet.readInt32();\n        args.charsetNumber = packet.readInt8();\n        const encoding = CharsetToEncoding[args.charsetNumber];\n        args.encoding = encoding;\n        packet.skip(23);\n        args.user = packet.readNullTerminatedString(encoding);\n        let authTokenLength;\n        if (isSet(\"PLUGIN_AUTH_LENENC_CLIENT_DATA\")) {\n            authTokenLength = packet.readLengthCodedNumber(encoding);\n            args.authToken = packet.readBuffer(authTokenLength);\n        } else if (isSet(\"SECURE_CONNECTION\")) {\n            authTokenLength = packet.readInt8();\n            args.authToken = packet.readBuffer(authTokenLength);\n        } else {\n            args.authToken = packet.readNullTerminatedString(encoding);\n        }\n        if (isSet(\"CONNECT_WITH_DB\")) {\n            args.database = packet.readNullTerminatedString(encoding);\n        }\n        if (isSet(\"PLUGIN_AUTH\")) {\n            args.authPluginName = packet.readNullTerminatedString(encoding);\n        }\n        if (isSet(\"CONNECT_ATTRS\")) {\n            const keysLength = packet.readLengthCodedNumber(encoding);\n            const keysEnd = packet.offset + keysLength;\n            const attrs = {};\n            while(packet.offset < keysEnd){\n                attrs[packet.readLengthCodedString(encoding)] = packet.readLengthCodedString(encoding);\n            }\n            args.connectAttributes = attrs;\n        }\n        return args;\n    }\n}\nmodule.exports = HandshakeResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/handshake_response.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/index.js":
/*!**************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/index.js ***!
  \**************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("// This file was modified by Oracle on June 1, 2021.\n// A utility method was introduced to generate an Error instance from a\n// binary server packet.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n// This file was modified by Oracle on September 21, 2021.\n// The new AuthNextFactor packet is now available.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\nconst process = __webpack_require__(/*! process */ \"process\");\nconst AuthNextFactor = __webpack_require__(/*! ./auth_next_factor */ \"(rsc)/./node_modules/mysql2/lib/packets/auth_next_factor.js\");\nconst AuthSwitchRequest = __webpack_require__(/*! ./auth_switch_request */ \"(rsc)/./node_modules/mysql2/lib/packets/auth_switch_request.js\");\nconst AuthSwitchRequestMoreData = __webpack_require__(/*! ./auth_switch_request_more_data */ \"(rsc)/./node_modules/mysql2/lib/packets/auth_switch_request_more_data.js\");\nconst AuthSwitchResponse = __webpack_require__(/*! ./auth_switch_response */ \"(rsc)/./node_modules/mysql2/lib/packets/auth_switch_response.js\");\nconst BinaryRow = __webpack_require__(/*! ./binary_row */ \"(rsc)/./node_modules/mysql2/lib/packets/binary_row.js\");\nconst BinlogDump = __webpack_require__(/*! ./binlog_dump */ \"(rsc)/./node_modules/mysql2/lib/packets/binlog_dump.js\");\nconst ChangeUser = __webpack_require__(/*! ./change_user */ \"(rsc)/./node_modules/mysql2/lib/packets/change_user.js\");\nconst CloseStatement = __webpack_require__(/*! ./close_statement */ \"(rsc)/./node_modules/mysql2/lib/packets/close_statement.js\");\nconst ColumnDefinition = __webpack_require__(/*! ./column_definition */ \"(rsc)/./node_modules/mysql2/lib/packets/column_definition.js\");\nconst Execute = __webpack_require__(/*! ./execute */ \"(rsc)/./node_modules/mysql2/lib/packets/execute.js\");\nconst Handshake = __webpack_require__(/*! ./handshake */ \"(rsc)/./node_modules/mysql2/lib/packets/handshake.js\");\nconst HandshakeResponse = __webpack_require__(/*! ./handshake_response */ \"(rsc)/./node_modules/mysql2/lib/packets/handshake_response.js\");\nconst PrepareStatement = __webpack_require__(/*! ./prepare_statement */ \"(rsc)/./node_modules/mysql2/lib/packets/prepare_statement.js\");\nconst PreparedStatementHeader = __webpack_require__(/*! ./prepared_statement_header */ \"(rsc)/./node_modules/mysql2/lib/packets/prepared_statement_header.js\");\nconst Query = __webpack_require__(/*! ./query */ \"(rsc)/./node_modules/mysql2/lib/packets/query.js\");\nconst RegisterSlave = __webpack_require__(/*! ./register_slave */ \"(rsc)/./node_modules/mysql2/lib/packets/register_slave.js\");\nconst ResultSetHeader = __webpack_require__(/*! ./resultset_header */ \"(rsc)/./node_modules/mysql2/lib/packets/resultset_header.js\");\nconst SSLRequest = __webpack_require__(/*! ./ssl_request */ \"(rsc)/./node_modules/mysql2/lib/packets/ssl_request.js\");\nconst TextRow = __webpack_require__(/*! ./text_row */ \"(rsc)/./node_modules/mysql2/lib/packets/text_row.js\");\nconst ctorMap = {\n    AuthNextFactor,\n    AuthSwitchRequest,\n    AuthSwitchRequestMoreData,\n    AuthSwitchResponse,\n    BinaryRow,\n    BinlogDump,\n    ChangeUser,\n    CloseStatement,\n    ColumnDefinition,\n    Execute,\n    Handshake,\n    HandshakeResponse,\n    PrepareStatement,\n    PreparedStatementHeader,\n    Query,\n    RegisterSlave,\n    ResultSetHeader,\n    SSLRequest,\n    TextRow\n};\nObject.entries(ctorMap).forEach(([name, ctor])=>{\n    module.exports[name] = ctor;\n    // monkey-patch it to include name if debug is on\n    if (process.env.NODE_DEBUG) {\n        if (ctor.prototype.toPacket) {\n            const old = ctor.prototype.toPacket;\n            ctor.prototype.toPacket = function() {\n                const p = old.call(this);\n                p._name = name;\n                return p;\n            };\n        }\n    }\n});\n// simple packets:\nconst Packet = __webpack_require__(/*! ./packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nexports.Packet = Packet;\nclass OK {\n    static toPacket(args, encoding) {\n        args = args || {};\n        const affectedRows = args.affectedRows || 0;\n        const insertId = args.insertId || 0;\n        const serverStatus = args.serverStatus || 0;\n        const warningCount = args.warningCount || 0;\n        const message = args.message || \"\";\n        let length = 9 + Packet.lengthCodedNumberLength(affectedRows);\n        length += Packet.lengthCodedNumberLength(insertId);\n        const buffer = Buffer.allocUnsafe(length);\n        const packet = new Packet(0, buffer, 0, length);\n        packet.offset = 4;\n        packet.writeInt8(0);\n        packet.writeLengthCodedNumber(affectedRows);\n        packet.writeLengthCodedNumber(insertId);\n        packet.writeInt16(serverStatus);\n        packet.writeInt16(warningCount);\n        packet.writeString(message, encoding);\n        packet._name = \"OK\";\n        return packet;\n    }\n}\nexports.OK = OK;\n// warnings, statusFlags\nclass EOF {\n    static toPacket(warnings, statusFlags) {\n        if (typeof warnings === \"undefined\") {\n            warnings = 0;\n        }\n        if (typeof statusFlags === \"undefined\") {\n            statusFlags = 0;\n        }\n        const packet = new Packet(0, Buffer.allocUnsafe(9), 0, 9);\n        packet.offset = 4;\n        packet.writeInt8(0xfe);\n        packet.writeInt16(warnings);\n        packet.writeInt16(statusFlags);\n        packet._name = \"EOF\";\n        return packet;\n    }\n}\nexports.EOF = EOF;\nclass Error {\n    static toPacket(args, encoding) {\n        const length = 13 + Buffer.byteLength(args.message, \"utf8\");\n        const packet = new Packet(0, Buffer.allocUnsafe(length), 0, length);\n        packet.offset = 4;\n        packet.writeInt8(0xff);\n        packet.writeInt16(args.code);\n        // TODO: sql state parameter\n        packet.writeString(\"#_____\", encoding);\n        packet.writeString(args.message, encoding);\n        packet._name = \"Error\";\n        return packet;\n    }\n    static fromPacket(packet) {\n        packet.readInt8(); // marker\n        const code = packet.readInt16();\n        packet.readString(1, \"ascii\"); // sql state marker\n        // The SQL state of the ERR_Packet which is always 5 bytes long.\n        // https://dev.mysql.com/doc/dev/mysql-server/8.0.11/page_protocol_basic_dt_strings.html#sect_protocol_basic_dt_string_fix\n        packet.readString(5, \"ascii\"); // sql state (ignore for now)\n        const message = packet.readNullTerminatedString(\"utf8\");\n        const error = new Error();\n        error.message = message;\n        error.code = code;\n        return error;\n    }\n}\nexports.Error = Error;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLG9EQUFvRDtBQUNwRCx1RUFBdUU7QUFDdkUsd0JBQXdCO0FBQ3hCLGtFQUFrRTtBQUVsRSwwREFBMEQ7QUFDMUQsa0RBQWtEO0FBQ2xELGtFQUFrRTtBQUVsRTtBQUVBLE1BQU1BLFVBQVVDLG1CQUFPQSxDQUFDO0FBRXhCLE1BQU1DLGlCQUFpQkQsbUJBQU9BLENBQUM7QUFDL0IsTUFBTUUsb0JBQW9CRixtQkFBT0EsQ0FBQztBQUNsQyxNQUFNRyw0QkFBNEJILG1CQUFPQSxDQUFDO0FBQzFDLE1BQU1JLHFCQUFxQkosbUJBQU9BLENBQUM7QUFDbkMsTUFBTUssWUFBWUwsbUJBQU9BLENBQUM7QUFDMUIsTUFBTU0sYUFBYU4sbUJBQU9BLENBQUM7QUFDM0IsTUFBTU8sYUFBYVAsbUJBQU9BLENBQUM7QUFDM0IsTUFBTVEsaUJBQWlCUixtQkFBT0EsQ0FBQztBQUMvQixNQUFNUyxtQkFBbUJULG1CQUFPQSxDQUFDO0FBQ2pDLE1BQU1VLFVBQVVWLG1CQUFPQSxDQUFDO0FBQ3hCLE1BQU1XLFlBQVlYLG1CQUFPQSxDQUFDO0FBQzFCLE1BQU1ZLG9CQUFvQlosbUJBQU9BLENBQUM7QUFDbEMsTUFBTWEsbUJBQW1CYixtQkFBT0EsQ0FBQztBQUNqQyxNQUFNYywwQkFBMEJkLG1CQUFPQSxDQUFDO0FBQ3hDLE1BQU1lLFFBQVFmLG1CQUFPQSxDQUFDO0FBQ3RCLE1BQU1nQixnQkFBZ0JoQixtQkFBT0EsQ0FBQztBQUM5QixNQUFNaUIsa0JBQWtCakIsbUJBQU9BLENBQUM7QUFDaEMsTUFBTWtCLGFBQWFsQixtQkFBT0EsQ0FBQztBQUMzQixNQUFNbUIsVUFBVW5CLG1CQUFPQSxDQUFDO0FBRXhCLE1BQU1vQixVQUFVO0lBQ2RuQjtJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztBQUNGO0FBQ0FFLE9BQU9DLE9BQU8sQ0FBQ0YsU0FBU0csT0FBTyxDQUFDLENBQUMsQ0FBQ0MsTUFBTUMsS0FBSztJQUMzQ0MsT0FBT0MsT0FBTyxDQUFDSCxLQUFLLEdBQUdDO0lBQ3ZCLGlEQUFpRDtJQUNqRCxJQUFJMUIsUUFBUTZCLEdBQUcsQ0FBQ0MsVUFBVSxFQUFFO1FBQzFCLElBQUlKLEtBQUtLLFNBQVMsQ0FBQ0MsUUFBUSxFQUFFO1lBQzNCLE1BQU1DLE1BQU1QLEtBQUtLLFNBQVMsQ0FBQ0MsUUFBUTtZQUNuQ04sS0FBS0ssU0FBUyxDQUFDQyxRQUFRLEdBQUc7Z0JBQ3hCLE1BQU1FLElBQUlELElBQUlFLElBQUksQ0FBQyxJQUFJO2dCQUN2QkQsRUFBRUUsS0FBSyxHQUFHWDtnQkFDVixPQUFPUztZQUNUO1FBQ0Y7SUFDRjtBQUNGO0FBRUEsa0JBQWtCO0FBQ2xCLE1BQU1HLFNBQVNwQyxtQkFBT0EsQ0FBQztBQUN2QjJCLGNBQWMsR0FBR1M7QUFFakIsTUFBTUM7SUFDSixPQUFPTixTQUFTTyxJQUFJLEVBQUVDLFFBQVEsRUFBRTtRQUM5QkQsT0FBT0EsUUFBUSxDQUFDO1FBQ2hCLE1BQU1FLGVBQWVGLEtBQUtFLFlBQVksSUFBSTtRQUMxQyxNQUFNQyxXQUFXSCxLQUFLRyxRQUFRLElBQUk7UUFDbEMsTUFBTUMsZUFBZUosS0FBS0ksWUFBWSxJQUFJO1FBQzFDLE1BQU1DLGVBQWVMLEtBQUtLLFlBQVksSUFBSTtRQUMxQyxNQUFNQyxVQUFVTixLQUFLTSxPQUFPLElBQUk7UUFFaEMsSUFBSUMsU0FBUyxJQUFJVCxPQUFPVSx1QkFBdUIsQ0FBQ047UUFDaERLLFVBQVVULE9BQU9VLHVCQUF1QixDQUFDTDtRQUV6QyxNQUFNTSxTQUFTQyxPQUFPQyxXQUFXLENBQUNKO1FBQ2xDLE1BQU1LLFNBQVMsSUFBSWQsT0FBTyxHQUFHVyxRQUFRLEdBQUdGO1FBQ3hDSyxPQUFPQyxNQUFNLEdBQUc7UUFDaEJELE9BQU9FLFNBQVMsQ0FBQztRQUNqQkYsT0FBT0csc0JBQXNCLENBQUNiO1FBQzlCVSxPQUFPRyxzQkFBc0IsQ0FBQ1o7UUFDOUJTLE9BQU9JLFVBQVUsQ0FBQ1o7UUFDbEJRLE9BQU9JLFVBQVUsQ0FBQ1g7UUFDbEJPLE9BQU9LLFdBQVcsQ0FBQ1gsU0FBU0w7UUFDNUJXLE9BQU9mLEtBQUssR0FBRztRQUNmLE9BQU9lO0lBQ1Q7QUFDRjtBQUVBdkIsVUFBVSxHQUFHVTtBQUViLHdCQUF3QjtBQUN4QixNQUFNbUI7SUFDSixPQUFPekIsU0FBUzBCLFFBQVEsRUFBRUMsV0FBVyxFQUFFO1FBQ3JDLElBQUksT0FBT0QsYUFBYSxhQUFhO1lBQ25DQSxXQUFXO1FBQ2I7UUFDQSxJQUFJLE9BQU9DLGdCQUFnQixhQUFhO1lBQ3RDQSxjQUFjO1FBQ2hCO1FBQ0EsTUFBTVIsU0FBUyxJQUFJZCxPQUFPLEdBQUdZLE9BQU9DLFdBQVcsQ0FBQyxJQUFJLEdBQUc7UUFDdkRDLE9BQU9DLE1BQU0sR0FBRztRQUNoQkQsT0FBT0UsU0FBUyxDQUFDO1FBQ2pCRixPQUFPSSxVQUFVLENBQUNHO1FBQ2xCUCxPQUFPSSxVQUFVLENBQUNJO1FBQ2xCUixPQUFPZixLQUFLLEdBQUc7UUFDZixPQUFPZTtJQUNUO0FBQ0Y7QUFFQXZCLFdBQVcsR0FBRzZCO0FBRWQsTUFBTUc7SUFDSixPQUFPNUIsU0FBU08sSUFBSSxFQUFFQyxRQUFRLEVBQUU7UUFDOUIsTUFBTU0sU0FBUyxLQUFLRyxPQUFPWSxVQUFVLENBQUN0QixLQUFLTSxPQUFPLEVBQUU7UUFDcEQsTUFBTU0sU0FBUyxJQUFJZCxPQUFPLEdBQUdZLE9BQU9DLFdBQVcsQ0FBQ0osU0FBUyxHQUFHQTtRQUM1REssT0FBT0MsTUFBTSxHQUFHO1FBQ2hCRCxPQUFPRSxTQUFTLENBQUM7UUFDakJGLE9BQU9JLFVBQVUsQ0FBQ2hCLEtBQUt1QixJQUFJO1FBQzNCLDRCQUE0QjtRQUM1QlgsT0FBT0ssV0FBVyxDQUFDLFVBQVVoQjtRQUM3QlcsT0FBT0ssV0FBVyxDQUFDakIsS0FBS00sT0FBTyxFQUFFTDtRQUNqQ1csT0FBT2YsS0FBSyxHQUFHO1FBQ2YsT0FBT2U7SUFDVDtJQUVBLE9BQU9ZLFdBQVdaLE1BQU0sRUFBRTtRQUN4QkEsT0FBT2EsUUFBUSxJQUFJLFNBQVM7UUFDNUIsTUFBTUYsT0FBT1gsT0FBT2MsU0FBUztRQUM3QmQsT0FBT2UsVUFBVSxDQUFDLEdBQUcsVUFBVSxtQkFBbUI7UUFDbEQsZ0VBQWdFO1FBQ2hFLDBIQUEwSDtRQUMxSGYsT0FBT2UsVUFBVSxDQUFDLEdBQUcsVUFBVSw2QkFBNkI7UUFDNUQsTUFBTXJCLFVBQVVNLE9BQU9nQix3QkFBd0IsQ0FBQztRQUNoRCxNQUFNQyxRQUFRLElBQUlSO1FBQ2xCUSxNQUFNdkIsT0FBTyxHQUFHQTtRQUNoQnVCLE1BQU1OLElBQUksR0FBR0E7UUFDYixPQUFPTTtJQUNUO0FBQ0Y7QUFFQXhDLGFBQWEsR0FBR2dDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWNlZS1wcm90by1vbmUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2luZGV4LmpzPzczNjIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBmaWxlIHdhcyBtb2RpZmllZCBieSBPcmFjbGUgb24gSnVuZSAxLCAyMDIxLlxuLy8gQSB1dGlsaXR5IG1ldGhvZCB3YXMgaW50cm9kdWNlZCB0byBnZW5lcmF0ZSBhbiBFcnJvciBpbnN0YW5jZSBmcm9tIGFcbi8vIGJpbmFyeSBzZXJ2ZXIgcGFja2V0LlxuLy8gTW9kaWZpY2F0aW9ucyBjb3B5cmlnaHQgKGMpIDIwMjEsIE9yYWNsZSBhbmQvb3IgaXRzIGFmZmlsaWF0ZXMuXG5cbi8vIFRoaXMgZmlsZSB3YXMgbW9kaWZpZWQgYnkgT3JhY2xlIG9uIFNlcHRlbWJlciAyMSwgMjAyMS5cbi8vIFRoZSBuZXcgQXV0aE5leHRGYWN0b3IgcGFja2V0IGlzIG5vdyBhdmFpbGFibGUuXG4vLyBNb2RpZmljYXRpb25zIGNvcHlyaWdodCAoYykgMjAyMSwgT3JhY2xlIGFuZC9vciBpdHMgYWZmaWxpYXRlcy5cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBwcm9jZXNzID0gcmVxdWlyZSgncHJvY2VzcycpO1xuXG5jb25zdCBBdXRoTmV4dEZhY3RvciA9IHJlcXVpcmUoJy4vYXV0aF9uZXh0X2ZhY3RvcicpO1xuY29uc3QgQXV0aFN3aXRjaFJlcXVlc3QgPSByZXF1aXJlKCcuL2F1dGhfc3dpdGNoX3JlcXVlc3QnKTtcbmNvbnN0IEF1dGhTd2l0Y2hSZXF1ZXN0TW9yZURhdGEgPSByZXF1aXJlKCcuL2F1dGhfc3dpdGNoX3JlcXVlc3RfbW9yZV9kYXRhJyk7XG5jb25zdCBBdXRoU3dpdGNoUmVzcG9uc2UgPSByZXF1aXJlKCcuL2F1dGhfc3dpdGNoX3Jlc3BvbnNlJyk7XG5jb25zdCBCaW5hcnlSb3cgPSByZXF1aXJlKCcuL2JpbmFyeV9yb3cnKTtcbmNvbnN0IEJpbmxvZ0R1bXAgPSByZXF1aXJlKCcuL2JpbmxvZ19kdW1wJyk7XG5jb25zdCBDaGFuZ2VVc2VyID0gcmVxdWlyZSgnLi9jaGFuZ2VfdXNlcicpO1xuY29uc3QgQ2xvc2VTdGF0ZW1lbnQgPSByZXF1aXJlKCcuL2Nsb3NlX3N0YXRlbWVudCcpO1xuY29uc3QgQ29sdW1uRGVmaW5pdGlvbiA9IHJlcXVpcmUoJy4vY29sdW1uX2RlZmluaXRpb24nKTtcbmNvbnN0IEV4ZWN1dGUgPSByZXF1aXJlKCcuL2V4ZWN1dGUnKTtcbmNvbnN0IEhhbmRzaGFrZSA9IHJlcXVpcmUoJy4vaGFuZHNoYWtlJyk7XG5jb25zdCBIYW5kc2hha2VSZXNwb25zZSA9IHJlcXVpcmUoJy4vaGFuZHNoYWtlX3Jlc3BvbnNlJyk7XG5jb25zdCBQcmVwYXJlU3RhdGVtZW50ID0gcmVxdWlyZSgnLi9wcmVwYXJlX3N0YXRlbWVudCcpO1xuY29uc3QgUHJlcGFyZWRTdGF0ZW1lbnRIZWFkZXIgPSByZXF1aXJlKCcuL3ByZXBhcmVkX3N0YXRlbWVudF9oZWFkZXInKTtcbmNvbnN0IFF1ZXJ5ID0gcmVxdWlyZSgnLi9xdWVyeScpO1xuY29uc3QgUmVnaXN0ZXJTbGF2ZSA9IHJlcXVpcmUoJy4vcmVnaXN0ZXJfc2xhdmUnKTtcbmNvbnN0IFJlc3VsdFNldEhlYWRlciA9IHJlcXVpcmUoJy4vcmVzdWx0c2V0X2hlYWRlcicpO1xuY29uc3QgU1NMUmVxdWVzdCA9IHJlcXVpcmUoJy4vc3NsX3JlcXVlc3QnKTtcbmNvbnN0IFRleHRSb3cgPSByZXF1aXJlKCcuL3RleHRfcm93Jyk7XG5cbmNvbnN0IGN0b3JNYXAgPSB7XG4gIEF1dGhOZXh0RmFjdG9yLFxuICBBdXRoU3dpdGNoUmVxdWVzdCxcbiAgQXV0aFN3aXRjaFJlcXVlc3RNb3JlRGF0YSxcbiAgQXV0aFN3aXRjaFJlc3BvbnNlLFxuICBCaW5hcnlSb3csXG4gIEJpbmxvZ0R1bXAsXG4gIENoYW5nZVVzZXIsXG4gIENsb3NlU3RhdGVtZW50LFxuICBDb2x1bW5EZWZpbml0aW9uLFxuICBFeGVjdXRlLFxuICBIYW5kc2hha2UsXG4gIEhhbmRzaGFrZVJlc3BvbnNlLFxuICBQcmVwYXJlU3RhdGVtZW50LFxuICBQcmVwYXJlZFN0YXRlbWVudEhlYWRlcixcbiAgUXVlcnksXG4gIFJlZ2lzdGVyU2xhdmUsXG4gIFJlc3VsdFNldEhlYWRlcixcbiAgU1NMUmVxdWVzdCxcbiAgVGV4dFJvd1xufTtcbk9iamVjdC5lbnRyaWVzKGN0b3JNYXApLmZvckVhY2goKFtuYW1lLCBjdG9yXSkgPT4ge1xuICBtb2R1bGUuZXhwb3J0c1tuYW1lXSA9IGN0b3I7XG4gIC8vIG1vbmtleS1wYXRjaCBpdCB0byBpbmNsdWRlIG5hbWUgaWYgZGVidWcgaXMgb25cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfREVCVUcpIHtcbiAgICBpZiAoY3Rvci5wcm90b3R5cGUudG9QYWNrZXQpIHtcbiAgICAgIGNvbnN0IG9sZCA9IGN0b3IucHJvdG90eXBlLnRvUGFja2V0O1xuICAgICAgY3Rvci5wcm90b3R5cGUudG9QYWNrZXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgY29uc3QgcCA9IG9sZC5jYWxsKHRoaXMpO1xuICAgICAgICBwLl9uYW1lID0gbmFtZTtcbiAgICAgICAgcmV0dXJuIHA7XG4gICAgICB9O1xuICAgIH1cbiAgfVxufSk7XG5cbi8vIHNpbXBsZSBwYWNrZXRzOlxuY29uc3QgUGFja2V0ID0gcmVxdWlyZSgnLi9wYWNrZXQnKTtcbmV4cG9ydHMuUGFja2V0ID0gUGFja2V0O1xuXG5jbGFzcyBPSyB7XG4gIHN0YXRpYyB0b1BhY2tldChhcmdzLCBlbmNvZGluZykge1xuICAgIGFyZ3MgPSBhcmdzIHx8IHt9O1xuICAgIGNvbnN0IGFmZmVjdGVkUm93cyA9IGFyZ3MuYWZmZWN0ZWRSb3dzIHx8IDA7XG4gICAgY29uc3QgaW5zZXJ0SWQgPSBhcmdzLmluc2VydElkIHx8IDA7XG4gICAgY29uc3Qgc2VydmVyU3RhdHVzID0gYXJncy5zZXJ2ZXJTdGF0dXMgfHwgMDtcbiAgICBjb25zdCB3YXJuaW5nQ291bnQgPSBhcmdzLndhcm5pbmdDb3VudCB8fCAwO1xuICAgIGNvbnN0IG1lc3NhZ2UgPSBhcmdzLm1lc3NhZ2UgfHwgJyc7XG5cbiAgICBsZXQgbGVuZ3RoID0gOSArIFBhY2tldC5sZW5ndGhDb2RlZE51bWJlckxlbmd0aChhZmZlY3RlZFJvd3MpO1xuICAgIGxlbmd0aCArPSBQYWNrZXQubGVuZ3RoQ29kZWROdW1iZXJMZW5ndGgoaW5zZXJ0SWQpO1xuXG4gICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aCk7XG4gICAgY29uc3QgcGFja2V0ID0gbmV3IFBhY2tldCgwLCBidWZmZXIsIDAsIGxlbmd0aCk7XG4gICAgcGFja2V0Lm9mZnNldCA9IDQ7XG4gICAgcGFja2V0LndyaXRlSW50OCgwKTtcbiAgICBwYWNrZXQud3JpdGVMZW5ndGhDb2RlZE51bWJlcihhZmZlY3RlZFJvd3MpO1xuICAgIHBhY2tldC53cml0ZUxlbmd0aENvZGVkTnVtYmVyKGluc2VydElkKTtcbiAgICBwYWNrZXQud3JpdGVJbnQxNihzZXJ2ZXJTdGF0dXMpO1xuICAgIHBhY2tldC53cml0ZUludDE2KHdhcm5pbmdDb3VudCk7XG4gICAgcGFja2V0LndyaXRlU3RyaW5nKG1lc3NhZ2UsIGVuY29kaW5nKTtcbiAgICBwYWNrZXQuX25hbWUgPSAnT0snO1xuICAgIHJldHVybiBwYWNrZXQ7XG4gIH1cbn1cblxuZXhwb3J0cy5PSyA9IE9LO1xuXG4vLyB3YXJuaW5ncywgc3RhdHVzRmxhZ3NcbmNsYXNzIEVPRiB7XG4gIHN0YXRpYyB0b1BhY2tldCh3YXJuaW5ncywgc3RhdHVzRmxhZ3MpIHtcbiAgICBpZiAodHlwZW9mIHdhcm5pbmdzID09PSAndW5kZWZpbmVkJykge1xuICAgICAgd2FybmluZ3MgPSAwO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHN0YXR1c0ZsYWdzID09PSAndW5kZWZpbmVkJykge1xuICAgICAgc3RhdHVzRmxhZ3MgPSAwO1xuICAgIH1cbiAgICBjb25zdCBwYWNrZXQgPSBuZXcgUGFja2V0KDAsIEJ1ZmZlci5hbGxvY1Vuc2FmZSg5KSwgMCwgOSk7XG4gICAgcGFja2V0Lm9mZnNldCA9IDQ7XG4gICAgcGFja2V0LndyaXRlSW50OCgweGZlKTtcbiAgICBwYWNrZXQud3JpdGVJbnQxNih3YXJuaW5ncyk7XG4gICAgcGFja2V0LndyaXRlSW50MTYoc3RhdHVzRmxhZ3MpO1xuICAgIHBhY2tldC5fbmFtZSA9ICdFT0YnO1xuICAgIHJldHVybiBwYWNrZXQ7XG4gIH1cbn1cblxuZXhwb3J0cy5FT0YgPSBFT0Y7XG5cbmNsYXNzIEVycm9yIHtcbiAgc3RhdGljIHRvUGFja2V0KGFyZ3MsIGVuY29kaW5nKSB7XG4gICAgY29uc3QgbGVuZ3RoID0gMTMgKyBCdWZmZXIuYnl0ZUxlbmd0aChhcmdzLm1lc3NhZ2UsICd1dGY4Jyk7XG4gICAgY29uc3QgcGFja2V0ID0gbmV3IFBhY2tldCgwLCBCdWZmZXIuYWxsb2NVbnNhZmUobGVuZ3RoKSwgMCwgbGVuZ3RoKTtcbiAgICBwYWNrZXQub2Zmc2V0ID0gNDtcbiAgICBwYWNrZXQud3JpdGVJbnQ4KDB4ZmYpO1xuICAgIHBhY2tldC53cml0ZUludDE2KGFyZ3MuY29kZSk7XG4gICAgLy8gVE9ETzogc3FsIHN0YXRlIHBhcmFtZXRlclxuICAgIHBhY2tldC53cml0ZVN0cmluZygnI19fX19fJywgZW5jb2RpbmcpO1xuICAgIHBhY2tldC53cml0ZVN0cmluZyhhcmdzLm1lc3NhZ2UsIGVuY29kaW5nKTtcbiAgICBwYWNrZXQuX25hbWUgPSAnRXJyb3InO1xuICAgIHJldHVybiBwYWNrZXQ7XG4gIH1cblxuICBzdGF0aWMgZnJvbVBhY2tldChwYWNrZXQpIHtcbiAgICBwYWNrZXQucmVhZEludDgoKTsgLy8gbWFya2VyXG4gICAgY29uc3QgY29kZSA9IHBhY2tldC5yZWFkSW50MTYoKTtcbiAgICBwYWNrZXQucmVhZFN0cmluZygxLCAnYXNjaWknKTsgLy8gc3FsIHN0YXRlIG1hcmtlclxuICAgIC8vIFRoZSBTUUwgc3RhdGUgb2YgdGhlIEVSUl9QYWNrZXQgd2hpY2ggaXMgYWx3YXlzIDUgYnl0ZXMgbG9uZy5cbiAgICAvLyBodHRwczovL2Rldi5teXNxbC5jb20vZG9jL2Rldi9teXNxbC1zZXJ2ZXIvOC4wLjExL3BhZ2VfcHJvdG9jb2xfYmFzaWNfZHRfc3RyaW5ncy5odG1sI3NlY3RfcHJvdG9jb2xfYmFzaWNfZHRfc3RyaW5nX2ZpeFxuICAgIHBhY2tldC5yZWFkU3RyaW5nKDUsICdhc2NpaScpOyAvLyBzcWwgc3RhdGUgKGlnbm9yZSBmb3Igbm93KVxuICAgIGNvbnN0IG1lc3NhZ2UgPSBwYWNrZXQucmVhZE51bGxUZXJtaW5hdGVkU3RyaW5nKCd1dGY4Jyk7XG4gICAgY29uc3QgZXJyb3IgPSBuZXcgRXJyb3IoKTtcbiAgICBlcnJvci5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICBlcnJvci5jb2RlID0gY29kZTtcbiAgICByZXR1cm4gZXJyb3I7XG4gIH1cbn1cblxuZXhwb3J0cy5FcnJvciA9IEVycm9yO1xuIl0sIm5hbWVzIjpbInByb2Nlc3MiLCJyZXF1aXJlIiwiQXV0aE5leHRGYWN0b3IiLCJBdXRoU3dpdGNoUmVxdWVzdCIsIkF1dGhTd2l0Y2hSZXF1ZXN0TW9yZURhdGEiLCJBdXRoU3dpdGNoUmVzcG9uc2UiLCJCaW5hcnlSb3ciLCJCaW5sb2dEdW1wIiwiQ2hhbmdlVXNlciIsIkNsb3NlU3RhdGVtZW50IiwiQ29sdW1uRGVmaW5pdGlvbiIsIkV4ZWN1dGUiLCJIYW5kc2hha2UiLCJIYW5kc2hha2VSZXNwb25zZSIsIlByZXBhcmVTdGF0ZW1lbnQiLCJQcmVwYXJlZFN0YXRlbWVudEhlYWRlciIsIlF1ZXJ5IiwiUmVnaXN0ZXJTbGF2ZSIsIlJlc3VsdFNldEhlYWRlciIsIlNTTFJlcXVlc3QiLCJUZXh0Um93IiwiY3Rvck1hcCIsIk9iamVjdCIsImVudHJpZXMiLCJmb3JFYWNoIiwibmFtZSIsImN0b3IiLCJtb2R1bGUiLCJleHBvcnRzIiwiZW52IiwiTk9ERV9ERUJVRyIsInByb3RvdHlwZSIsInRvUGFja2V0Iiwib2xkIiwicCIsImNhbGwiLCJfbmFtZSIsIlBhY2tldCIsIk9LIiwiYXJncyIsImVuY29kaW5nIiwiYWZmZWN0ZWRSb3dzIiwiaW5zZXJ0SWQiLCJzZXJ2ZXJTdGF0dXMiLCJ3YXJuaW5nQ291bnQiLCJtZXNzYWdlIiwibGVuZ3RoIiwibGVuZ3RoQ29kZWROdW1iZXJMZW5ndGgiLCJidWZmZXIiLCJCdWZmZXIiLCJhbGxvY1Vuc2FmZSIsInBhY2tldCIsIm9mZnNldCIsIndyaXRlSW50OCIsIndyaXRlTGVuZ3RoQ29kZWROdW1iZXIiLCJ3cml0ZUludDE2Iiwid3JpdGVTdHJpbmciLCJFT0YiLCJ3YXJuaW5ncyIsInN0YXR1c0ZsYWdzIiwiRXJyb3IiLCJieXRlTGVuZ3RoIiwiY29kZSIsImZyb21QYWNrZXQiLCJyZWFkSW50OCIsInJlYWRJbnQxNiIsInJlYWRTdHJpbmciLCJyZWFkTnVsbFRlcm1pbmF0ZWRTdHJpbmciLCJlcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/packet.js":
/*!***************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/packet.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// This file was modified by Oracle on June 1, 2021.\n// A comment describing some changes in the strict default SQL mode regarding\n// non-standard dates was introduced.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\nconst ErrorCodeToName = __webpack_require__(/*! ../constants/errors.js */ \"(rsc)/./node_modules/mysql2/lib/constants/errors.js\");\nconst NativeBuffer = (__webpack_require__(/*! buffer */ \"buffer\").Buffer);\nconst Long = __webpack_require__(/*! long */ \"(rsc)/./node_modules/long/umd/index.js\");\nconst StringParser = __webpack_require__(/*! ../parsers/string.js */ \"(rsc)/./node_modules/mysql2/lib/parsers/string.js\");\nconst INVALID_DATE = new Date(NaN);\n// this is nearly duplicate of previous function so generated code is not slower\n// due to \"if (dateStrings)\" branching\nconst pad = \"000000000000\";\nfunction leftPad(num, value) {\n    const s = value.toString();\n    // if we don't need to pad\n    if (s.length >= num) {\n        return s;\n    }\n    return (pad + s).slice(-num);\n}\n// The whole reason parse* function below exist\n// is because String creation is relatively expensive (at least with V8), and if we have\n// a buffer with \"12345\" content ideally we would like to bypass intermediate\n// \"12345\" string creation and directly build 12345 number out of\n// <Buffer 31 32 33 34 35> data.\n// In my benchmarks the difference is ~25M 8-digit numbers per second vs\n// 4.5 M using Number(packet.readLengthCodedString())\n// not used when size is close to max precision as series of *10 accumulate error\n// and approximate result mihgt be diffreent from (approximate as well) Number(bigNumStringValue))\n// In the futire node version if speed difference is smaller parse* functions might be removed\n// don't consider them as Packet public API\nconst minus = \"-\".charCodeAt(0);\nconst plus = \"+\".charCodeAt(0);\n// TODO: handle E notation\nconst dot = \".\".charCodeAt(0);\nconst exponent = \"e\".charCodeAt(0);\nconst exponentCapital = \"E\".charCodeAt(0);\nclass Packet {\n    constructor(id, buffer, start, end){\n        // hot path, enable checks when testing only\n        // if (!Buffer.isBuffer(buffer) || typeof start == 'undefined' || typeof end == 'undefined')\n        //  throw new Error('invalid packet');\n        this.sequenceId = id;\n        this.numPackets = 1;\n        this.buffer = buffer;\n        this.start = start;\n        this.offset = start + 4;\n        this.end = end;\n    }\n    // ==============================\n    // readers\n    // ==============================\n    reset() {\n        this.offset = this.start + 4;\n    }\n    length() {\n        return this.end - this.start;\n    }\n    slice() {\n        return this.buffer.slice(this.start, this.end);\n    }\n    dump() {\n        // eslint-disable-next-line no-console\n        console.log([\n            this.buffer.asciiSlice(this.start, this.end)\n        ], this.buffer.slice(this.start, this.end), this.length(), this.sequenceId);\n    }\n    haveMoreData() {\n        return this.end > this.offset;\n    }\n    skip(num) {\n        this.offset += num;\n    }\n    readInt8() {\n        return this.buffer[this.offset++];\n    }\n    readInt16() {\n        this.offset += 2;\n        return this.buffer.readUInt16LE(this.offset - 2);\n    }\n    readInt24() {\n        return this.readInt16() + (this.readInt8() << 16);\n    }\n    readInt32() {\n        this.offset += 4;\n        return this.buffer.readUInt32LE(this.offset - 4);\n    }\n    readSInt8() {\n        return this.buffer.readInt8(this.offset++);\n    }\n    readSInt16() {\n        this.offset += 2;\n        return this.buffer.readInt16LE(this.offset - 2);\n    }\n    readSInt32() {\n        this.offset += 4;\n        return this.buffer.readInt32LE(this.offset - 4);\n    }\n    readInt64JSNumber() {\n        const word0 = this.readInt32();\n        const word1 = this.readInt32();\n        const l = new Long(word0, word1, true);\n        return l.toNumber();\n    }\n    readSInt64JSNumber() {\n        const word0 = this.readInt32();\n        const word1 = this.readInt32();\n        if (!(word1 & 0x80000000)) {\n            return word0 + 0x100000000 * word1;\n        }\n        const l = new Long(word0, word1, false);\n        return l.toNumber();\n    }\n    readInt64String() {\n        const word0 = this.readInt32();\n        const word1 = this.readInt32();\n        const res = new Long(word0, word1, true);\n        return res.toString();\n    }\n    readSInt64String() {\n        const word0 = this.readInt32();\n        const word1 = this.readInt32();\n        const res = new Long(word0, word1, false);\n        return res.toString();\n    }\n    readInt64() {\n        const word0 = this.readInt32();\n        const word1 = this.readInt32();\n        let res = new Long(word0, word1, true);\n        const resNumber = res.toNumber();\n        const resString = res.toString();\n        res = resNumber.toString() === resString ? resNumber : resString;\n        return res;\n    }\n    readSInt64() {\n        const word0 = this.readInt32();\n        const word1 = this.readInt32();\n        let res = new Long(word0, word1, false);\n        const resNumber = res.toNumber();\n        const resString = res.toString();\n        res = resNumber.toString() === resString ? resNumber : resString;\n        return res;\n    }\n    isEOF() {\n        return this.buffer[this.offset] === 0xfe && this.length() < 13;\n    }\n    eofStatusFlags() {\n        return this.buffer.readInt16LE(this.offset + 3);\n    }\n    eofWarningCount() {\n        return this.buffer.readInt16LE(this.offset + 1);\n    }\n    readLengthCodedNumber(bigNumberStrings, signed) {\n        const byte1 = this.buffer[this.offset++];\n        if (byte1 < 251) {\n            return byte1;\n        }\n        return this.readLengthCodedNumberExt(byte1, bigNumberStrings, signed);\n    }\n    readLengthCodedNumberSigned(bigNumberStrings) {\n        return this.readLengthCodedNumber(bigNumberStrings, true);\n    }\n    readLengthCodedNumberExt(tag, bigNumberStrings, signed) {\n        let word0, word1;\n        let res;\n        if (tag === 0xfb) {\n            return null;\n        }\n        if (tag === 0xfc) {\n            return this.readInt8() + (this.readInt8() << 8);\n        }\n        if (tag === 0xfd) {\n            return this.readInt8() + (this.readInt8() << 8) + (this.readInt8() << 16);\n        }\n        if (tag === 0xfe) {\n            // TODO: check version\n            // Up to MySQL 3.22, 0xfe was followed by a 4-byte integer.\n            word0 = this.readInt32();\n            word1 = this.readInt32();\n            if (word1 === 0) {\n                return word0; // don't convert to float if possible\n            }\n            if (word1 < 2097152) {\n                // max exact float point int, 2^52 / 2^32\n                return word1 * 0x100000000 + word0;\n            }\n            res = new Long(word0, word1, !signed); // Long need unsigned\n            const resNumber = res.toNumber();\n            const resString = res.toString();\n            res = resNumber.toString() === resString ? resNumber : resString;\n            return bigNumberStrings ? resString : res;\n        }\n        // eslint-disable-next-line no-console\n        console.trace();\n        throw new Error(`Should not reach here: ${tag}`);\n    }\n    readFloat() {\n        const res = this.buffer.readFloatLE(this.offset);\n        this.offset += 4;\n        return res;\n    }\n    readDouble() {\n        const res = this.buffer.readDoubleLE(this.offset);\n        this.offset += 8;\n        return res;\n    }\n    readBuffer(len) {\n        if (typeof len === \"undefined\") {\n            len = this.end - this.offset;\n        }\n        this.offset += len;\n        return this.buffer.slice(this.offset - len, this.offset);\n    }\n    // DATE, DATETIME and TIMESTAMP\n    readDateTime(timezone) {\n        if (!timezone || timezone === \"Z\" || timezone === \"local\") {\n            const length = this.readInt8();\n            if (length === 0xfb) {\n                return null;\n            }\n            let y = 0;\n            let m = 0;\n            let d = 0;\n            let H = 0;\n            let M = 0;\n            let S = 0;\n            let ms = 0;\n            if (length > 3) {\n                y = this.readInt16();\n                m = this.readInt8();\n                d = this.readInt8();\n            }\n            if (length > 6) {\n                H = this.readInt8();\n                M = this.readInt8();\n                S = this.readInt8();\n            }\n            if (length > 10) {\n                ms = this.readInt32() / 1000;\n            }\n            // NO_ZERO_DATE mode and NO_ZERO_IN_DATE mode are part of the strict\n            // default SQL mode used by MySQL 8.0. This means that non-standard\n            // dates like '0000-00-00' become NULL. For older versions and other\n            // possible MySQL flavours we still need to account for the\n            // non-standard behaviour.\n            if (y + m + d + H + M + S + ms === 0) {\n                return INVALID_DATE;\n            }\n            if (timezone === \"Z\") {\n                return new Date(Date.UTC(y, m - 1, d, H, M, S, ms));\n            }\n            return new Date(y, m - 1, d, H, M, S, ms);\n        }\n        let str = this.readDateTimeString(6, \"T\");\n        if (str.length === 10) {\n            str += \"T00:00:00\";\n        }\n        return new Date(str + timezone);\n    }\n    readDateTimeString(decimals, timeSep) {\n        const length = this.readInt8();\n        let y = 0;\n        let m = 0;\n        let d = 0;\n        let H = 0;\n        let M = 0;\n        let S = 0;\n        let ms = 0;\n        let str;\n        if (length > 3) {\n            y = this.readInt16();\n            m = this.readInt8();\n            d = this.readInt8();\n            str = [\n                leftPad(4, y),\n                leftPad(2, m),\n                leftPad(2, d)\n            ].join(\"-\");\n        }\n        if (length > 6) {\n            H = this.readInt8();\n            M = this.readInt8();\n            S = this.readInt8();\n            str += `${timeSep || \" \"}${[\n                leftPad(2, H),\n                leftPad(2, M),\n                leftPad(2, S)\n            ].join(\":\")}`;\n        }\n        if (length > 10) {\n            ms = this.readInt32();\n            str += \".\";\n            if (decimals) {\n                ms = leftPad(6, ms);\n                if (ms.length > decimals) {\n                    ms = ms.substring(0, decimals); // rounding is done at the MySQL side, only 0 are here\n                }\n            }\n            str += ms;\n        }\n        return str;\n    }\n    // TIME - value as a string, Can be negative\n    readTimeString(convertTtoMs) {\n        const length = this.readInt8();\n        if (length === 0) {\n            return \"00:00:00\";\n        }\n        const sign = this.readInt8() ? -1 : 1; // 'isNegative' flag byte\n        let d = 0;\n        let H = 0;\n        let M = 0;\n        let S = 0;\n        let ms = 0;\n        if (length > 6) {\n            d = this.readInt32();\n            H = this.readInt8();\n            M = this.readInt8();\n            S = this.readInt8();\n        }\n        if (length > 10) {\n            ms = this.readInt32();\n        }\n        if (convertTtoMs) {\n            H += d * 24;\n            M += H * 60;\n            S += M * 60;\n            ms += S * 1000;\n            ms *= sign;\n            return ms;\n        }\n        // Format follows mySQL TIME format ([-][h]hh:mm:ss[.u[u[u[u[u[u]]]]]])\n        // For positive times below 24 hours, this makes it equal to ISO 8601 times\n        return (sign === -1 ? \"-\" : \"\") + [\n            leftPad(2, d * 24 + H),\n            leftPad(2, M),\n            leftPad(2, S)\n        ].join(\":\") + (ms ? `.${ms}`.replace(/0+$/, \"\") : \"\");\n    }\n    readLengthCodedString(encoding) {\n        const len = this.readLengthCodedNumber();\n        // TODO: check manually first byte here to avoid polymorphic return type?\n        if (len === null) {\n            return null;\n        }\n        this.offset += len;\n        // TODO: Use characterSetCode to get proper encoding\n        // https://github.com/sidorares/node-mysql2/pull/374\n        return StringParser.decode(this.buffer, encoding, this.offset - len, this.offset);\n    }\n    readLengthCodedBuffer() {\n        const len = this.readLengthCodedNumber();\n        if (len === null) {\n            return null;\n        }\n        return this.readBuffer(len);\n    }\n    readNullTerminatedString(encoding) {\n        const start = this.offset;\n        let end = this.offset;\n        while(this.buffer[end]){\n            end = end + 1; // TODO: handle OOB check\n        }\n        this.offset = end + 1;\n        return StringParser.decode(this.buffer, encoding, start, end);\n    }\n    // TODO reuse?\n    readString(len, encoding) {\n        if (typeof len === \"string\" && typeof encoding === \"undefined\") {\n            encoding = len;\n            len = undefined;\n        }\n        if (typeof len === \"undefined\") {\n            len = this.end - this.offset;\n        }\n        this.offset += len;\n        return StringParser.decode(this.buffer, encoding, this.offset - len, this.offset);\n    }\n    parseInt(len, supportBigNumbers) {\n        if (len === null) {\n            return null;\n        }\n        if (len >= 14 && !supportBigNumbers) {\n            const s = this.buffer.toString(\"ascii\", this.offset, this.offset + len);\n            this.offset += len;\n            return Number(s);\n        }\n        let result = 0;\n        const start = this.offset;\n        const end = this.offset + len;\n        let sign = 1;\n        if (len === 0) {\n            return 0; // TODO: assert? exception?\n        }\n        if (this.buffer[this.offset] === minus) {\n            this.offset++;\n            sign = -1;\n        }\n        // max precise int is 9007199254740992\n        let str;\n        const numDigits = end - this.offset;\n        if (supportBigNumbers) {\n            if (numDigits >= 15) {\n                str = this.readString(end - this.offset, \"binary\");\n                result = parseInt(str, 10);\n                if (result.toString() === str) {\n                    return sign * result;\n                }\n                return sign === -1 ? `-${str}` : str;\n            }\n            if (numDigits > 16) {\n                str = this.readString(end - this.offset);\n                return sign === -1 ? `-${str}` : str;\n            }\n        }\n        if (this.buffer[this.offset] === plus) {\n            this.offset++; // just ignore\n        }\n        while(this.offset < end){\n            result *= 10;\n            result += this.buffer[this.offset] - 48;\n            this.offset++;\n        }\n        const num = result * sign;\n        if (!supportBigNumbers) {\n            return num;\n        }\n        str = this.buffer.toString(\"ascii\", start, end);\n        if (num.toString() === str) {\n            return num;\n        }\n        return str;\n    }\n    // note that if value of inputNumberAsString is bigger than MAX_SAFE_INTEGER\n    // ( or smaller than MIN_SAFE_INTEGER ) the parseIntNoBigCheck result might be\n    // different from what you would get from Number(inputNumberAsString)\n    // String(parseIntNoBigCheck) <> String(Number(inputNumberAsString)) <> inputNumberAsString\n    parseIntNoBigCheck(len) {\n        if (len === null) {\n            return null;\n        }\n        let result = 0;\n        const end = this.offset + len;\n        let sign = 1;\n        if (len === 0) {\n            return 0; // TODO: assert? exception?\n        }\n        if (this.buffer[this.offset] === minus) {\n            this.offset++;\n            sign = -1;\n        }\n        if (this.buffer[this.offset] === plus) {\n            this.offset++; // just ignore\n        }\n        while(this.offset < end){\n            result *= 10;\n            result += this.buffer[this.offset] - 48;\n            this.offset++;\n        }\n        return result * sign;\n    }\n    // copy-paste from https://github.com/mysqljs/mysql/blob/master/lib/protocol/Parser.js\n    parseGeometryValue() {\n        const buffer = this.readLengthCodedBuffer();\n        let offset = 4;\n        if (buffer === null || !buffer.length) {\n            return null;\n        }\n        function parseGeometry() {\n            let x, y, i, j, numPoints, line;\n            let result = null;\n            const byteOrder = buffer.readUInt8(offset);\n            offset += 1;\n            const wkbType = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset);\n            offset += 4;\n            switch(wkbType){\n                case 1:\n                    x = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset);\n                    offset += 8;\n                    y = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset);\n                    offset += 8;\n                    result = {\n                        x: x,\n                        y: y\n                    };\n                    break;\n                case 2:\n                    numPoints = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset);\n                    offset += 4;\n                    result = [];\n                    for(i = numPoints; i > 0; i--){\n                        x = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset);\n                        offset += 8;\n                        y = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset);\n                        offset += 8;\n                        result.push({\n                            x: x,\n                            y: y\n                        });\n                    }\n                    break;\n                case 3:\n                    // eslint-disable-next-line no-case-declarations\n                    const numRings = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset);\n                    offset += 4;\n                    result = [];\n                    for(i = numRings; i > 0; i--){\n                        numPoints = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset);\n                        offset += 4;\n                        line = [];\n                        for(j = numPoints; j > 0; j--){\n                            x = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset);\n                            offset += 8;\n                            y = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset);\n                            offset += 8;\n                            line.push({\n                                x: x,\n                                y: y\n                            });\n                        }\n                        result.push(line);\n                    }\n                    break;\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                    // eslint-disable-next-line no-case-declarations\n                    const num = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset);\n                    offset += 4;\n                    result = [];\n                    for(i = num; i > 0; i--){\n                        result.push(parseGeometry());\n                    }\n                    break;\n            }\n            return result;\n        }\n        return parseGeometry();\n    }\n    parseDate(timezone) {\n        const strLen = this.readLengthCodedNumber();\n        if (strLen === null) {\n            return null;\n        }\n        if (strLen !== 10) {\n            // we expect only YYYY-MM-DD here.\n            // if for some reason it's not the case return invalid date\n            return new Date(NaN);\n        }\n        const y = this.parseInt(4);\n        this.offset++; // -\n        const m = this.parseInt(2);\n        this.offset++; // -\n        const d = this.parseInt(2);\n        if (!timezone || timezone === \"local\") {\n            return new Date(y, m - 1, d);\n        }\n        if (timezone === \"Z\") {\n            return new Date(Date.UTC(y, m - 1, d));\n        }\n        return new Date(`${leftPad(4, y)}-${leftPad(2, m)}-${leftPad(2, d)}T00:00:00${timezone}`);\n    }\n    parseDateTime(timezone) {\n        const str = this.readLengthCodedString(\"binary\");\n        if (str === null) {\n            return null;\n        }\n        if (!timezone || timezone === \"local\") {\n            return new Date(str);\n        }\n        return new Date(`${str}${timezone}`);\n    }\n    parseFloat(len) {\n        if (len === null) {\n            return null;\n        }\n        let result = 0;\n        const end = this.offset + len;\n        let factor = 1;\n        let pastDot = false;\n        let charCode = 0;\n        if (len === 0) {\n            return 0; // TODO: assert? exception?\n        }\n        if (this.buffer[this.offset] === minus) {\n            this.offset++;\n            factor = -1;\n        }\n        if (this.buffer[this.offset] === plus) {\n            this.offset++; // just ignore\n        }\n        while(this.offset < end){\n            charCode = this.buffer[this.offset];\n            if (charCode === dot) {\n                pastDot = true;\n                this.offset++;\n            } else if (charCode === exponent || charCode === exponentCapital) {\n                this.offset++;\n                const exponentValue = this.parseInt(end - this.offset);\n                return result / factor * Math.pow(10, exponentValue);\n            } else {\n                result *= 10;\n                result += this.buffer[this.offset] - 48;\n                this.offset++;\n                if (pastDot) {\n                    factor = factor * 10;\n                }\n            }\n        }\n        return result / factor;\n    }\n    parseLengthCodedIntNoBigCheck() {\n        return this.parseIntNoBigCheck(this.readLengthCodedNumber());\n    }\n    parseLengthCodedInt(supportBigNumbers) {\n        return this.parseInt(this.readLengthCodedNumber(), supportBigNumbers);\n    }\n    parseLengthCodedIntString() {\n        return this.readLengthCodedString(\"binary\");\n    }\n    parseLengthCodedFloat() {\n        return this.parseFloat(this.readLengthCodedNumber());\n    }\n    peekByte() {\n        return this.buffer[this.offset];\n    }\n    // OxFE is often used as \"Alt\" flag - not ok, not error.\n    // For example, it's first byte of AuthSwitchRequest\n    isAlt() {\n        return this.peekByte() === 0xfe;\n    }\n    isError() {\n        return this.peekByte() === 0xff;\n    }\n    asError(encoding) {\n        this.reset();\n        this.readInt8(); // fieldCount\n        const errorCode = this.readInt16();\n        let sqlState = \"\";\n        if (this.buffer[this.offset] === 0x23) {\n            this.skip(1);\n            sqlState = this.readBuffer(5).toString();\n        }\n        const message = this.readString(undefined, encoding);\n        const err = new Error(message);\n        err.code = ErrorCodeToName[errorCode];\n        err.errno = errorCode;\n        err.sqlState = sqlState;\n        err.sqlMessage = message;\n        return err;\n    }\n    writeInt32(n) {\n        this.buffer.writeUInt32LE(n, this.offset);\n        this.offset += 4;\n    }\n    writeInt24(n) {\n        this.writeInt8(n & 0xff);\n        this.writeInt16(n >> 8);\n    }\n    writeInt16(n) {\n        this.buffer.writeUInt16LE(n, this.offset);\n        this.offset += 2;\n    }\n    writeInt8(n) {\n        this.buffer.writeUInt8(n, this.offset);\n        this.offset++;\n    }\n    writeDouble(n) {\n        this.buffer.writeDoubleLE(n, this.offset);\n        this.offset += 8;\n    }\n    writeBuffer(b) {\n        b.copy(this.buffer, this.offset);\n        this.offset += b.length;\n    }\n    writeNull() {\n        this.buffer[this.offset] = 0xfb;\n        this.offset++;\n    }\n    // TODO: refactor following three?\n    writeNullTerminatedString(s, encoding) {\n        const buf = StringParser.encode(s, encoding);\n        this.buffer.length && buf.copy(this.buffer, this.offset);\n        this.offset += buf.length;\n        this.writeInt8(0);\n    }\n    writeString(s, encoding) {\n        if (s === null) {\n            this.writeInt8(0xfb);\n            return;\n        }\n        if (s.length === 0) {\n            return;\n        }\n        // const bytes = Buffer.byteLength(s, 'utf8');\n        // this.buffer.write(s, this.offset, bytes, 'utf8');\n        // this.offset += bytes;\n        const buf = StringParser.encode(s, encoding);\n        this.buffer.length && buf.copy(this.buffer, this.offset);\n        this.offset += buf.length;\n    }\n    writeLengthCodedString(s, encoding) {\n        const buf = StringParser.encode(s, encoding);\n        this.writeLengthCodedNumber(buf.length);\n        this.buffer.length && buf.copy(this.buffer, this.offset);\n        this.offset += buf.length;\n    }\n    writeLengthCodedBuffer(b) {\n        this.writeLengthCodedNumber(b.length);\n        b.copy(this.buffer, this.offset);\n        this.offset += b.length;\n    }\n    writeLengthCodedNumber(n) {\n        if (n < 0xfb) {\n            return this.writeInt8(n);\n        }\n        if (n < 0xffff) {\n            this.writeInt8(0xfc);\n            return this.writeInt16(n);\n        }\n        if (n < 0xffffff) {\n            this.writeInt8(0xfd);\n            return this.writeInt24(n);\n        }\n        if (n === null) {\n            return this.writeInt8(0xfb);\n        }\n        // TODO: check that n is out of int precision\n        this.writeInt8(0xfe);\n        this.buffer.writeUInt32LE(n, this.offset);\n        this.offset += 4;\n        this.buffer.writeUInt32LE(n >> 32, this.offset);\n        this.offset += 4;\n        return this.offset;\n    }\n    writeDate(d, timezone) {\n        this.buffer.writeUInt8(11, this.offset);\n        if (!timezone || timezone === \"local\") {\n            this.buffer.writeUInt16LE(d.getFullYear(), this.offset + 1);\n            this.buffer.writeUInt8(d.getMonth() + 1, this.offset + 3);\n            this.buffer.writeUInt8(d.getDate(), this.offset + 4);\n            this.buffer.writeUInt8(d.getHours(), this.offset + 5);\n            this.buffer.writeUInt8(d.getMinutes(), this.offset + 6);\n            this.buffer.writeUInt8(d.getSeconds(), this.offset + 7);\n            this.buffer.writeUInt32LE(d.getMilliseconds() * 1000, this.offset + 8);\n        } else {\n            if (timezone !== \"Z\") {\n                const offset = (timezone[0] === \"-\" ? -1 : 1) * (parseInt(timezone.substring(1, 3), 10) * 60 + parseInt(timezone.substring(4), 10));\n                if (offset !== 0) {\n                    d = new Date(d.getTime() + 60000 * offset);\n                }\n            }\n            this.buffer.writeUInt16LE(d.getUTCFullYear(), this.offset + 1);\n            this.buffer.writeUInt8(d.getUTCMonth() + 1, this.offset + 3);\n            this.buffer.writeUInt8(d.getUTCDate(), this.offset + 4);\n            this.buffer.writeUInt8(d.getUTCHours(), this.offset + 5);\n            this.buffer.writeUInt8(d.getUTCMinutes(), this.offset + 6);\n            this.buffer.writeUInt8(d.getUTCSeconds(), this.offset + 7);\n            this.buffer.writeUInt32LE(d.getUTCMilliseconds() * 1000, this.offset + 8);\n        }\n        this.offset += 12;\n    }\n    writeHeader(sequenceId) {\n        const offset = this.offset;\n        this.offset = 0;\n        this.writeInt24(this.buffer.length - 4);\n        this.writeInt8(sequenceId);\n        this.offset = offset;\n    }\n    clone() {\n        return new Packet(this.sequenceId, this.buffer, this.start, this.end);\n    }\n    type() {\n        if (this.isEOF()) {\n            return \"EOF\";\n        }\n        if (this.isError()) {\n            return \"Error\";\n        }\n        if (this.buffer[this.offset] === 0) {\n            return \"maybeOK\"; // could be other packet types as well\n        }\n        return \"\";\n    }\n    static lengthCodedNumberLength(n) {\n        if (n < 0xfb) {\n            return 1;\n        }\n        if (n < 0xffff) {\n            return 3;\n        }\n        if (n < 0xffffff) {\n            return 5;\n        }\n        return 9;\n    }\n    static lengthCodedStringLength(str, encoding) {\n        const buf = StringParser.encode(str, encoding);\n        const slen = buf.length;\n        return Packet.lengthCodedNumberLength(slen) + slen;\n    }\n    static MockBuffer() {\n        const noop = function() {};\n        const res = Buffer.alloc(0);\n        for(const op in NativeBuffer.prototype){\n            if (typeof res[op] === \"function\") {\n                res[op] = noop;\n            }\n        }\n        return res;\n    }\n}\nmodule.exports = Packet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/packet.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/prepare_statement.js":
/*!**************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/prepare_statement.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst CommandCodes = __webpack_require__(/*! ../constants/commands */ \"(rsc)/./node_modules/mysql2/lib/constants/commands.js\");\nconst StringParser = __webpack_require__(/*! ../parsers/string.js */ \"(rsc)/./node_modules/mysql2/lib/parsers/string.js\");\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\nclass PrepareStatement {\n    constructor(sql, charsetNumber){\n        this.query = sql;\n        this.charsetNumber = charsetNumber;\n        this.encoding = CharsetToEncoding[charsetNumber];\n    }\n    toPacket() {\n        const buf = StringParser.encode(this.query, this.encoding);\n        const length = 5 + buf.length;\n        const buffer = Buffer.allocUnsafe(length);\n        const packet = new Packet(0, buffer, 0, length);\n        packet.offset = 4;\n        packet.writeInt8(CommandCodes.STMT_PREPARE);\n        packet.writeBuffer(buf);\n        return packet;\n    }\n}\nmodule.exports = PrepareStatement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3ByZXBhcmVfc3RhdGVtZW50LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsU0FBU0MsbUJBQU9BLENBQUM7QUFDdkIsTUFBTUMsZUFBZUQsbUJBQU9BLENBQUM7QUFDN0IsTUFBTUUsZUFBZUYsbUJBQU9BLENBQUM7QUFDN0IsTUFBTUcsb0JBQW9CSCxtQkFBT0EsQ0FBQztBQUVsQyxNQUFNSTtJQUNKQyxZQUFZQyxHQUFHLEVBQUVDLGFBQWEsQ0FBRTtRQUM5QixJQUFJLENBQUNDLEtBQUssR0FBR0Y7UUFDYixJQUFJLENBQUNDLGFBQWEsR0FBR0E7UUFDckIsSUFBSSxDQUFDRSxRQUFRLEdBQUdOLGlCQUFpQixDQUFDSSxjQUFjO0lBQ2xEO0lBRUFHLFdBQVc7UUFDVCxNQUFNQyxNQUFNVCxhQUFhVSxNQUFNLENBQUMsSUFBSSxDQUFDSixLQUFLLEVBQUUsSUFBSSxDQUFDQyxRQUFRO1FBQ3pELE1BQU1JLFNBQVMsSUFBSUYsSUFBSUUsTUFBTTtRQUM3QixNQUFNQyxTQUFTQyxPQUFPQyxXQUFXLENBQUNIO1FBQ2xDLE1BQU1JLFNBQVMsSUFBSWxCLE9BQU8sR0FBR2UsUUFBUSxHQUFHRDtRQUN4Q0ksT0FBT0MsTUFBTSxHQUFHO1FBQ2hCRCxPQUFPRSxTQUFTLENBQUNsQixhQUFhbUIsWUFBWTtRQUMxQ0gsT0FBT0ksV0FBVyxDQUFDVjtRQUNuQixPQUFPTTtJQUNUO0FBQ0Y7QUFFQUssT0FBT0MsT0FBTyxHQUFHbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hY2VlLXByb3RvLW9uZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL3BhY2tldHMvcHJlcGFyZV9zdGF0ZW1lbnQuanM/MzJlOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IFBhY2tldCA9IHJlcXVpcmUoJy4uL3BhY2tldHMvcGFja2V0Jyk7XG5jb25zdCBDb21tYW5kQ29kZXMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvY29tbWFuZHMnKTtcbmNvbnN0IFN0cmluZ1BhcnNlciA9IHJlcXVpcmUoJy4uL3BhcnNlcnMvc3RyaW5nLmpzJyk7XG5jb25zdCBDaGFyc2V0VG9FbmNvZGluZyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9jaGFyc2V0X2VuY29kaW5ncy5qcycpO1xuXG5jbGFzcyBQcmVwYXJlU3RhdGVtZW50IHtcbiAgY29uc3RydWN0b3Ioc3FsLCBjaGFyc2V0TnVtYmVyKSB7XG4gICAgdGhpcy5xdWVyeSA9IHNxbDtcbiAgICB0aGlzLmNoYXJzZXROdW1iZXIgPSBjaGFyc2V0TnVtYmVyO1xuICAgIHRoaXMuZW5jb2RpbmcgPSBDaGFyc2V0VG9FbmNvZGluZ1tjaGFyc2V0TnVtYmVyXTtcbiAgfVxuXG4gIHRvUGFja2V0KCkge1xuICAgIGNvbnN0IGJ1ZiA9IFN0cmluZ1BhcnNlci5lbmNvZGUodGhpcy5xdWVyeSwgdGhpcy5lbmNvZGluZyk7XG4gICAgY29uc3QgbGVuZ3RoID0gNSArIGJ1Zi5sZW5ndGg7XG4gICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aCk7XG4gICAgY29uc3QgcGFja2V0ID0gbmV3IFBhY2tldCgwLCBidWZmZXIsIDAsIGxlbmd0aCk7XG4gICAgcGFja2V0Lm9mZnNldCA9IDQ7XG4gICAgcGFja2V0LndyaXRlSW50OChDb21tYW5kQ29kZXMuU1RNVF9QUkVQQVJFKTtcbiAgICBwYWNrZXQud3JpdGVCdWZmZXIoYnVmKTtcbiAgICByZXR1cm4gcGFja2V0O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gUHJlcGFyZVN0YXRlbWVudDtcbiJdLCJuYW1lcyI6WyJQYWNrZXQiLCJyZXF1aXJlIiwiQ29tbWFuZENvZGVzIiwiU3RyaW5nUGFyc2VyIiwiQ2hhcnNldFRvRW5jb2RpbmciLCJQcmVwYXJlU3RhdGVtZW50IiwiY29uc3RydWN0b3IiLCJzcWwiLCJjaGFyc2V0TnVtYmVyIiwicXVlcnkiLCJlbmNvZGluZyIsInRvUGFja2V0IiwiYnVmIiwiZW5jb2RlIiwibGVuZ3RoIiwiYnVmZmVyIiwiQnVmZmVyIiwiYWxsb2NVbnNhZmUiLCJwYWNrZXQiLCJvZmZzZXQiLCJ3cml0ZUludDgiLCJTVE1UX1BSRVBBUkUiLCJ3cml0ZUJ1ZmZlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/prepare_statement.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/prepared_statement_header.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/prepared_statement_header.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\nclass PreparedStatementHeader {\n    constructor(packet){\n        packet.skip(1); // should be 0\n        this.id = packet.readInt32();\n        this.fieldCount = packet.readInt16();\n        this.parameterCount = packet.readInt16();\n        packet.skip(1); // should be 0\n        this.warningCount = packet.readInt16();\n    }\n}\n// TODO: toPacket\nmodule.exports = PreparedStatementHeader;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3ByZXBhcmVkX3N0YXRlbWVudF9oZWFkZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQTtJQUNKQyxZQUFZQyxNQUFNLENBQUU7UUFDbEJBLE9BQU9DLElBQUksQ0FBQyxJQUFJLGNBQWM7UUFDOUIsSUFBSSxDQUFDQyxFQUFFLEdBQUdGLE9BQU9HLFNBQVM7UUFDMUIsSUFBSSxDQUFDQyxVQUFVLEdBQUdKLE9BQU9LLFNBQVM7UUFDbEMsSUFBSSxDQUFDQyxjQUFjLEdBQUdOLE9BQU9LLFNBQVM7UUFDdENMLE9BQU9DLElBQUksQ0FBQyxJQUFJLGNBQWM7UUFDOUIsSUFBSSxDQUFDTSxZQUFZLEdBQUdQLE9BQU9LLFNBQVM7SUFDdEM7QUFDRjtBQUVBLGlCQUFpQjtBQUVqQkcsT0FBT0MsT0FBTyxHQUFHWCIsInNvdXJjZXMiOlsid2VicGFjazovL2FjZWUtcHJvdG8tb25lLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9wcmVwYXJlZF9zdGF0ZW1lbnRfaGVhZGVyLmpzPzZkMTgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jbGFzcyBQcmVwYXJlZFN0YXRlbWVudEhlYWRlciB7XG4gIGNvbnN0cnVjdG9yKHBhY2tldCkge1xuICAgIHBhY2tldC5za2lwKDEpOyAvLyBzaG91bGQgYmUgMFxuICAgIHRoaXMuaWQgPSBwYWNrZXQucmVhZEludDMyKCk7XG4gICAgdGhpcy5maWVsZENvdW50ID0gcGFja2V0LnJlYWRJbnQxNigpO1xuICAgIHRoaXMucGFyYW1ldGVyQ291bnQgPSBwYWNrZXQucmVhZEludDE2KCk7XG4gICAgcGFja2V0LnNraXAoMSk7IC8vIHNob3VsZCBiZSAwXG4gICAgdGhpcy53YXJuaW5nQ291bnQgPSBwYWNrZXQucmVhZEludDE2KCk7XG4gIH1cbn1cblxuLy8gVE9ETzogdG9QYWNrZXRcblxubW9kdWxlLmV4cG9ydHMgPSBQcmVwYXJlZFN0YXRlbWVudEhlYWRlcjtcbiJdLCJuYW1lcyI6WyJQcmVwYXJlZFN0YXRlbWVudEhlYWRlciIsImNvbnN0cnVjdG9yIiwicGFja2V0Iiwic2tpcCIsImlkIiwicmVhZEludDMyIiwiZmllbGRDb3VudCIsInJlYWRJbnQxNiIsInBhcmFtZXRlckNvdW50Iiwid2FybmluZ0NvdW50IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/prepared_statement_header.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/query.js":
/*!**************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/query.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Packet = __webpack_require__(/*! ../packets/packet.js */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst CommandCode = __webpack_require__(/*! ../constants/commands.js */ \"(rsc)/./node_modules/mysql2/lib/constants/commands.js\");\nconst StringParser = __webpack_require__(/*! ../parsers/string.js */ \"(rsc)/./node_modules/mysql2/lib/parsers/string.js\");\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\nclass Query {\n    constructor(sql, charsetNumber){\n        this.query = sql;\n        this.charsetNumber = charsetNumber;\n        this.encoding = CharsetToEncoding[charsetNumber];\n    }\n    toPacket() {\n        const buf = StringParser.encode(this.query, this.encoding);\n        const length = 5 + buf.length;\n        const buffer = Buffer.allocUnsafe(length);\n        const packet = new Packet(0, buffer, 0, length);\n        packet.offset = 4;\n        packet.writeInt8(CommandCode.QUERY);\n        packet.writeBuffer(buf);\n        return packet;\n    }\n}\nmodule.exports = Query;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3F1ZXJ5LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsU0FBU0MsbUJBQU9BLENBQUM7QUFDdkIsTUFBTUMsY0FBY0QsbUJBQU9BLENBQUM7QUFDNUIsTUFBTUUsZUFBZUYsbUJBQU9BLENBQUM7QUFDN0IsTUFBTUcsb0JBQW9CSCxtQkFBT0EsQ0FBQztBQUVsQyxNQUFNSTtJQUNKQyxZQUFZQyxHQUFHLEVBQUVDLGFBQWEsQ0FBRTtRQUM5QixJQUFJLENBQUNDLEtBQUssR0FBR0Y7UUFDYixJQUFJLENBQUNDLGFBQWEsR0FBR0E7UUFDckIsSUFBSSxDQUFDRSxRQUFRLEdBQUdOLGlCQUFpQixDQUFDSSxjQUFjO0lBQ2xEO0lBRUFHLFdBQVc7UUFDVCxNQUFNQyxNQUFNVCxhQUFhVSxNQUFNLENBQUMsSUFBSSxDQUFDSixLQUFLLEVBQUUsSUFBSSxDQUFDQyxRQUFRO1FBQ3pELE1BQU1JLFNBQVMsSUFBSUYsSUFBSUUsTUFBTTtRQUM3QixNQUFNQyxTQUFTQyxPQUFPQyxXQUFXLENBQUNIO1FBQ2xDLE1BQU1JLFNBQVMsSUFBSWxCLE9BQU8sR0FBR2UsUUFBUSxHQUFHRDtRQUN4Q0ksT0FBT0MsTUFBTSxHQUFHO1FBQ2hCRCxPQUFPRSxTQUFTLENBQUNsQixZQUFZbUIsS0FBSztRQUNsQ0gsT0FBT0ksV0FBVyxDQUFDVjtRQUNuQixPQUFPTTtJQUNUO0FBQ0Y7QUFFQUssT0FBT0MsT0FBTyxHQUFHbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hY2VlLXByb3RvLW9uZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL3BhY2tldHMvcXVlcnkuanM/NTM4OCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IFBhY2tldCA9IHJlcXVpcmUoJy4uL3BhY2tldHMvcGFja2V0LmpzJyk7XG5jb25zdCBDb21tYW5kQ29kZSA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9jb21tYW5kcy5qcycpO1xuY29uc3QgU3RyaW5nUGFyc2VyID0gcmVxdWlyZSgnLi4vcGFyc2Vycy9zdHJpbmcuanMnKTtcbmNvbnN0IENoYXJzZXRUb0VuY29kaW5nID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL2NoYXJzZXRfZW5jb2RpbmdzLmpzJyk7XG5cbmNsYXNzIFF1ZXJ5IHtcbiAgY29uc3RydWN0b3Ioc3FsLCBjaGFyc2V0TnVtYmVyKSB7XG4gICAgdGhpcy5xdWVyeSA9IHNxbDtcbiAgICB0aGlzLmNoYXJzZXROdW1iZXIgPSBjaGFyc2V0TnVtYmVyO1xuICAgIHRoaXMuZW5jb2RpbmcgPSBDaGFyc2V0VG9FbmNvZGluZ1tjaGFyc2V0TnVtYmVyXTtcbiAgfVxuXG4gIHRvUGFja2V0KCkge1xuICAgIGNvbnN0IGJ1ZiA9IFN0cmluZ1BhcnNlci5lbmNvZGUodGhpcy5xdWVyeSwgdGhpcy5lbmNvZGluZyk7XG4gICAgY29uc3QgbGVuZ3RoID0gNSArIGJ1Zi5sZW5ndGg7XG4gICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aCk7XG4gICAgY29uc3QgcGFja2V0ID0gbmV3IFBhY2tldCgwLCBidWZmZXIsIDAsIGxlbmd0aCk7XG4gICAgcGFja2V0Lm9mZnNldCA9IDQ7XG4gICAgcGFja2V0LndyaXRlSW50OChDb21tYW5kQ29kZS5RVUVSWSk7XG4gICAgcGFja2V0LndyaXRlQnVmZmVyKGJ1Zik7XG4gICAgcmV0dXJuIHBhY2tldDtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFF1ZXJ5O1xuIl0sIm5hbWVzIjpbIlBhY2tldCIsInJlcXVpcmUiLCJDb21tYW5kQ29kZSIsIlN0cmluZ1BhcnNlciIsIkNoYXJzZXRUb0VuY29kaW5nIiwiUXVlcnkiLCJjb25zdHJ1Y3RvciIsInNxbCIsImNoYXJzZXROdW1iZXIiLCJxdWVyeSIsImVuY29kaW5nIiwidG9QYWNrZXQiLCJidWYiLCJlbmNvZGUiLCJsZW5ndGgiLCJidWZmZXIiLCJCdWZmZXIiLCJhbGxvY1Vuc2FmZSIsInBhY2tldCIsIm9mZnNldCIsIndyaXRlSW50OCIsIlFVRVJZIiwid3JpdGVCdWZmZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/query.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/register_slave.js":
/*!***********************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/register_slave.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// http://dev.mysql.com/doc/internals/en/com-register-slave.html\n// note that documentation is incorrect, for example command code is actually 0x15 but documented as 0x14\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst CommandCodes = __webpack_require__(/*! ../constants/commands */ \"(rsc)/./node_modules/mysql2/lib/constants/commands.js\");\nclass RegisterSlave {\n    constructor(opts){\n        this.serverId = opts.serverId || 0;\n        this.slaveHostname = opts.slaveHostname || \"\";\n        this.slaveUser = opts.slaveUser || \"\";\n        this.slavePassword = opts.slavePassword || \"\";\n        this.slavePort = opts.slavePort || 0;\n        this.replicationRank = opts.replicationRank || 0;\n        this.masterId = opts.masterId || 0;\n    }\n    toPacket() {\n        const length = 15 + // TODO: should be ascii?\n        Buffer.byteLength(this.slaveHostname, \"utf8\") + Buffer.byteLength(this.slaveUser, \"utf8\") + Buffer.byteLength(this.slavePassword, \"utf8\") + 3 + 4;\n        const buffer = Buffer.allocUnsafe(length);\n        const packet = new Packet(0, buffer, 0, length);\n        packet.offset = 4;\n        packet.writeInt8(CommandCodes.REGISTER_SLAVE);\n        packet.writeInt32(this.serverId);\n        packet.writeInt8(Buffer.byteLength(this.slaveHostname, \"utf8\"));\n        packet.writeString(this.slaveHostname);\n        packet.writeInt8(Buffer.byteLength(this.slaveUser, \"utf8\"));\n        packet.writeString(this.slaveUser);\n        packet.writeInt8(Buffer.byteLength(this.slavePassword, \"utf8\"));\n        packet.writeString(this.slavePassword);\n        packet.writeInt16(this.slavePort);\n        packet.writeInt32(this.replicationRank);\n        packet.writeInt32(this.masterId);\n        return packet;\n    }\n}\nmodule.exports = RegisterSlave;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3JlZ2lzdGVyX3NsYXZlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsZ0VBQWdFO0FBQ2hFLHlHQUF5RztBQUV6RyxNQUFNQSxTQUFTQyxtQkFBT0EsQ0FBQztBQUN2QixNQUFNQyxlQUFlRCxtQkFBT0EsQ0FBQztBQUU3QixNQUFNRTtJQUNKQyxZQUFZQyxJQUFJLENBQUU7UUFDaEIsSUFBSSxDQUFDQyxRQUFRLEdBQUdELEtBQUtDLFFBQVEsSUFBSTtRQUNqQyxJQUFJLENBQUNDLGFBQWEsR0FBR0YsS0FBS0UsYUFBYSxJQUFJO1FBQzNDLElBQUksQ0FBQ0MsU0FBUyxHQUFHSCxLQUFLRyxTQUFTLElBQUk7UUFDbkMsSUFBSSxDQUFDQyxhQUFhLEdBQUdKLEtBQUtJLGFBQWEsSUFBSTtRQUMzQyxJQUFJLENBQUNDLFNBQVMsR0FBR0wsS0FBS0ssU0FBUyxJQUFJO1FBQ25DLElBQUksQ0FBQ0MsZUFBZSxHQUFHTixLQUFLTSxlQUFlLElBQUk7UUFDL0MsSUFBSSxDQUFDQyxRQUFRLEdBQUdQLEtBQUtPLFFBQVEsSUFBSTtJQUNuQztJQUVBQyxXQUFXO1FBQ1QsTUFBTUMsU0FDSixLQUFLLHlCQUF5QjtRQUM5QkMsT0FBT0MsVUFBVSxDQUFDLElBQUksQ0FBQ1QsYUFBYSxFQUFFLFVBQ3RDUSxPQUFPQyxVQUFVLENBQUMsSUFBSSxDQUFDUixTQUFTLEVBQUUsVUFDbENPLE9BQU9DLFVBQVUsQ0FBQyxJQUFJLENBQUNQLGFBQWEsRUFBRSxVQUN0QyxJQUNBO1FBQ0YsTUFBTVEsU0FBU0YsT0FBT0csV0FBVyxDQUFDSjtRQUNsQyxNQUFNSyxTQUFTLElBQUluQixPQUFPLEdBQUdpQixRQUFRLEdBQUdIO1FBQ3hDSyxPQUFPQyxNQUFNLEdBQUc7UUFDaEJELE9BQU9FLFNBQVMsQ0FBQ25CLGFBQWFvQixjQUFjO1FBQzVDSCxPQUFPSSxVQUFVLENBQUMsSUFBSSxDQUFDakIsUUFBUTtRQUMvQmEsT0FBT0UsU0FBUyxDQUFDTixPQUFPQyxVQUFVLENBQUMsSUFBSSxDQUFDVCxhQUFhLEVBQUU7UUFDdkRZLE9BQU9LLFdBQVcsQ0FBQyxJQUFJLENBQUNqQixhQUFhO1FBQ3JDWSxPQUFPRSxTQUFTLENBQUNOLE9BQU9DLFVBQVUsQ0FBQyxJQUFJLENBQUNSLFNBQVMsRUFBRTtRQUNuRFcsT0FBT0ssV0FBVyxDQUFDLElBQUksQ0FBQ2hCLFNBQVM7UUFDakNXLE9BQU9FLFNBQVMsQ0FBQ04sT0FBT0MsVUFBVSxDQUFDLElBQUksQ0FBQ1AsYUFBYSxFQUFFO1FBQ3ZEVSxPQUFPSyxXQUFXLENBQUMsSUFBSSxDQUFDZixhQUFhO1FBQ3JDVSxPQUFPTSxVQUFVLENBQUMsSUFBSSxDQUFDZixTQUFTO1FBQ2hDUyxPQUFPSSxVQUFVLENBQUMsSUFBSSxDQUFDWixlQUFlO1FBQ3RDUSxPQUFPSSxVQUFVLENBQUMsSUFBSSxDQUFDWCxRQUFRO1FBQy9CLE9BQU9PO0lBQ1Q7QUFDRjtBQUVBTyxPQUFPQyxPQUFPLEdBQUd4QiIsInNvdXJjZXMiOlsid2VicGFjazovL2FjZWUtcHJvdG8tb25lLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9yZWdpc3Rlcl9zbGF2ZS5qcz9kY2YxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLy8gaHR0cDovL2Rldi5teXNxbC5jb20vZG9jL2ludGVybmFscy9lbi9jb20tcmVnaXN0ZXItc2xhdmUuaHRtbFxuLy8gbm90ZSB0aGF0IGRvY3VtZW50YXRpb24gaXMgaW5jb3JyZWN0LCBmb3IgZXhhbXBsZSBjb21tYW5kIGNvZGUgaXMgYWN0dWFsbHkgMHgxNSBidXQgZG9jdW1lbnRlZCBhcyAweDE0XG5cbmNvbnN0IFBhY2tldCA9IHJlcXVpcmUoJy4uL3BhY2tldHMvcGFja2V0Jyk7XG5jb25zdCBDb21tYW5kQ29kZXMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvY29tbWFuZHMnKTtcblxuY2xhc3MgUmVnaXN0ZXJTbGF2ZSB7XG4gIGNvbnN0cnVjdG9yKG9wdHMpIHtcbiAgICB0aGlzLnNlcnZlcklkID0gb3B0cy5zZXJ2ZXJJZCB8fCAwO1xuICAgIHRoaXMuc2xhdmVIb3N0bmFtZSA9IG9wdHMuc2xhdmVIb3N0bmFtZSB8fCAnJztcbiAgICB0aGlzLnNsYXZlVXNlciA9IG9wdHMuc2xhdmVVc2VyIHx8ICcnO1xuICAgIHRoaXMuc2xhdmVQYXNzd29yZCA9IG9wdHMuc2xhdmVQYXNzd29yZCB8fCAnJztcbiAgICB0aGlzLnNsYXZlUG9ydCA9IG9wdHMuc2xhdmVQb3J0IHx8IDA7XG4gICAgdGhpcy5yZXBsaWNhdGlvblJhbmsgPSBvcHRzLnJlcGxpY2F0aW9uUmFuayB8fCAwO1xuICAgIHRoaXMubWFzdGVySWQgPSBvcHRzLm1hc3RlcklkIHx8IDA7XG4gIH1cblxuICB0b1BhY2tldCgpIHtcbiAgICBjb25zdCBsZW5ndGggPVxuICAgICAgMTUgKyAvLyBUT0RPOiBzaG91bGQgYmUgYXNjaWk/XG4gICAgICBCdWZmZXIuYnl0ZUxlbmd0aCh0aGlzLnNsYXZlSG9zdG5hbWUsICd1dGY4JykgK1xuICAgICAgQnVmZmVyLmJ5dGVMZW5ndGgodGhpcy5zbGF2ZVVzZXIsICd1dGY4JykgK1xuICAgICAgQnVmZmVyLmJ5dGVMZW5ndGgodGhpcy5zbGF2ZVBhc3N3b3JkLCAndXRmOCcpICtcbiAgICAgIDMgK1xuICAgICAgNDtcbiAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2NVbnNhZmUobGVuZ3RoKTtcbiAgICBjb25zdCBwYWNrZXQgPSBuZXcgUGFja2V0KDAsIGJ1ZmZlciwgMCwgbGVuZ3RoKTtcbiAgICBwYWNrZXQub2Zmc2V0ID0gNDtcbiAgICBwYWNrZXQud3JpdGVJbnQ4KENvbW1hbmRDb2Rlcy5SRUdJU1RFUl9TTEFWRSk7XG4gICAgcGFja2V0LndyaXRlSW50MzIodGhpcy5zZXJ2ZXJJZCk7XG4gICAgcGFja2V0LndyaXRlSW50OChCdWZmZXIuYnl0ZUxlbmd0aCh0aGlzLnNsYXZlSG9zdG5hbWUsICd1dGY4JykpO1xuICAgIHBhY2tldC53cml0ZVN0cmluZyh0aGlzLnNsYXZlSG9zdG5hbWUpO1xuICAgIHBhY2tldC53cml0ZUludDgoQnVmZmVyLmJ5dGVMZW5ndGgodGhpcy5zbGF2ZVVzZXIsICd1dGY4JykpO1xuICAgIHBhY2tldC53cml0ZVN0cmluZyh0aGlzLnNsYXZlVXNlcik7XG4gICAgcGFja2V0LndyaXRlSW50OChCdWZmZXIuYnl0ZUxlbmd0aCh0aGlzLnNsYXZlUGFzc3dvcmQsICd1dGY4JykpO1xuICAgIHBhY2tldC53cml0ZVN0cmluZyh0aGlzLnNsYXZlUGFzc3dvcmQpO1xuICAgIHBhY2tldC53cml0ZUludDE2KHRoaXMuc2xhdmVQb3J0KTtcbiAgICBwYWNrZXQud3JpdGVJbnQzMih0aGlzLnJlcGxpY2F0aW9uUmFuayk7XG4gICAgcGFja2V0LndyaXRlSW50MzIodGhpcy5tYXN0ZXJJZCk7XG4gICAgcmV0dXJuIHBhY2tldDtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFJlZ2lzdGVyU2xhdmU7XG4iXSwibmFtZXMiOlsiUGFja2V0IiwicmVxdWlyZSIsIkNvbW1hbmRDb2RlcyIsIlJlZ2lzdGVyU2xhdmUiLCJjb25zdHJ1Y3RvciIsIm9wdHMiLCJzZXJ2ZXJJZCIsInNsYXZlSG9zdG5hbWUiLCJzbGF2ZVVzZXIiLCJzbGF2ZVBhc3N3b3JkIiwic2xhdmVQb3J0IiwicmVwbGljYXRpb25SYW5rIiwibWFzdGVySWQiLCJ0b1BhY2tldCIsImxlbmd0aCIsIkJ1ZmZlciIsImJ5dGVMZW5ndGgiLCJidWZmZXIiLCJhbGxvY1Vuc2FmZSIsInBhY2tldCIsIm9mZnNldCIsIndyaXRlSW50OCIsIlJFR0lTVEVSX1NMQVZFIiwid3JpdGVJbnQzMiIsIndyaXRlU3RyaW5nIiwid3JpdGVJbnQxNiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/register_slave.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/resultset_header.js":
/*!*************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/resultset_header.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// TODO: rename to OK packet\n// https://dev.mysql.com/doc/internals/en/packet-OK_Packet.html\nconst Packet = __webpack_require__(/*! ./packet.js */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst ClientConstants = __webpack_require__(/*! ../constants/client.js */ \"(rsc)/./node_modules/mysql2/lib/constants/client.js\");\nconst ServerSatusFlags = __webpack_require__(/*! ../constants/server_status.js */ \"(rsc)/./node_modules/mysql2/lib/constants/server_status.js\");\nconst EncodingToCharset = __webpack_require__(/*! ../constants/encoding_charset.js */ \"(rsc)/./node_modules/mysql2/lib/constants/encoding_charset.js\");\nconst sessionInfoTypes = __webpack_require__(/*! ../constants/session_track.js */ \"(rsc)/./node_modules/mysql2/lib/constants/session_track.js\");\nclass ResultSetHeader {\n    constructor(packet, connection){\n        const bigNumberStrings = connection.config.bigNumberStrings;\n        const encoding = connection.serverEncoding;\n        const flags = connection._handshakePacket.capabilityFlags;\n        const isSet = function(flag) {\n            return flags & ClientConstants[flag];\n        };\n        if (packet.buffer[packet.offset] !== 0) {\n            this.fieldCount = packet.readLengthCodedNumber();\n            if (this.fieldCount === null) {\n                this.infileName = packet.readString(undefined, encoding);\n            }\n            return;\n        }\n        this.fieldCount = packet.readInt8(); // skip OK byte\n        this.affectedRows = packet.readLengthCodedNumber(bigNumberStrings);\n        this.insertId = packet.readLengthCodedNumberSigned(bigNumberStrings);\n        this.info = \"\";\n        if (isSet(\"PROTOCOL_41\")) {\n            this.serverStatus = packet.readInt16();\n            this.warningStatus = packet.readInt16();\n        } else if (isSet(\"TRANSACTIONS\")) {\n            this.serverStatus = packet.readInt16();\n        }\n        let stateChanges = null;\n        if (isSet(\"SESSION_TRACK\") && packet.offset < packet.end) {\n            this.info = packet.readLengthCodedString(encoding);\n            if (this.serverStatus && ServerSatusFlags.SERVER_SESSION_STATE_CHANGED) {\n                // session change info record - see\n                // https://dev.mysql.com/doc/internals/en/packet-OK_Packet.html#cs-sect-packet-ok-sessioninfo\n                let len = packet.offset < packet.end ? packet.readLengthCodedNumber() : 0;\n                const end = packet.offset + len;\n                let type, key, stateEnd;\n                if (len > 0) {\n                    stateChanges = {\n                        systemVariables: {},\n                        schema: null,\n                        gtids: [],\n                        trackStateChange: null\n                    };\n                }\n                while(packet.offset < end){\n                    type = packet.readInt8();\n                    len = packet.readLengthCodedNumber();\n                    stateEnd = packet.offset + len;\n                    if (type === sessionInfoTypes.SYSTEM_VARIABLES) {\n                        key = packet.readLengthCodedString(encoding);\n                        const val = packet.readLengthCodedString(encoding);\n                        stateChanges.systemVariables[key] = val;\n                        if (key === \"character_set_client\") {\n                            const charsetNumber = EncodingToCharset[val];\n                            connection.config.charsetNumber = charsetNumber;\n                        }\n                    } else if (type === sessionInfoTypes.SCHEMA) {\n                        key = packet.readLengthCodedString(encoding);\n                        stateChanges.schema = key;\n                    } else if (type === sessionInfoTypes.STATE_CHANGE) {\n                        stateChanges.trackStateChange = packet.readLengthCodedString(encoding);\n                    } else if (type === sessionInfoTypes.STATE_GTIDS) {\n                        // TODO: find if the first length coded string means anything. Usually comes as empty\n                        // eslint-disable-next-line no-unused-vars\n                        const _unknownString = packet.readLengthCodedString(encoding);\n                        const gtid = packet.readLengthCodedString(encoding);\n                        stateChanges.gtids = gtid.split(\",\");\n                    } else {\n                    // unsupported session track type. For now just ignore\n                    }\n                    packet.offset = stateEnd;\n                }\n            }\n        } else {\n            this.info = packet.readString(undefined, encoding);\n        }\n        if (stateChanges) {\n            this.stateChanges = stateChanges;\n        }\n        const m = this.info.match(/\\schanged:\\s*(\\d+)/i);\n        if (m !== null) {\n            this.changedRows = parseInt(m[1], 10);\n        } else {\n            this.changedRows = 0;\n        }\n    }\n    // TODO: should be consistent instance member, but it's just easier here to have just function\n    static toPacket(fieldCount, insertId) {\n        let length = 4 + Packet.lengthCodedNumberLength(fieldCount);\n        if (typeof insertId !== \"undefined\") {\n            length += Packet.lengthCodedNumberLength(insertId);\n        }\n        const buffer = Buffer.allocUnsafe(length);\n        const packet = new Packet(0, buffer, 0, length);\n        packet.offset = 4;\n        packet.writeLengthCodedNumber(fieldCount);\n        if (typeof insertId !== \"undefined\") {\n            packet.writeLengthCodedNumber(insertId);\n        }\n        return packet;\n    }\n}\nmodule.exports = ResultSetHeader;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/resultset_header.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/ssl_request.js":
/*!********************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/ssl_request.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst ClientConstants = __webpack_require__(/*! ../constants/client */ \"(rsc)/./node_modules/mysql2/lib/constants/client.js\");\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nclass SSLRequest {\n    constructor(flags, charset){\n        this.clientFlags = flags | ClientConstants.SSL;\n        this.charset = charset;\n    }\n    toPacket() {\n        const length = 36;\n        const buffer = Buffer.allocUnsafe(length);\n        const packet = new Packet(0, buffer, 0, length);\n        buffer.fill(0);\n        packet.offset = 4;\n        packet.writeInt32(this.clientFlags);\n        packet.writeInt32(0); // max packet size. todo: move to config\n        packet.writeInt8(this.charset);\n        return packet;\n    }\n}\nmodule.exports = SSLRequest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3NzbF9yZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsa0JBQWtCQyxtQkFBT0EsQ0FBQztBQUNoQyxNQUFNQyxTQUFTRCxtQkFBT0EsQ0FBQztBQUV2QixNQUFNRTtJQUNKQyxZQUFZQyxLQUFLLEVBQUVDLE9BQU8sQ0FBRTtRQUMxQixJQUFJLENBQUNDLFdBQVcsR0FBR0YsUUFBUUwsZ0JBQWdCUSxHQUFHO1FBQzlDLElBQUksQ0FBQ0YsT0FBTyxHQUFHQTtJQUNqQjtJQUVBRyxXQUFXO1FBQ1QsTUFBTUMsU0FBUztRQUNmLE1BQU1DLFNBQVNDLE9BQU9DLFdBQVcsQ0FBQ0g7UUFDbEMsTUFBTUksU0FBUyxJQUFJWixPQUFPLEdBQUdTLFFBQVEsR0FBR0Q7UUFDeENDLE9BQU9JLElBQUksQ0FBQztRQUNaRCxPQUFPRSxNQUFNLEdBQUc7UUFDaEJGLE9BQU9HLFVBQVUsQ0FBQyxJQUFJLENBQUNWLFdBQVc7UUFDbENPLE9BQU9HLFVBQVUsQ0FBQyxJQUFJLHdDQUF3QztRQUM5REgsT0FBT0ksU0FBUyxDQUFDLElBQUksQ0FBQ1osT0FBTztRQUM3QixPQUFPUTtJQUNUO0FBQ0Y7QUFFQUssT0FBT0MsT0FBTyxHQUFHakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hY2VlLXByb3RvLW9uZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL3BhY2tldHMvc3NsX3JlcXVlc3QuanM/YTZkNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IENsaWVudENvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9jbGllbnQnKTtcbmNvbnN0IFBhY2tldCA9IHJlcXVpcmUoJy4uL3BhY2tldHMvcGFja2V0Jyk7XG5cbmNsYXNzIFNTTFJlcXVlc3Qge1xuICBjb25zdHJ1Y3RvcihmbGFncywgY2hhcnNldCkge1xuICAgIHRoaXMuY2xpZW50RmxhZ3MgPSBmbGFncyB8IENsaWVudENvbnN0YW50cy5TU0w7XG4gICAgdGhpcy5jaGFyc2V0ID0gY2hhcnNldDtcbiAgfVxuXG4gIHRvUGFja2V0KCkge1xuICAgIGNvbnN0IGxlbmd0aCA9IDM2O1xuICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShsZW5ndGgpO1xuICAgIGNvbnN0IHBhY2tldCA9IG5ldyBQYWNrZXQoMCwgYnVmZmVyLCAwLCBsZW5ndGgpO1xuICAgIGJ1ZmZlci5maWxsKDApO1xuICAgIHBhY2tldC5vZmZzZXQgPSA0O1xuICAgIHBhY2tldC53cml0ZUludDMyKHRoaXMuY2xpZW50RmxhZ3MpO1xuICAgIHBhY2tldC53cml0ZUludDMyKDApOyAvLyBtYXggcGFja2V0IHNpemUuIHRvZG86IG1vdmUgdG8gY29uZmlnXG4gICAgcGFja2V0LndyaXRlSW50OCh0aGlzLmNoYXJzZXQpO1xuICAgIHJldHVybiBwYWNrZXQ7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBTU0xSZXF1ZXN0O1xuIl0sIm5hbWVzIjpbIkNsaWVudENvbnN0YW50cyIsInJlcXVpcmUiLCJQYWNrZXQiLCJTU0xSZXF1ZXN0IiwiY29uc3RydWN0b3IiLCJmbGFncyIsImNoYXJzZXQiLCJjbGllbnRGbGFncyIsIlNTTCIsInRvUGFja2V0IiwibGVuZ3RoIiwiYnVmZmVyIiwiQnVmZmVyIiwiYWxsb2NVbnNhZmUiLCJwYWNrZXQiLCJmaWxsIiwib2Zmc2V0Iiwid3JpdGVJbnQzMiIsIndyaXRlSW50OCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/ssl_request.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/text_row.js":
/*!*****************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/text_row.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nclass TextRow {\n    constructor(columns){\n        this.columns = columns || [];\n    }\n    static fromPacket(packet) {\n        // packet.reset(); // set offset to starting point?\n        const columns = [];\n        while(packet.haveMoreData()){\n            columns.push(packet.readLengthCodedString());\n        }\n        return new TextRow(columns);\n    }\n    static toPacket(columns, encoding) {\n        const sequenceId = 0; // TODO remove, this is calculated now in connecton\n        let length = 0;\n        columns.forEach((val)=>{\n            if (val === null || typeof val === \"undefined\") {\n                ++length;\n                return;\n            }\n            length += Packet.lengthCodedStringLength(val.toString(10), encoding);\n        });\n        const buffer = Buffer.allocUnsafe(length + 4);\n        const packet = new Packet(sequenceId, buffer, 0, length + 4);\n        packet.offset = 4;\n        columns.forEach((val)=>{\n            if (val === null) {\n                packet.writeNull();\n                return;\n            }\n            if (typeof val === \"undefined\") {\n                packet.writeInt8(0);\n                return;\n            }\n            packet.writeLengthCodedString(val.toString(10), encoding);\n        });\n        return packet;\n    }\n}\nmodule.exports = TextRow;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3RleHRfcm93LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsU0FBU0MsbUJBQU9BLENBQUM7QUFFdkIsTUFBTUM7SUFDSkMsWUFBWUMsT0FBTyxDQUFFO1FBQ25CLElBQUksQ0FBQ0EsT0FBTyxHQUFHQSxXQUFXLEVBQUU7SUFDOUI7SUFFQSxPQUFPQyxXQUFXQyxNQUFNLEVBQUU7UUFDeEIsbURBQW1EO1FBQ25ELE1BQU1GLFVBQVUsRUFBRTtRQUNsQixNQUFPRSxPQUFPQyxZQUFZLEdBQUk7WUFDNUJILFFBQVFJLElBQUksQ0FBQ0YsT0FBT0cscUJBQXFCO1FBQzNDO1FBQ0EsT0FBTyxJQUFJUCxRQUFRRTtJQUNyQjtJQUVBLE9BQU9NLFNBQVNOLE9BQU8sRUFBRU8sUUFBUSxFQUFFO1FBQ2pDLE1BQU1DLGFBQWEsR0FBRyxtREFBbUQ7UUFDekUsSUFBSUMsU0FBUztRQUNiVCxRQUFRVSxPQUFPLENBQUNDLENBQUFBO1lBQ2QsSUFBSUEsUUFBUSxRQUFRLE9BQU9BLFFBQVEsYUFBYTtnQkFDOUMsRUFBRUY7Z0JBQ0Y7WUFDRjtZQUNBQSxVQUFVYixPQUFPZ0IsdUJBQXVCLENBQUNELElBQUlFLFFBQVEsQ0FBQyxLQUFLTjtRQUM3RDtRQUNBLE1BQU1PLFNBQVNDLE9BQU9DLFdBQVcsQ0FBQ1AsU0FBUztRQUMzQyxNQUFNUCxTQUFTLElBQUlOLE9BQU9ZLFlBQVlNLFFBQVEsR0FBR0wsU0FBUztRQUMxRFAsT0FBT2UsTUFBTSxHQUFHO1FBQ2hCakIsUUFBUVUsT0FBTyxDQUFDQyxDQUFBQTtZQUNkLElBQUlBLFFBQVEsTUFBTTtnQkFDaEJULE9BQU9nQixTQUFTO2dCQUNoQjtZQUNGO1lBQ0EsSUFBSSxPQUFPUCxRQUFRLGFBQWE7Z0JBQzlCVCxPQUFPaUIsU0FBUyxDQUFDO2dCQUNqQjtZQUNGO1lBQ0FqQixPQUFPa0Isc0JBQXNCLENBQUNULElBQUlFLFFBQVEsQ0FBQyxLQUFLTjtRQUNsRDtRQUNBLE9BQU9MO0lBQ1Q7QUFDRjtBQUVBbUIsT0FBT0MsT0FBTyxHQUFHeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hY2VlLXByb3RvLW9uZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL3BhY2tldHMvdGV4dF9yb3cuanM/OWNlMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IFBhY2tldCA9IHJlcXVpcmUoJy4uL3BhY2tldHMvcGFja2V0Jyk7XG5cbmNsYXNzIFRleHRSb3cge1xuICBjb25zdHJ1Y3Rvcihjb2x1bW5zKSB7XG4gICAgdGhpcy5jb2x1bW5zID0gY29sdW1ucyB8fCBbXTtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tUGFja2V0KHBhY2tldCkge1xuICAgIC8vIHBhY2tldC5yZXNldCgpOyAvLyBzZXQgb2Zmc2V0IHRvIHN0YXJ0aW5nIHBvaW50P1xuICAgIGNvbnN0IGNvbHVtbnMgPSBbXTtcbiAgICB3aGlsZSAocGFja2V0LmhhdmVNb3JlRGF0YSgpKSB7XG4gICAgICBjb2x1bW5zLnB1c2gocGFja2V0LnJlYWRMZW5ndGhDb2RlZFN0cmluZygpKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBUZXh0Um93KGNvbHVtbnMpO1xuICB9XG5cbiAgc3RhdGljIHRvUGFja2V0KGNvbHVtbnMsIGVuY29kaW5nKSB7XG4gICAgY29uc3Qgc2VxdWVuY2VJZCA9IDA7IC8vIFRPRE8gcmVtb3ZlLCB0aGlzIGlzIGNhbGN1bGF0ZWQgbm93IGluIGNvbm5lY3RvblxuICAgIGxldCBsZW5ndGggPSAwO1xuICAgIGNvbHVtbnMuZm9yRWFjaCh2YWwgPT4ge1xuICAgICAgaWYgKHZhbCA9PT0gbnVsbCB8fCB0eXBlb2YgdmFsID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICArK2xlbmd0aDtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgbGVuZ3RoICs9IFBhY2tldC5sZW5ndGhDb2RlZFN0cmluZ0xlbmd0aCh2YWwudG9TdHJpbmcoMTApLCBlbmNvZGluZyk7XG4gICAgfSk7XG4gICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aCArIDQpO1xuICAgIGNvbnN0IHBhY2tldCA9IG5ldyBQYWNrZXQoc2VxdWVuY2VJZCwgYnVmZmVyLCAwLCBsZW5ndGggKyA0KTtcbiAgICBwYWNrZXQub2Zmc2V0ID0gNDtcbiAgICBjb2x1bW5zLmZvckVhY2godmFsID0+IHtcbiAgICAgIGlmICh2YWwgPT09IG51bGwpIHtcbiAgICAgICAgcGFja2V0LndyaXRlTnVsbCgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIHZhbCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcGFja2V0LndyaXRlSW50OCgwKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgcGFja2V0LndyaXRlTGVuZ3RoQ29kZWRTdHJpbmcodmFsLnRvU3RyaW5nKDEwKSwgZW5jb2RpbmcpO1xuICAgIH0pO1xuICAgIHJldHVybiBwYWNrZXQ7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBUZXh0Um93O1xuIl0sIm5hbWVzIjpbIlBhY2tldCIsInJlcXVpcmUiLCJUZXh0Um93IiwiY29uc3RydWN0b3IiLCJjb2x1bW5zIiwiZnJvbVBhY2tldCIsInBhY2tldCIsImhhdmVNb3JlRGF0YSIsInB1c2giLCJyZWFkTGVuZ3RoQ29kZWRTdHJpbmciLCJ0b1BhY2tldCIsImVuY29kaW5nIiwic2VxdWVuY2VJZCIsImxlbmd0aCIsImZvckVhY2giLCJ2YWwiLCJsZW5ndGhDb2RlZFN0cmluZ0xlbmd0aCIsInRvU3RyaW5nIiwiYnVmZmVyIiwiQnVmZmVyIiwiYWxsb2NVbnNhZmUiLCJvZmZzZXQiLCJ3cml0ZU51bGwiLCJ3cml0ZUludDgiLCJ3cml0ZUxlbmd0aENvZGVkU3RyaW5nIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/text_row.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/parsers/binary_parser.js":
/*!**********************************************************!*\
  !*** ./node_modules/mysql2/lib/parsers/binary_parser.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst FieldFlags = __webpack_require__(/*! ../constants/field_flags.js */ \"(rsc)/./node_modules/mysql2/lib/constants/field_flags.js\");\nconst Charsets = __webpack_require__(/*! ../constants/charsets.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charsets.js\");\nconst Types = __webpack_require__(/*! ../constants/types.js */ \"(rsc)/./node_modules/mysql2/lib/constants/types.js\");\nconst helpers = __webpack_require__(/*! ../helpers */ \"(rsc)/./node_modules/mysql2/lib/helpers.js\");\nconst genFunc = __webpack_require__(/*! generate-function */ \"(rsc)/./node_modules/generate-function/index.js\");\nconst parserCache = __webpack_require__(/*! ./parser_cache.js */ \"(rsc)/./node_modules/mysql2/lib/parsers/parser_cache.js\");\nconst typeNames = [];\nfor(const t in Types){\n    typeNames[Types[t]] = t;\n}\nfunction readCodeFor(field, config, options, fieldNum) {\n    const supportBigNumbers = options.supportBigNumbers || config.supportBigNumbers;\n    const bigNumberStrings = options.bigNumberStrings || config.bigNumberStrings;\n    const timezone = options.timezone || config.timezone;\n    const dateStrings = options.dateStrings || config.dateStrings;\n    const unsigned = field.flags & FieldFlags.UNSIGNED;\n    switch(field.columnType){\n        case Types.TINY:\n            return unsigned ? \"packet.readInt8();\" : \"packet.readSInt8();\";\n        case Types.SHORT:\n            return unsigned ? \"packet.readInt16();\" : \"packet.readSInt16();\";\n        case Types.LONG:\n        case Types.INT24:\n            return unsigned ? \"packet.readInt32();\" : \"packet.readSInt32();\";\n        case Types.YEAR:\n            return \"packet.readInt16()\";\n        case Types.FLOAT:\n            return \"packet.readFloat();\";\n        case Types.DOUBLE:\n            return \"packet.readDouble();\";\n        case Types.NULL:\n            return \"null;\";\n        case Types.DATE:\n        case Types.DATETIME:\n        case Types.TIMESTAMP:\n        case Types.NEWDATE:\n            if (helpers.typeMatch(field.columnType, dateStrings, Types)) {\n                return `packet.readDateTimeString(${field.decimals});`;\n            }\n            return `packet.readDateTime('${timezone}');`;\n        case Types.TIME:\n            return \"packet.readTimeString()\";\n        case Types.DECIMAL:\n        case Types.NEWDECIMAL:\n            if (config.decimalNumbers) {\n                return \"packet.parseLengthCodedFloat();\";\n            }\n            return 'packet.readLengthCodedString(\"ascii\");';\n        case Types.GEOMETRY:\n            return \"packet.parseGeometryValue();\";\n        case Types.JSON:\n            // Since for JSON columns mysql always returns charset 63 (BINARY),\n            // we have to handle it according to JSON specs and use \"utf8\",\n            // see https://github.com/sidorares/node-mysql2/issues/409\n            return 'JSON.parse(packet.readLengthCodedString(\"utf8\"));';\n        case Types.LONGLONG:\n            if (!supportBigNumbers) {\n                return unsigned ? \"packet.readInt64JSNumber();\" : \"packet.readSInt64JSNumber();\";\n            }\n            if (bigNumberStrings) {\n                return unsigned ? \"packet.readInt64String();\" : \"packet.readSInt64String();\";\n            }\n            return unsigned ? \"packet.readInt64();\" : \"packet.readSInt64();\";\n        default:\n            if (field.characterSet === Charsets.BINARY) {\n                return \"packet.readLengthCodedBuffer();\";\n            }\n            return `packet.readLengthCodedString(fields[${fieldNum}].encoding)`;\n    }\n}\nfunction compile(fields, options, config) {\n    const parserFn = genFunc();\n    let i = 0;\n    const nullBitmapLength = Math.floor((fields.length + 7 + 2) / 8);\n    /* eslint-disable no-trailing-spaces */ /* eslint-disable no-spaced-func */ /* eslint-disable no-unexpected-multiline */ parserFn(\"(function(){\");\n    parserFn(\"return class BinaryRow {\");\n    parserFn(\"constructor() {\");\n    parserFn(\"}\");\n    parserFn(\"next(packet, fields, options) {\");\n    if (options.rowsAsArray) {\n        parserFn(`const result = new Array(${fields.length});`);\n    } else {\n        parserFn(\"const result = {};\");\n    }\n    const resultTables = {};\n    let resultTablesArray = [];\n    if (options.nestTables === true) {\n        for(i = 0; i < fields.length; i++){\n            resultTables[fields[i].table] = 1;\n        }\n        resultTablesArray = Object.keys(resultTables);\n        for(i = 0; i < resultTablesArray.length; i++){\n            parserFn(`result[${helpers.srcEscape(resultTablesArray[i])}] = {};`);\n        }\n    }\n    parserFn(\"packet.readInt8();\"); // status byte\n    for(i = 0; i < nullBitmapLength; ++i){\n        parserFn(`const nullBitmaskByte${i} = packet.readInt8();`);\n    }\n    let lvalue = \"\";\n    let currentFieldNullBit = 4;\n    let nullByteIndex = 0;\n    let fieldName = \"\";\n    let tableName = \"\";\n    for(i = 0; i < fields.length; i++){\n        fieldName = helpers.srcEscape(fields[i].name);\n        parserFn(`// ${fieldName}: ${typeNames[fields[i].columnType]}`);\n        if (typeof options.nestTables === \"string\") {\n            tableName = helpers.srcEscape(fields[i].table);\n            lvalue = `result[${helpers.srcEscape(fields[i].table + options.nestTables + fields[i].name)}]`;\n        } else if (options.nestTables === true) {\n            tableName = helpers.srcEscape(fields[i].table);\n            lvalue = `result[${tableName}][${fieldName}]`;\n        } else if (options.rowsAsArray) {\n            lvalue = `result[${i.toString(10)}]`;\n        } else {\n            lvalue = `result[${helpers.srcEscape(fields[i].name)}]`;\n        }\n        // TODO: this used to be an optimisation ( if column marked as NOT_NULL don't include code to check null\n        // bitmap at all, but it seems that we can't rely on this flag, see #178\n        // TODO: benchmark performance difference\n        //\n        // if (fields[i].flags & FieldFlags.NOT_NULL) { // don't need to check null bitmap if field can't be null.\n        //  result.push(lvalue + ' = ' + readCodeFor(fields[i], config));\n        // } else if (fields[i].columnType == Types.NULL) {\n        //  result.push(lvalue + ' = null;');\n        // } else {\n        parserFn(`if (nullBitmaskByte${nullByteIndex} & ${currentFieldNullBit})`);\n        parserFn(`${lvalue} = null;`);\n        parserFn(\"else\");\n        parserFn(`${lvalue} = ${readCodeFor(fields[i], config, options, i)}`);\n        // }\n        currentFieldNullBit *= 2;\n        if (currentFieldNullBit === 0x100) {\n            currentFieldNullBit = 1;\n            nullByteIndex++;\n        }\n    }\n    parserFn(\"return result;\");\n    parserFn(\"}\");\n    parserFn(\"};\")(\"})()\");\n    /* eslint-enable no-trailing-spaces */ /* eslint-enable no-spaced-func */ /* eslint-enable no-unexpected-multiline */ if (config.debug) {\n        helpers.printDebugWithCode(\"Compiled binary protocol row parser\", parserFn.toString());\n    }\n    return parserFn.toFunction();\n}\nfunction getBinaryParser(fields, options, config) {\n    return parserCache.getParser(\"binary\", fields, options, config, compile);\n}\nmodule.exports = getBinaryParser;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/parsers/binary_parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/parsers/parser_cache.js":
/*!*********************************************************!*\
  !*** ./node_modules/mysql2/lib/parsers/parser_cache.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst LRU = (__webpack_require__(/*! lru-cache */ \"(rsc)/./node_modules/mysql2/node_modules/lru-cache/dist/cjs/index-cjs.js\")[\"default\"]);\nconst parserCache = new LRU({\n    max: 15000\n});\nfunction keyFromFields(type, fields, options, config) {\n    let res = `${type}` + `/${typeof options.nestTables}` + `/${options.nestTables}` + `/${options.rowsAsArray}` + `/${options.supportBigNumbers || config.supportBigNumbers}` + `/${options.bigNumberStrings || config.bigNumberStrings}` + `/${typeof options.typeCast}` + `/${options.timezone || config.timezone}` + `/${options.decimalNumbers}` + `/${options.dateStrings}`;\n    for(let i = 0; i < fields.length; ++i){\n        const field = fields[i];\n        res += `/${field.name}:${field.columnType}:${field.length}:${field.schema}:${field.table}:${field.flags}:${field.characterSet}`;\n    }\n    return res;\n}\nfunction getParser(type, fields, options, config, compiler) {\n    const key = keyFromFields(type, fields, options, config);\n    let parser = parserCache.get(key);\n    if (parser) {\n        return parser;\n    }\n    parser = compiler(fields, options, config);\n    parserCache.set(key, parser);\n    return parser;\n}\nfunction setMaxCache(max) {\n    parserCache.max = max;\n}\nfunction clearCache() {\n    parserCache.clear();\n}\nmodule.exports = {\n    getParser: getParser,\n    setMaxCache: setMaxCache,\n    clearCache: clearCache\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYXJzZXJzL3BhcnNlcl9jYWNoZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU1BLE1BQU1DLDZIQUE0QjtBQUV4QyxNQUFNRSxjQUFjLElBQUlILElBQUk7SUFDMUJJLEtBQUs7QUFDUDtBQUVBLFNBQVNDLGNBQWNDLElBQUksRUFBRUMsTUFBTSxFQUFFQyxPQUFPLEVBQUVDLE1BQU07SUFDbEQsSUFBSUMsTUFDRixDQUFDLEVBQUVKLEtBQUssQ0FBQyxHQUNULENBQUMsQ0FBQyxFQUFFLE9BQU9FLFFBQVFHLFVBQVUsQ0FBQyxDQUFDLEdBQy9CLENBQUMsQ0FBQyxFQUFFSCxRQUFRRyxVQUFVLENBQUMsQ0FBQyxHQUN4QixDQUFDLENBQUMsRUFBRUgsUUFBUUksV0FBVyxDQUFDLENBQUMsR0FDekIsQ0FBQyxDQUFDLEVBQUVKLFFBQVFLLGlCQUFpQixJQUFJSixPQUFPSSxpQkFBaUIsQ0FBQyxDQUFDLEdBQzNELENBQUMsQ0FBQyxFQUFFTCxRQUFRTSxnQkFBZ0IsSUFBSUwsT0FBT0ssZ0JBQWdCLENBQUMsQ0FBQyxHQUN6RCxDQUFDLENBQUMsRUFBRSxPQUFPTixRQUFRTyxRQUFRLENBQUMsQ0FBQyxHQUM3QixDQUFDLENBQUMsRUFBRVAsUUFBUVEsUUFBUSxJQUFJUCxPQUFPTyxRQUFRLENBQUMsQ0FBQyxHQUN6QyxDQUFDLENBQUMsRUFBRVIsUUFBUVMsY0FBYyxDQUFDLENBQUMsR0FDNUIsQ0FBQyxDQUFDLEVBQUVULFFBQVFVLFdBQVcsQ0FBQyxDQUFDO0lBQzNCLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJWixPQUFPYSxNQUFNLEVBQUUsRUFBRUQsRUFBRztRQUN0QyxNQUFNRSxRQUFRZCxNQUFNLENBQUNZLEVBQUU7UUFDdkJULE9BQU8sQ0FBQyxDQUFDLEVBQUVXLE1BQU1DLElBQUksQ0FBQyxDQUFDLEVBQUVELE1BQU1FLFVBQVUsQ0FBQyxDQUFDLEVBQUVGLE1BQU1ELE1BQU0sQ0FBQyxDQUFDLEVBQUVDLE1BQU1HLE1BQU0sQ0FBQyxDQUFDLEVBQUVILE1BQU1JLEtBQUssQ0FBQyxDQUFDLEVBQUVKLE1BQU1LLEtBQUssQ0FBQyxDQUFDLEVBQUVMLE1BQU1NLFlBQVksQ0FBQyxDQUFDO0lBQ2pJO0lBQ0EsT0FBT2pCO0FBQ1Q7QUFFQSxTQUFTa0IsVUFBVXRCLElBQUksRUFBRUMsTUFBTSxFQUFFQyxPQUFPLEVBQUVDLE1BQU0sRUFBRW9CLFFBQVE7SUFDeEQsTUFBTUMsTUFBTXpCLGNBQWNDLE1BQU1DLFFBQVFDLFNBQVNDO0lBQ2pELElBQUlzQixTQUFTNUIsWUFBWTZCLEdBQUcsQ0FBQ0Y7SUFFN0IsSUFBSUMsUUFBUTtRQUNWLE9BQU9BO0lBQ1Q7SUFFQUEsU0FBU0YsU0FBU3RCLFFBQVFDLFNBQVNDO0lBQ25DTixZQUFZOEIsR0FBRyxDQUFDSCxLQUFLQztJQUNyQixPQUFPQTtBQUNUO0FBRUEsU0FBU0csWUFBWTlCLEdBQUc7SUFDdEJELFlBQVlDLEdBQUcsR0FBR0E7QUFDcEI7QUFFQSxTQUFTK0I7SUFDUGhDLFlBQVlpQyxLQUFLO0FBQ25CO0FBRUFDLE9BQU9DLE9BQU8sR0FBRztJQUNmVixXQUFXQTtJQUNYTSxhQUFhQTtJQUNiQyxZQUFZQTtBQUNkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWNlZS1wcm90by1vbmUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYXJzZXJzL3BhcnNlcl9jYWNoZS5qcz8yMjU4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgTFJVID0gcmVxdWlyZSgnbHJ1LWNhY2hlJykuZGVmYXVsdDtcblxuY29uc3QgcGFyc2VyQ2FjaGUgPSBuZXcgTFJVKHtcbiAgbWF4OiAxNTAwMFxufSk7XG5cbmZ1bmN0aW9uIGtleUZyb21GaWVsZHModHlwZSwgZmllbGRzLCBvcHRpb25zLCBjb25maWcpIHtcbiAgbGV0IHJlcyA9XG4gICAgYCR7dHlwZX1gICtcbiAgICBgLyR7dHlwZW9mIG9wdGlvbnMubmVzdFRhYmxlc31gICtcbiAgICBgLyR7b3B0aW9ucy5uZXN0VGFibGVzfWAgK1xuICAgIGAvJHtvcHRpb25zLnJvd3NBc0FycmF5fWAgK1xuICAgIGAvJHtvcHRpb25zLnN1cHBvcnRCaWdOdW1iZXJzIHx8IGNvbmZpZy5zdXBwb3J0QmlnTnVtYmVyc31gICtcbiAgICBgLyR7b3B0aW9ucy5iaWdOdW1iZXJTdHJpbmdzIHx8IGNvbmZpZy5iaWdOdW1iZXJTdHJpbmdzfWAgK1xuICAgIGAvJHt0eXBlb2Ygb3B0aW9ucy50eXBlQ2FzdH1gICtcbiAgICBgLyR7b3B0aW9ucy50aW1lem9uZSB8fCBjb25maWcudGltZXpvbmV9YCArXG4gICAgYC8ke29wdGlvbnMuZGVjaW1hbE51bWJlcnN9YCArXG4gICAgYC8ke29wdGlvbnMuZGF0ZVN0cmluZ3N9YDtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBmaWVsZHMubGVuZ3RoOyArK2kpIHtcbiAgICBjb25zdCBmaWVsZCA9IGZpZWxkc1tpXTtcbiAgICByZXMgKz0gYC8ke2ZpZWxkLm5hbWV9OiR7ZmllbGQuY29sdW1uVHlwZX06JHtmaWVsZC5sZW5ndGh9OiR7ZmllbGQuc2NoZW1hfToke2ZpZWxkLnRhYmxlfToke2ZpZWxkLmZsYWdzfToke2ZpZWxkLmNoYXJhY3RlclNldH1gO1xuICB9XG4gIHJldHVybiByZXM7XG59XG5cbmZ1bmN0aW9uIGdldFBhcnNlcih0eXBlLCBmaWVsZHMsIG9wdGlvbnMsIGNvbmZpZywgY29tcGlsZXIpIHtcbiAgY29uc3Qga2V5ID0ga2V5RnJvbUZpZWxkcyh0eXBlLCBmaWVsZHMsIG9wdGlvbnMsIGNvbmZpZyk7XG4gIGxldCBwYXJzZXIgPSBwYXJzZXJDYWNoZS5nZXQoa2V5KTtcblxuICBpZiAocGFyc2VyKSB7XG4gICAgcmV0dXJuIHBhcnNlcjtcbiAgfVxuXG4gIHBhcnNlciA9IGNvbXBpbGVyKGZpZWxkcywgb3B0aW9ucywgY29uZmlnKTtcbiAgcGFyc2VyQ2FjaGUuc2V0KGtleSwgcGFyc2VyKTtcbiAgcmV0dXJuIHBhcnNlcjtcbn1cblxuZnVuY3Rpb24gc2V0TWF4Q2FjaGUobWF4KSB7XG4gIHBhcnNlckNhY2hlLm1heCA9IG1heDtcbn1cblxuZnVuY3Rpb24gY2xlYXJDYWNoZSgpIHtcbiAgcGFyc2VyQ2FjaGUuY2xlYXIoKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdldFBhcnNlcjogZ2V0UGFyc2VyLFxuICBzZXRNYXhDYWNoZTogc2V0TWF4Q2FjaGUsXG4gIGNsZWFyQ2FjaGU6IGNsZWFyQ2FjaGVcbn07XG4iXSwibmFtZXMiOlsiTFJVIiwicmVxdWlyZSIsImRlZmF1bHQiLCJwYXJzZXJDYWNoZSIsIm1heCIsImtleUZyb21GaWVsZHMiLCJ0eXBlIiwiZmllbGRzIiwib3B0aW9ucyIsImNvbmZpZyIsInJlcyIsIm5lc3RUYWJsZXMiLCJyb3dzQXNBcnJheSIsInN1cHBvcnRCaWdOdW1iZXJzIiwiYmlnTnVtYmVyU3RyaW5ncyIsInR5cGVDYXN0IiwidGltZXpvbmUiLCJkZWNpbWFsTnVtYmVycyIsImRhdGVTdHJpbmdzIiwiaSIsImxlbmd0aCIsImZpZWxkIiwibmFtZSIsImNvbHVtblR5cGUiLCJzY2hlbWEiLCJ0YWJsZSIsImZsYWdzIiwiY2hhcmFjdGVyU2V0IiwiZ2V0UGFyc2VyIiwiY29tcGlsZXIiLCJrZXkiLCJwYXJzZXIiLCJnZXQiLCJzZXQiLCJzZXRNYXhDYWNoZSIsImNsZWFyQ2FjaGUiLCJjbGVhciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/parsers/parser_cache.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/parsers/string.js":
/*!***************************************************!*\
  !*** ./node_modules/mysql2/lib/parsers/string.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nconst Iconv = __webpack_require__(/*! iconv-lite */ \"(rsc)/./node_modules/iconv-lite/lib/index.js\");\nexports.decode = function(buffer, encoding, start, end, options) {\n    if (Buffer.isEncoding(encoding)) {\n        return buffer.toString(encoding, start, end);\n    }\n    const decoder = Iconv.getDecoder(encoding, options || {});\n    const res = decoder.write(buffer.slice(start, end));\n    const trail = decoder.end();\n    return trail ? res + trail : res;\n};\nexports.encode = function(string, encoding, options) {\n    if (Buffer.isEncoding(encoding)) {\n        return Buffer.from(string, encoding);\n    }\n    const encoder = Iconv.getEncoder(encoding, options || {});\n    const res = encoder.write(string);\n    const trail = encoder.end();\n    return trail && trail.length > 0 ? Buffer.concat([\n        res,\n        trail\n    ]) : res;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYXJzZXJzL3N0cmluZy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU1BLFFBQVFDLG1CQUFPQSxDQUFDO0FBRXRCQyxjQUFjLEdBQUcsU0FBU0UsTUFBTSxFQUFFQyxRQUFRLEVBQUVDLEtBQUssRUFBRUMsR0FBRyxFQUFFQyxPQUFPO0lBQzdELElBQUlDLE9BQU9DLFVBQVUsQ0FBQ0wsV0FBVztRQUMvQixPQUFPRCxPQUFPTyxRQUFRLENBQUNOLFVBQVVDLE9BQU9DO0lBQzFDO0lBRUEsTUFBTUssVUFBVVosTUFBTWEsVUFBVSxDQUFDUixVQUFVRyxXQUFXLENBQUM7SUFFdkQsTUFBTU0sTUFBTUYsUUFBUUcsS0FBSyxDQUFDWCxPQUFPWSxLQUFLLENBQUNWLE9BQU9DO0lBQzlDLE1BQU1VLFFBQVFMLFFBQVFMLEdBQUc7SUFFekIsT0FBT1UsUUFBUUgsTUFBTUcsUUFBUUg7QUFDL0I7QUFFQVosY0FBYyxHQUFHLFNBQVNpQixNQUFNLEVBQUVkLFFBQVEsRUFBRUcsT0FBTztJQUNqRCxJQUFJQyxPQUFPQyxVQUFVLENBQUNMLFdBQVc7UUFDL0IsT0FBT0ksT0FBT1csSUFBSSxDQUFDRCxRQUFRZDtJQUM3QjtJQUVBLE1BQU1nQixVQUFVckIsTUFBTXNCLFVBQVUsQ0FBQ2pCLFVBQVVHLFdBQVcsQ0FBQztJQUV2RCxNQUFNTSxNQUFNTyxRQUFRTixLQUFLLENBQUNJO0lBQzFCLE1BQU1GLFFBQVFJLFFBQVFkLEdBQUc7SUFFekIsT0FBT1UsU0FBU0EsTUFBTU0sTUFBTSxHQUFHLElBQUlkLE9BQU9lLE1BQU0sQ0FBQztRQUFDVjtRQUFLRztLQUFNLElBQUlIO0FBQ25FIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWNlZS1wcm90by1vbmUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYXJzZXJzL3N0cmluZy5qcz8wZTJlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgSWNvbnYgPSByZXF1aXJlKCdpY29udi1saXRlJyk7XG5cbmV4cG9ydHMuZGVjb2RlID0gZnVuY3Rpb24oYnVmZmVyLCBlbmNvZGluZywgc3RhcnQsIGVuZCwgb3B0aW9ucykge1xuICBpZiAoQnVmZmVyLmlzRW5jb2RpbmcoZW5jb2RpbmcpKSB7XG4gICAgcmV0dXJuIGJ1ZmZlci50b1N0cmluZyhlbmNvZGluZywgc3RhcnQsIGVuZCk7XG4gIH1cblxuICBjb25zdCBkZWNvZGVyID0gSWNvbnYuZ2V0RGVjb2RlcihlbmNvZGluZywgb3B0aW9ucyB8fCB7fSk7XG5cbiAgY29uc3QgcmVzID0gZGVjb2Rlci53cml0ZShidWZmZXIuc2xpY2Uoc3RhcnQsIGVuZCkpO1xuICBjb25zdCB0cmFpbCA9IGRlY29kZXIuZW5kKCk7XG5cbiAgcmV0dXJuIHRyYWlsID8gcmVzICsgdHJhaWwgOiByZXM7XG59O1xuXG5leHBvcnRzLmVuY29kZSA9IGZ1bmN0aW9uKHN0cmluZywgZW5jb2RpbmcsIG9wdGlvbnMpIHtcbiAgaWYgKEJ1ZmZlci5pc0VuY29kaW5nKGVuY29kaW5nKSkge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbShzdHJpbmcsIGVuY29kaW5nKTtcbiAgfVxuXG4gIGNvbnN0IGVuY29kZXIgPSBJY29udi5nZXRFbmNvZGVyKGVuY29kaW5nLCBvcHRpb25zIHx8IHt9KTtcblxuICBjb25zdCByZXMgPSBlbmNvZGVyLndyaXRlKHN0cmluZyk7XG4gIGNvbnN0IHRyYWlsID0gZW5jb2Rlci5lbmQoKTtcblxuICByZXR1cm4gdHJhaWwgJiYgdHJhaWwubGVuZ3RoID4gMCA/IEJ1ZmZlci5jb25jYXQoW3JlcywgdHJhaWxdKSA6IHJlcztcbn07XG4iXSwibmFtZXMiOlsiSWNvbnYiLCJyZXF1aXJlIiwiZXhwb3J0cyIsImRlY29kZSIsImJ1ZmZlciIsImVuY29kaW5nIiwic3RhcnQiLCJlbmQiLCJvcHRpb25zIiwiQnVmZmVyIiwiaXNFbmNvZGluZyIsInRvU3RyaW5nIiwiZGVjb2RlciIsImdldERlY29kZXIiLCJyZXMiLCJ3cml0ZSIsInNsaWNlIiwidHJhaWwiLCJlbmNvZGUiLCJzdHJpbmciLCJmcm9tIiwiZW5jb2RlciIsImdldEVuY29kZXIiLCJsZW5ndGgiLCJjb25jYXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/parsers/string.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/parsers/text_parser.js":
/*!********************************************************!*\
  !*** ./node_modules/mysql2/lib/parsers/text_parser.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Types = __webpack_require__(/*! ../constants/types.js */ \"(rsc)/./node_modules/mysql2/lib/constants/types.js\");\nconst Charsets = __webpack_require__(/*! ../constants/charsets.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charsets.js\");\nconst helpers = __webpack_require__(/*! ../helpers */ \"(rsc)/./node_modules/mysql2/lib/helpers.js\");\nconst genFunc = __webpack_require__(/*! generate-function */ \"(rsc)/./node_modules/generate-function/index.js\");\nconst parserCache = __webpack_require__(/*! ./parser_cache.js */ \"(rsc)/./node_modules/mysql2/lib/parsers/parser_cache.js\");\nconst typeNames = [];\nfor(const t in Types){\n    typeNames[Types[t]] = t;\n}\nfunction readCodeFor(type, charset, encodingExpr, config, options) {\n    const supportBigNumbers = options.supportBigNumbers || config.supportBigNumbers;\n    const bigNumberStrings = options.bigNumberStrings || config.bigNumberStrings;\n    const timezone = options.timezone || config.timezone;\n    const dateStrings = options.dateStrings || config.dateStrings;\n    switch(type){\n        case Types.TINY:\n        case Types.SHORT:\n        case Types.LONG:\n        case Types.INT24:\n        case Types.YEAR:\n            return \"packet.parseLengthCodedIntNoBigCheck()\";\n        case Types.LONGLONG:\n            if (supportBigNumbers && bigNumberStrings) {\n                return \"packet.parseLengthCodedIntString()\";\n            }\n            return `packet.parseLengthCodedInt(${supportBigNumbers})`;\n        case Types.FLOAT:\n        case Types.DOUBLE:\n            return \"packet.parseLengthCodedFloat()\";\n        case Types.NULL:\n            return \"packet.readLengthCodedNumber()\";\n        case Types.DECIMAL:\n        case Types.NEWDECIMAL:\n            if (config.decimalNumbers) {\n                return \"packet.parseLengthCodedFloat()\";\n            }\n            return 'packet.readLengthCodedString(\"ascii\")';\n        case Types.DATE:\n            if (helpers.typeMatch(type, dateStrings, Types)) {\n                return 'packet.readLengthCodedString(\"ascii\")';\n            }\n            return `packet.parseDate('${timezone}')`;\n        case Types.DATETIME:\n        case Types.TIMESTAMP:\n            if (helpers.typeMatch(type, dateStrings, Types)) {\n                return 'packet.readLengthCodedString(\"ascii\")';\n            }\n            return `packet.parseDateTime('${timezone}')`;\n        case Types.TIME:\n            return 'packet.readLengthCodedString(\"ascii\")';\n        case Types.GEOMETRY:\n            return \"packet.parseGeometryValue()\";\n        case Types.JSON:\n            // Since for JSON columns mysql always returns charset 63 (BINARY),\n            // we have to handle it according to JSON specs and use \"utf8\",\n            // see https://github.com/sidorares/node-mysql2/issues/409\n            return 'JSON.parse(packet.readLengthCodedString(\"utf8\"))';\n        default:\n            if (charset === Charsets.BINARY) {\n                return \"packet.readLengthCodedBuffer()\";\n            }\n            return `packet.readLengthCodedString(${encodingExpr})`;\n    }\n}\nfunction compile(fields, options, config) {\n    // use global typeCast if current query doesn't specify one\n    if (typeof config.typeCast === \"function\" && typeof options.typeCast !== \"function\") {\n        options.typeCast = config.typeCast;\n    }\n    function wrap(field, _this) {\n        return {\n            type: typeNames[field.columnType],\n            length: field.columnLength,\n            db: field.schema,\n            table: field.table,\n            name: field.name,\n            string: function(encoding = field.encoding) {\n                if (field.columnType === Types.JSON && encoding === field.encoding) {\n                    // Since for JSON columns mysql always returns charset 63 (BINARY),\n                    // we have to handle it according to JSON specs and use \"utf8\",\n                    // see https://github.com/sidorares/node-mysql2/issues/1661\n                    console.warn(`typeCast: JSON column \"${field.name}\" is interpreted as BINARY by default, recommended to manually set utf8 encoding: \\`field.string(\"utf8\")\\``);\n                }\n                return _this.packet.readLengthCodedString(encoding);\n            },\n            buffer: function() {\n                return _this.packet.readLengthCodedBuffer();\n            },\n            geometry: function() {\n                return _this.packet.parseGeometryValue();\n            }\n        };\n    }\n    const parserFn = genFunc();\n    /* eslint-disable no-trailing-spaces */ /* eslint-disable no-spaced-func */ /* eslint-disable no-unexpected-multiline */ parserFn(\"(function () {\")(\"return class TextRow {\");\n    // constructor method\n    parserFn(\"constructor(fields) {\");\n    // node-mysql typeCast compatibility wrapper\n    // see https://github.com/mysqljs/mysql/blob/96fdd0566b654436624e2375c7b6604b1f50f825/lib/protocol/packets/Field.js\n    if (typeof options.typeCast === \"function\") {\n        parserFn(\"const _this = this;\");\n        parserFn(\"for(let i=0; i<fields.length; ++i) {\");\n        parserFn(\"this[`wrap${i}`] = wrap(fields[i], _this);\");\n        parserFn(\"}\");\n    }\n    parserFn(\"}\");\n    // next method\n    parserFn(\"next(packet, fields, options) {\");\n    parserFn(\"this.packet = packet;\");\n    if (options.rowsAsArray) {\n        parserFn(`const result = new Array(${fields.length});`);\n    } else {\n        parserFn(\"const result = {};\");\n    }\n    const resultTables = {};\n    let resultTablesArray = [];\n    if (options.nestTables === true) {\n        for(let i = 0; i < fields.length; i++){\n            resultTables[fields[i].table] = 1;\n        }\n        resultTablesArray = Object.keys(resultTables);\n        for(let i = 0; i < resultTablesArray.length; i++){\n            parserFn(`result[${helpers.srcEscape(resultTablesArray[i])}] = {};`);\n        }\n    }\n    let lvalue = \"\";\n    let fieldName = \"\";\n    for(let i = 0; i < fields.length; i++){\n        fieldName = helpers.srcEscape(fields[i].name);\n        parserFn(`// ${fieldName}: ${typeNames[fields[i].columnType]}`);\n        if (typeof options.nestTables === \"string\") {\n            lvalue = `result[${helpers.srcEscape(fields[i].table + options.nestTables + fields[i].name)}]`;\n        } else if (options.nestTables === true) {\n            lvalue = `result[${helpers.srcEscape(fields[i].table)}][${fieldName}]`;\n        } else if (options.rowsAsArray) {\n            lvalue = `result[${i.toString(10)}]`;\n        } else {\n            lvalue = `result[${fieldName}]`;\n        }\n        if (options.typeCast === false) {\n            parserFn(`${lvalue} = packet.readLengthCodedBuffer();`);\n        } else {\n            const encodingExpr = `fields[${i}].encoding`;\n            const readCode = readCodeFor(fields[i].columnType, fields[i].characterSet, encodingExpr, config, options);\n            if (typeof options.typeCast === \"function\") {\n                parserFn(`${lvalue} = options.typeCast(this.wrap${i}, function() { return ${readCode} });`);\n            } else {\n                parserFn(`${lvalue} = ${readCode};`);\n            }\n        }\n    }\n    parserFn(\"return result;\");\n    parserFn(\"}\");\n    parserFn(\"};\")(\"})()\");\n    /* eslint-enable no-trailing-spaces */ /* eslint-enable no-spaced-func */ /* eslint-enable no-unexpected-multiline */ if (config.debug) {\n        helpers.printDebugWithCode(\"Compiled text protocol row parser\", parserFn.toString());\n    }\n    if (typeof options.typeCast === \"function\") {\n        return parserFn.toFunction({\n            wrap\n        });\n    }\n    return parserFn.toFunction();\n}\nfunction getTextParser(fields, options, config) {\n    return parserCache.getParser(\"text\", fields, options, config, compile);\n}\nmodule.exports = getTextParser;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/parsers/text_parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/pool.js":
/*!*****************************************!*\
  !*** ./node_modules/mysql2/lib/pool.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst process = __webpack_require__(/*! process */ \"process\");\nconst mysql = __webpack_require__(/*! ../index.js */ \"(rsc)/./node_modules/mysql2/index.js\");\nconst EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter);\nconst PoolConnection = __webpack_require__(/*! ./pool_connection.js */ \"(rsc)/./node_modules/mysql2/lib/pool_connection.js\");\nconst Queue = __webpack_require__(/*! denque */ \"(rsc)/./node_modules/denque/index.js\");\nconst Connection = __webpack_require__(/*! ./connection.js */ \"(rsc)/./node_modules/mysql2/lib/connection.js\");\nfunction spliceConnection(queue, connection) {\n    const len = queue.length;\n    for(let i = 0; i < len; i++){\n        if (queue.get(i) === connection) {\n            queue.removeOne(i);\n            break;\n        }\n    }\n}\nclass Pool extends EventEmitter {\n    constructor(options){\n        super();\n        this.config = options.config;\n        this.config.connectionConfig.pool = this;\n        this._allConnections = new Queue();\n        this._freeConnections = new Queue();\n        this._connectionQueue = new Queue();\n        this._closed = false;\n        if (this.config.maxIdle < this.config.connectionLimit) {\n            // create idle connection timeout automatically release job\n            this._removeIdleTimeoutConnections();\n        }\n    }\n    promise(promiseImpl) {\n        const PromisePool = (__webpack_require__(/*! ../promise */ \"(rsc)/./node_modules/mysql2/promise.js\").PromisePool);\n        return new PromisePool(this, promiseImpl);\n    }\n    getConnection(cb) {\n        if (this._closed) {\n            return process.nextTick(()=>cb(new Error(\"Pool is closed.\")));\n        }\n        let connection;\n        if (this._freeConnections.length > 0) {\n            connection = this._freeConnections.pop();\n            this.emit(\"acquire\", connection);\n            return process.nextTick(()=>cb(null, connection));\n        }\n        if (this.config.connectionLimit === 0 || this._allConnections.length < this.config.connectionLimit) {\n            connection = new PoolConnection(this, {\n                config: this.config.connectionConfig\n            });\n            this._allConnections.push(connection);\n            return connection.connect((err)=>{\n                if (this._closed) {\n                    return cb(new Error(\"Pool is closed.\"));\n                }\n                if (err) {\n                    return cb(err);\n                }\n                this.emit(\"connection\", connection);\n                this.emit(\"acquire\", connection);\n                return cb(null, connection);\n            });\n        }\n        if (!this.config.waitForConnections) {\n            return process.nextTick(()=>cb(new Error(\"No connections available.\")));\n        }\n        if (this.config.queueLimit && this._connectionQueue.length >= this.config.queueLimit) {\n            return cb(new Error(\"Queue limit reached.\"));\n        }\n        this.emit(\"enqueue\");\n        return this._connectionQueue.push(cb);\n    }\n    releaseConnection(connection) {\n        let cb;\n        if (!connection._pool) {\n            // The connection has been removed from the pool and is no longer good.\n            if (this._connectionQueue.length) {\n                cb = this._connectionQueue.shift();\n                process.nextTick(this.getConnection.bind(this, cb));\n            }\n        } else if (this._connectionQueue.length) {\n            cb = this._connectionQueue.shift();\n            process.nextTick(cb.bind(null, null, connection));\n        } else {\n            this._freeConnections.push(connection);\n            this.emit(\"release\", connection);\n        }\n    }\n    end(cb) {\n        this._closed = true;\n        if (typeof cb !== \"function\") {\n            cb = function(err) {\n                if (err) {\n                    throw err;\n                }\n            };\n        }\n        let calledBack = false;\n        let closedConnections = 0;\n        let connection;\n        const endCB = (function(err) {\n            if (calledBack) {\n                return;\n            }\n            if (err || ++closedConnections >= this._allConnections.length) {\n                calledBack = true;\n                cb(err);\n                return;\n            }\n        }).bind(this);\n        if (this._allConnections.length === 0) {\n            endCB();\n            return;\n        }\n        for(let i = 0; i < this._allConnections.length; i++){\n            connection = this._allConnections.get(i);\n            connection._realEnd(endCB);\n        }\n    }\n    query(sql, values, cb) {\n        const cmdQuery = Connection.createQuery(sql, values, cb, this.config.connectionConfig);\n        if (typeof cmdQuery.namedPlaceholders === \"undefined\") {\n            cmdQuery.namedPlaceholders = this.config.connectionConfig.namedPlaceholders;\n        }\n        this.getConnection((err, conn)=>{\n            if (err) {\n                if (typeof cmdQuery.onResult === \"function\") {\n                    cmdQuery.onResult(err);\n                } else {\n                    cmdQuery.emit(\"error\", err);\n                }\n                return;\n            }\n            try {\n                conn.query(cmdQuery).once(\"end\", ()=>{\n                    conn.release();\n                });\n            } catch (e) {\n                conn.release();\n                throw e;\n            }\n        });\n        return cmdQuery;\n    }\n    execute(sql, values, cb) {\n        // TODO construct execute command first here and pass it to connection.execute\n        // so that polymorphic arguments logic is there in one place\n        if (typeof values === \"function\") {\n            cb = values;\n            values = [];\n        }\n        this.getConnection((err, conn)=>{\n            if (err) {\n                return cb(err);\n            }\n            try {\n                conn.execute(sql, values, cb).once(\"end\", ()=>{\n                    conn.release();\n                });\n            } catch (e) {\n                conn.release();\n                return cb(e);\n            }\n        });\n    }\n    _removeConnection(connection) {\n        // Remove connection from all connections\n        spliceConnection(this._allConnections, connection);\n        // Remove connection from free connections\n        spliceConnection(this._freeConnections, connection);\n        this.releaseConnection(connection);\n    }\n    _removeIdleTimeoutConnections() {\n        if (this._removeIdleTimeoutConnectionsTimer) {\n            clearTimeout(this._removeIdleTimeoutConnectionsTimer);\n        }\n        this._removeIdleTimeoutConnectionsTimer = setTimeout(()=>{\n            try {\n                while(this._freeConnections.length > this.config.maxIdle && Date.now() - this._freeConnections.get(0).lastActiveTime > this.config.idleTimeout){\n                    this._freeConnections.get(0).destroy();\n                }\n            } finally{\n                this._removeIdleTimeoutConnections();\n            }\n        }, 1000);\n    }\n    format(sql, values) {\n        return mysql.format(sql, values, this.config.connectionConfig.stringifyObjects, this.config.connectionConfig.timezone);\n    }\n    escape(value) {\n        return mysql.escape(value, this.config.connectionConfig.stringifyObjects, this.config.connectionConfig.timezone);\n    }\n    escapeId(value) {\n        return mysql.escapeId(value, false);\n    }\n}\nmodule.exports = Pool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/pool.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/pool_cluster.js":
/*!*************************************************!*\
  !*** ./node_modules/mysql2/lib/pool_cluster.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst process = __webpack_require__(/*! process */ \"process\");\nconst Pool = __webpack_require__(/*! ./pool.js */ \"(rsc)/./node_modules/mysql2/lib/pool.js\");\nconst PoolConfig = __webpack_require__(/*! ./pool_config.js */ \"(rsc)/./node_modules/mysql2/lib/pool_config.js\");\nconst Connection = __webpack_require__(/*! ./connection.js */ \"(rsc)/./node_modules/mysql2/lib/connection.js\");\nconst EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter);\n/**\n * Selector\n */ const makeSelector = {\n    RR () {\n        let index = 0;\n        return (clusterIds)=>clusterIds[index++ % clusterIds.length];\n    },\n    RANDOM () {\n        return (clusterIds)=>clusterIds[Math.floor(Math.random() * clusterIds.length)];\n    },\n    ORDER () {\n        return (clusterIds)=>clusterIds[0];\n    }\n};\nclass PoolNamespace {\n    constructor(cluster, pattern, selector){\n        this._cluster = cluster;\n        this._pattern = pattern;\n        this._selector = makeSelector[selector]();\n    }\n    getConnection(cb) {\n        const clusterNode = this._getClusterNode();\n        if (clusterNode === null) {\n            return cb(new Error(\"Pool does Not exists.\"));\n        }\n        return this._cluster._getConnection(clusterNode, (err, connection)=>{\n            if (err) {\n                return cb(err);\n            }\n            if (connection === \"retry\") {\n                return this.getConnection(cb);\n            }\n            return cb(null, connection);\n        });\n    }\n    /**\n   * pool cluster query\n   * @param {*} sql\n   * @param {*} values\n   * @param {*} cb\n   * @returns query\n   */ query(sql, values, cb) {\n        const query = Connection.createQuery(sql, values, cb, {});\n        this.getConnection((err, conn)=>{\n            if (err) {\n                if (typeof query.onResult === \"function\") {\n                    query.onResult(err);\n                } else {\n                    query.emit(\"error\", err);\n                }\n                return;\n            }\n            try {\n                conn.query(query).once(\"end\", ()=>{\n                    conn.release();\n                });\n            } catch (e) {\n                conn.release();\n                throw e;\n            }\n        });\n        return query;\n    }\n    /**\n   * pool cluster execute\n   * @param {*} sql \n   * @param {*} values \n   * @param {*} cb \n   */ execute(sql, values, cb) {\n        if (typeof values === \"function\") {\n            cb = values;\n            values = [];\n        }\n        this.getConnection((err, conn)=>{\n            if (err) {\n                return cb(err);\n            }\n            try {\n                conn.execute(sql, values, cb).once(\"end\", ()=>{\n                    conn.release();\n                });\n            } catch (e) {\n                conn.release();\n                throw e;\n            }\n        });\n    }\n    _getClusterNode() {\n        const foundNodeIds = this._cluster._findNodeIds(this._pattern);\n        if (foundNodeIds.length === 0) {\n            return null;\n        }\n        const nodeId = foundNodeIds.length === 1 ? foundNodeIds[0] : this._selector(foundNodeIds);\n        return this._cluster._getNode(nodeId);\n    }\n}\nclass PoolCluster extends EventEmitter {\n    constructor(config){\n        super();\n        config = config || {};\n        this._canRetry = typeof config.canRetry === \"undefined\" ? true : config.canRetry;\n        this._removeNodeErrorCount = config.removeNodeErrorCount || 5;\n        this._defaultSelector = config.defaultSelector || \"RR\";\n        this._closed = false;\n        this._lastId = 0;\n        this._nodes = {};\n        this._serviceableNodeIds = [];\n        this._namespaces = {};\n        this._findCaches = {};\n    }\n    of(pattern, selector) {\n        pattern = pattern || \"*\";\n        selector = selector || this._defaultSelector;\n        selector = selector.toUpperCase();\n        if (!makeSelector[selector] === \"undefined\") {\n            selector = this._defaultSelector;\n        }\n        const key = pattern + selector;\n        if (typeof this._namespaces[key] === \"undefined\") {\n            this._namespaces[key] = new PoolNamespace(this, pattern, selector);\n        }\n        return this._namespaces[key];\n    }\n    add(id, config) {\n        if (typeof id === \"object\") {\n            config = id;\n            id = `CLUSTER::${++this._lastId}`;\n        }\n        if (typeof this._nodes[id] === \"undefined\") {\n            this._nodes[id] = {\n                id: id,\n                errorCount: 0,\n                pool: new Pool({\n                    config: new PoolConfig(config)\n                })\n            };\n            this._serviceableNodeIds.push(id);\n            this._clearFindCaches();\n        }\n    }\n    getConnection(pattern, selector, cb) {\n        let namespace;\n        if (typeof pattern === \"function\") {\n            cb = pattern;\n            namespace = this.of();\n        } else {\n            if (typeof selector === \"function\") {\n                cb = selector;\n                selector = this._defaultSelector;\n            }\n            namespace = this.of(pattern, selector);\n        }\n        namespace.getConnection(cb);\n    }\n    end(callback) {\n        const cb = callback !== undefined ? callback : (err)=>{\n            if (err) {\n                throw err;\n            }\n        };\n        if (this._closed) {\n            process.nextTick(cb);\n            return;\n        }\n        this._closed = true;\n        let calledBack = false;\n        let waitingClose = 0;\n        const onEnd = (err)=>{\n            if (!calledBack && (err || --waitingClose <= 0)) {\n                calledBack = true;\n                return cb(err);\n            }\n        };\n        for(const id in this._nodes){\n            waitingClose++;\n            this._nodes[id].pool.end(onEnd);\n        }\n        if (waitingClose === 0) {\n            process.nextTick(onEnd);\n        }\n    }\n    _findNodeIds(pattern) {\n        if (typeof this._findCaches[pattern] !== \"undefined\") {\n            return this._findCaches[pattern];\n        }\n        let foundNodeIds;\n        if (pattern === \"*\") {\n            // all\n            foundNodeIds = this._serviceableNodeIds;\n        } else if (this._serviceableNodeIds.indexOf(pattern) !== -1) {\n            // one\n            foundNodeIds = [\n                pattern\n            ];\n        } else {\n            // wild matching\n            const keyword = pattern.substring(pattern.length - 1, 0);\n            foundNodeIds = this._serviceableNodeIds.filter((id)=>id.startsWith(keyword));\n        }\n        this._findCaches[pattern] = foundNodeIds;\n        return foundNodeIds;\n    }\n    _getNode(id) {\n        return this._nodes[id] || null;\n    }\n    _increaseErrorCount(node) {\n        if (++node.errorCount >= this._removeNodeErrorCount) {\n            const index = this._serviceableNodeIds.indexOf(node.id);\n            if (index !== -1) {\n                this._serviceableNodeIds.splice(index, 1);\n                delete this._nodes[node.id];\n                this._clearFindCaches();\n                node.pool.end();\n                this.emit(\"remove\", node.id);\n            }\n        }\n    }\n    _decreaseErrorCount(node) {\n        if (node.errorCount > 0) {\n            --node.errorCount;\n        }\n    }\n    _getConnection(node, cb) {\n        node.pool.getConnection((err, connection)=>{\n            if (err) {\n                this._increaseErrorCount(node);\n                if (this._canRetry) {\n                    // REVIEW: this seems wrong?\n                    this.emit(\"warn\", err);\n                    // eslint-disable-next-line no-console\n                    console.warn(`[Error] PoolCluster : ${err}`);\n                    return cb(null, \"retry\");\n                }\n                return cb(err);\n            }\n            this._decreaseErrorCount(node);\n            connection._clusterId = node.id;\n            return cb(null, connection);\n        });\n    }\n    _clearFindCaches() {\n        this._findCaches = {};\n    }\n}\nmodule.exports = PoolCluster;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/pool_cluster.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/pool_config.js":
/*!************************************************!*\
  !*** ./node_modules/mysql2/lib/pool_config.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst ConnectionConfig = __webpack_require__(/*! ./connection_config.js */ \"(rsc)/./node_modules/mysql2/lib/connection_config.js\");\nclass PoolConfig {\n    constructor(options){\n        if (typeof options === \"string\") {\n            options = ConnectionConfig.parseUrl(options);\n        }\n        this.connectionConfig = new ConnectionConfig(options);\n        this.waitForConnections = options.waitForConnections === undefined ? true : Boolean(options.waitForConnections);\n        this.connectionLimit = isNaN(options.connectionLimit) ? 10 : Number(options.connectionLimit);\n        this.maxIdle = isNaN(options.maxIdle) ? this.connectionLimit : Number(options.maxIdle);\n        this.idleTimeout = isNaN(options.idleTimeout) ? 60000 : Number(options.idleTimeout);\n        this.queueLimit = isNaN(options.queueLimit) ? 0 : Number(options.queueLimit);\n    }\n}\nmodule.exports = PoolConfig;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wb29sX2NvbmZpZy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU1BLG1CQUFtQkMsbUJBQU9BLENBQUM7QUFFakMsTUFBTUM7SUFDSkMsWUFBWUMsT0FBTyxDQUFFO1FBQ25CLElBQUksT0FBT0EsWUFBWSxVQUFVO1lBQy9CQSxVQUFVSixpQkFBaUJLLFFBQVEsQ0FBQ0Q7UUFDdEM7UUFDQSxJQUFJLENBQUNFLGdCQUFnQixHQUFHLElBQUlOLGlCQUFpQkk7UUFDN0MsSUFBSSxDQUFDRyxrQkFBa0IsR0FDckJILFFBQVFHLGtCQUFrQixLQUFLQyxZQUMzQixPQUNBQyxRQUFRTCxRQUFRRyxrQkFBa0I7UUFDeEMsSUFBSSxDQUFDRyxlQUFlLEdBQUdDLE1BQU1QLFFBQVFNLGVBQWUsSUFDaEQsS0FDQUUsT0FBT1IsUUFBUU0sZUFBZTtRQUNsQyxJQUFJLENBQUNHLE9BQU8sR0FBR0YsTUFBTVAsUUFBUVMsT0FBTyxJQUNoQyxJQUFJLENBQUNILGVBQWUsR0FDcEJFLE9BQU9SLFFBQVFTLE9BQU87UUFDMUIsSUFBSSxDQUFDQyxXQUFXLEdBQUdILE1BQU1QLFFBQVFVLFdBQVcsSUFDeEMsUUFDQUYsT0FBT1IsUUFBUVUsV0FBVztRQUM5QixJQUFJLENBQUNDLFVBQVUsR0FBR0osTUFBTVAsUUFBUVcsVUFBVSxJQUN0QyxJQUNBSCxPQUFPUixRQUFRVyxVQUFVO0lBQy9CO0FBQ0Y7QUFFQUMsT0FBT0MsT0FBTyxHQUFHZiIsInNvdXJjZXMiOlsid2VicGFjazovL2FjZWUtcHJvdG8tb25lLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcG9vbF9jb25maWcuanM/OTFlMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IENvbm5lY3Rpb25Db25maWcgPSByZXF1aXJlKCcuL2Nvbm5lY3Rpb25fY29uZmlnLmpzJyk7XG5cbmNsYXNzIFBvb2xDb25maWcge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnc3RyaW5nJykge1xuICAgICAgb3B0aW9ucyA9IENvbm5lY3Rpb25Db25maWcucGFyc2VVcmwob3B0aW9ucyk7XG4gICAgfVxuICAgIHRoaXMuY29ubmVjdGlvbkNvbmZpZyA9IG5ldyBDb25uZWN0aW9uQ29uZmlnKG9wdGlvbnMpO1xuICAgIHRoaXMud2FpdEZvckNvbm5lY3Rpb25zID1cbiAgICAgIG9wdGlvbnMud2FpdEZvckNvbm5lY3Rpb25zID09PSB1bmRlZmluZWRcbiAgICAgICAgPyB0cnVlXG4gICAgICAgIDogQm9vbGVhbihvcHRpb25zLndhaXRGb3JDb25uZWN0aW9ucyk7XG4gICAgdGhpcy5jb25uZWN0aW9uTGltaXQgPSBpc05hTihvcHRpb25zLmNvbm5lY3Rpb25MaW1pdClcbiAgICAgID8gMTBcbiAgICAgIDogTnVtYmVyKG9wdGlvbnMuY29ubmVjdGlvbkxpbWl0KTtcbiAgICB0aGlzLm1heElkbGUgPSBpc05hTihvcHRpb25zLm1heElkbGUpXG4gICAgICA/IHRoaXMuY29ubmVjdGlvbkxpbWl0XG4gICAgICA6IE51bWJlcihvcHRpb25zLm1heElkbGUpO1xuICAgIHRoaXMuaWRsZVRpbWVvdXQgPSBpc05hTihvcHRpb25zLmlkbGVUaW1lb3V0KVxuICAgICAgPyA2MDAwMFxuICAgICAgOiBOdW1iZXIob3B0aW9ucy5pZGxlVGltZW91dCk7XG4gICAgdGhpcy5xdWV1ZUxpbWl0ID0gaXNOYU4ob3B0aW9ucy5xdWV1ZUxpbWl0KVxuICAgICAgPyAwXG4gICAgICA6IE51bWJlcihvcHRpb25zLnF1ZXVlTGltaXQpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gUG9vbENvbmZpZztcbiJdLCJuYW1lcyI6WyJDb25uZWN0aW9uQ29uZmlnIiwicmVxdWlyZSIsIlBvb2xDb25maWciLCJjb25zdHJ1Y3RvciIsIm9wdGlvbnMiLCJwYXJzZVVybCIsImNvbm5lY3Rpb25Db25maWciLCJ3YWl0Rm9yQ29ubmVjdGlvbnMiLCJ1bmRlZmluZWQiLCJCb29sZWFuIiwiY29ubmVjdGlvbkxpbWl0IiwiaXNOYU4iLCJOdW1iZXIiLCJtYXhJZGxlIiwiaWRsZVRpbWVvdXQiLCJxdWV1ZUxpbWl0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/pool_config.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/pool_connection.js":
/*!****************************************************!*\
  !*** ./node_modules/mysql2/lib/pool_connection.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Connection = (__webpack_require__(/*! ../index.js */ \"(rsc)/./node_modules/mysql2/index.js\").Connection);\nclass PoolConnection extends Connection {\n    constructor(pool, options){\n        super(options);\n        this._pool = pool;\n        // The last active time of this connection\n        this.lastActiveTime = Date.now();\n        // When a fatal error occurs the connection's protocol ends, which will cause\n        // the connection to end as well, thus we only need to watch for the end event\n        // and we will be notified of disconnects.\n        // REVIEW: Moved to `once`\n        this.once(\"end\", ()=>{\n            this._removeFromPool();\n        });\n        this.once(\"error\", ()=>{\n            this._removeFromPool();\n        });\n    }\n    release() {\n        if (!this._pool || this._pool._closed) {\n            return;\n        }\n        // update last active time\n        this.lastActiveTime = Date.now();\n        this._pool.releaseConnection(this);\n    }\n    promise(promiseImpl) {\n        const PromisePoolConnection = (__webpack_require__(/*! ../promise */ \"(rsc)/./node_modules/mysql2/promise.js\").PromisePoolConnection);\n        return new PromisePoolConnection(this, promiseImpl);\n    }\n    end() {\n        const err = new Error(\"Calling conn.end() to release a pooled connection is \" + \"deprecated. In next version calling conn.end() will be \" + \"restored to default conn.end() behavior. Use \" + \"conn.release() instead.\");\n        this.emit(\"warn\", err);\n        // eslint-disable-next-line no-console\n        console.warn(err.message);\n        this.release();\n    }\n    destroy() {\n        this._removeFromPool();\n        super.destroy();\n    }\n    _removeFromPool() {\n        if (!this._pool || this._pool._closed) {\n            return;\n        }\n        const pool = this._pool;\n        this._pool = null;\n        pool._removeConnection(this);\n    }\n}\nPoolConnection.statementKey = Connection.statementKey;\nmodule.exports = PoolConnection;\n// TODO: Remove this when we are removing PoolConnection#end\nPoolConnection.prototype._realEnd = Connection.prototype.end;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wb29sX2Nvbm5lY3Rpb24uanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxhQUFhQywyRkFBaUM7QUFFcEQsTUFBTUMsdUJBQXVCRjtJQUMzQkcsWUFBWUMsSUFBSSxFQUFFQyxPQUFPLENBQUU7UUFDekIsS0FBSyxDQUFDQTtRQUNOLElBQUksQ0FBQ0MsS0FBSyxHQUFHRjtRQUNiLDBDQUEwQztRQUMxQyxJQUFJLENBQUNHLGNBQWMsR0FBR0MsS0FBS0MsR0FBRztRQUM5Qiw2RUFBNkU7UUFDN0UsOEVBQThFO1FBQzlFLDBDQUEwQztRQUMxQywwQkFBMEI7UUFDMUIsSUFBSSxDQUFDQyxJQUFJLENBQUMsT0FBTztZQUNmLElBQUksQ0FBQ0MsZUFBZTtRQUN0QjtRQUNBLElBQUksQ0FBQ0QsSUFBSSxDQUFDLFNBQVM7WUFDakIsSUFBSSxDQUFDQyxlQUFlO1FBQ3RCO0lBQ0Y7SUFFQUMsVUFBVTtRQUNSLElBQUksQ0FBQyxJQUFJLENBQUNOLEtBQUssSUFBSSxJQUFJLENBQUNBLEtBQUssQ0FBQ08sT0FBTyxFQUFFO1lBQ3JDO1FBQ0Y7UUFDQSwwQkFBMEI7UUFDMUIsSUFBSSxDQUFDTixjQUFjLEdBQUdDLEtBQUtDLEdBQUc7UUFDOUIsSUFBSSxDQUFDSCxLQUFLLENBQUNRLGlCQUFpQixDQUFDLElBQUk7SUFDbkM7SUFFQUMsUUFBUUMsV0FBVyxFQUFFO1FBQ25CLE1BQU1DLHdCQUF3QmhCLHVHQUEyQztRQUN6RSxPQUFPLElBQUlnQixzQkFBc0IsSUFBSSxFQUFFRDtJQUN6QztJQUVBRSxNQUFNO1FBQ0osTUFBTUMsTUFBTSxJQUFJQyxNQUNkLDBEQUNFLDREQUNBLGtEQUNBO1FBRUosSUFBSSxDQUFDQyxJQUFJLENBQUMsUUFBUUY7UUFDbEIsc0NBQXNDO1FBQ3RDRyxRQUFRQyxJQUFJLENBQUNKLElBQUlLLE9BQU87UUFDeEIsSUFBSSxDQUFDWixPQUFPO0lBQ2Q7SUFFQWEsVUFBVTtRQUNSLElBQUksQ0FBQ2QsZUFBZTtRQUNwQixLQUFLLENBQUNjO0lBQ1I7SUFFQWQsa0JBQWtCO1FBQ2hCLElBQUksQ0FBQyxJQUFJLENBQUNMLEtBQUssSUFBSSxJQUFJLENBQUNBLEtBQUssQ0FBQ08sT0FBTyxFQUFFO1lBQ3JDO1FBQ0Y7UUFDQSxNQUFNVCxPQUFPLElBQUksQ0FBQ0UsS0FBSztRQUN2QixJQUFJLENBQUNBLEtBQUssR0FBRztRQUNiRixLQUFLc0IsaUJBQWlCLENBQUMsSUFBSTtJQUM3QjtBQUNGO0FBRUF4QixlQUFleUIsWUFBWSxHQUFHM0IsV0FBVzJCLFlBQVk7QUFDckRDLE9BQU9DLE9BQU8sR0FBRzNCO0FBRWpCLDREQUE0RDtBQUM1REEsZUFBZTRCLFNBQVMsQ0FBQ0MsUUFBUSxHQUFHL0IsV0FBVzhCLFNBQVMsQ0FBQ1osR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL2FjZWUtcHJvdG8tb25lLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcG9vbF9jb25uZWN0aW9uLmpzP2I0ZDYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBDb25uZWN0aW9uID0gcmVxdWlyZSgnLi4vaW5kZXguanMnKS5Db25uZWN0aW9uO1xuXG5jbGFzcyBQb29sQ29ubmVjdGlvbiBleHRlbmRzIENvbm5lY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcihwb29sLCBvcHRpb25zKSB7XG4gICAgc3VwZXIob3B0aW9ucyk7XG4gICAgdGhpcy5fcG9vbCA9IHBvb2w7XG4gICAgLy8gVGhlIGxhc3QgYWN0aXZlIHRpbWUgb2YgdGhpcyBjb25uZWN0aW9uXG4gICAgdGhpcy5sYXN0QWN0aXZlVGltZSA9IERhdGUubm93KCk7XG4gICAgLy8gV2hlbiBhIGZhdGFsIGVycm9yIG9jY3VycyB0aGUgY29ubmVjdGlvbidzIHByb3RvY29sIGVuZHMsIHdoaWNoIHdpbGwgY2F1c2VcbiAgICAvLyB0aGUgY29ubmVjdGlvbiB0byBlbmQgYXMgd2VsbCwgdGh1cyB3ZSBvbmx5IG5lZWQgdG8gd2F0Y2ggZm9yIHRoZSBlbmQgZXZlbnRcbiAgICAvLyBhbmQgd2Ugd2lsbCBiZSBub3RpZmllZCBvZiBkaXNjb25uZWN0cy5cbiAgICAvLyBSRVZJRVc6IE1vdmVkIHRvIGBvbmNlYFxuICAgIHRoaXMub25jZSgnZW5kJywgKCkgPT4ge1xuICAgICAgdGhpcy5fcmVtb3ZlRnJvbVBvb2woKTtcbiAgICB9KTtcbiAgICB0aGlzLm9uY2UoJ2Vycm9yJywgKCkgPT4ge1xuICAgICAgdGhpcy5fcmVtb3ZlRnJvbVBvb2woKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJlbGVhc2UoKSB7XG4gICAgaWYgKCF0aGlzLl9wb29sIHx8IHRoaXMuX3Bvb2wuX2Nsb3NlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvLyB1cGRhdGUgbGFzdCBhY3RpdmUgdGltZVxuICAgIHRoaXMubGFzdEFjdGl2ZVRpbWUgPSBEYXRlLm5vdygpO1xuICAgIHRoaXMuX3Bvb2wucmVsZWFzZUNvbm5lY3Rpb24odGhpcyk7XG4gIH1cblxuICBwcm9taXNlKHByb21pc2VJbXBsKSB7XG4gICAgY29uc3QgUHJvbWlzZVBvb2xDb25uZWN0aW9uID0gcmVxdWlyZSgnLi4vcHJvbWlzZScpLlByb21pc2VQb29sQ29ubmVjdGlvbjtcbiAgICByZXR1cm4gbmV3IFByb21pc2VQb29sQ29ubmVjdGlvbih0aGlzLCBwcm9taXNlSW1wbCk7XG4gIH1cblxuICBlbmQoKSB7XG4gICAgY29uc3QgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgY29ubi5lbmQoKSB0byByZWxlYXNlIGEgcG9vbGVkIGNvbm5lY3Rpb24gaXMgJyArXG4gICAgICAgICdkZXByZWNhdGVkLiBJbiBuZXh0IHZlcnNpb24gY2FsbGluZyBjb25uLmVuZCgpIHdpbGwgYmUgJyArXG4gICAgICAgICdyZXN0b3JlZCB0byBkZWZhdWx0IGNvbm4uZW5kKCkgYmVoYXZpb3IuIFVzZSAnICtcbiAgICAgICAgJ2Nvbm4ucmVsZWFzZSgpIGluc3RlYWQuJ1xuICAgICk7XG4gICAgdGhpcy5lbWl0KCd3YXJuJywgZXJyKTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgIGNvbnNvbGUud2FybihlcnIubWVzc2FnZSk7XG4gICAgdGhpcy5yZWxlYXNlKCk7XG4gIH1cblxuICBkZXN0cm95KCkge1xuICAgIHRoaXMuX3JlbW92ZUZyb21Qb29sKCk7XG4gICAgc3VwZXIuZGVzdHJveSgpO1xuICB9XG5cbiAgX3JlbW92ZUZyb21Qb29sKCkge1xuICAgIGlmICghdGhpcy5fcG9vbCB8fCB0aGlzLl9wb29sLl9jbG9zZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgcG9vbCA9IHRoaXMuX3Bvb2w7XG4gICAgdGhpcy5fcG9vbCA9IG51bGw7XG4gICAgcG9vbC5fcmVtb3ZlQ29ubmVjdGlvbih0aGlzKTtcbiAgfVxufVxuXG5Qb29sQ29ubmVjdGlvbi5zdGF0ZW1lbnRLZXkgPSBDb25uZWN0aW9uLnN0YXRlbWVudEtleTtcbm1vZHVsZS5leHBvcnRzID0gUG9vbENvbm5lY3Rpb247XG5cbi8vIFRPRE86IFJlbW92ZSB0aGlzIHdoZW4gd2UgYXJlIHJlbW92aW5nIFBvb2xDb25uZWN0aW9uI2VuZFxuUG9vbENvbm5lY3Rpb24ucHJvdG90eXBlLl9yZWFsRW5kID0gQ29ubmVjdGlvbi5wcm90b3R5cGUuZW5kO1xuIl0sIm5hbWVzIjpbIkNvbm5lY3Rpb24iLCJyZXF1aXJlIiwiUG9vbENvbm5lY3Rpb24iLCJjb25zdHJ1Y3RvciIsInBvb2wiLCJvcHRpb25zIiwiX3Bvb2wiLCJsYXN0QWN0aXZlVGltZSIsIkRhdGUiLCJub3ciLCJvbmNlIiwiX3JlbW92ZUZyb21Qb29sIiwicmVsZWFzZSIsIl9jbG9zZWQiLCJyZWxlYXNlQ29ubmVjdGlvbiIsInByb21pc2UiLCJwcm9taXNlSW1wbCIsIlByb21pc2VQb29sQ29ubmVjdGlvbiIsImVuZCIsImVyciIsIkVycm9yIiwiZW1pdCIsImNvbnNvbGUiLCJ3YXJuIiwibWVzc2FnZSIsImRlc3Ryb3kiLCJfcmVtb3ZlQ29ubmVjdGlvbiIsInN0YXRlbWVudEtleSIsIm1vZHVsZSIsImV4cG9ydHMiLCJwcm90b3R5cGUiLCJfcmVhbEVuZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/pool_connection.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/server.js":
/*!*******************************************!*\
  !*** ./node_modules/mysql2/lib/server.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst net = __webpack_require__(/*! net */ \"net\");\nconst EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter);\nconst Connection = __webpack_require__(/*! ./connection */ \"(rsc)/./node_modules/mysql2/lib/connection.js\");\nconst ConnectionConfig = __webpack_require__(/*! ./connection_config */ \"(rsc)/./node_modules/mysql2/lib/connection_config.js\");\n// TODO: inherit Server from net.Server\nclass Server extends EventEmitter {\n    constructor(){\n        super();\n        this.connections = [];\n        this._server = net.createServer(this._handleConnection.bind(this));\n    }\n    _handleConnection(socket) {\n        const connectionConfig = new ConnectionConfig({\n            stream: socket,\n            isServer: true\n        });\n        const connection = new Connection({\n            config: connectionConfig\n        });\n        this.emit(\"connection\", connection);\n    }\n    listen(port) {\n        this._port = port;\n        this._server.listen.apply(this._server, arguments);\n        return this;\n    }\n    close(cb) {\n        this._server.close(cb);\n    }\n}\nmodule.exports = Server;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9zZXJ2ZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxNQUFNQyxtQkFBT0EsQ0FBQztBQUNwQixNQUFNQyxlQUFlRCwwREFBOEI7QUFFbkQsTUFBTUUsYUFBYUYsbUJBQU9BLENBQUM7QUFDM0IsTUFBTUcsbUJBQW1CSCxtQkFBT0EsQ0FBQztBQUVqQyx1Q0FBdUM7QUFDdkMsTUFBTUksZUFBZUg7SUFDbkJJLGFBQWM7UUFDWixLQUFLO1FBQ0wsSUFBSSxDQUFDQyxXQUFXLEdBQUcsRUFBRTtRQUNyQixJQUFJLENBQUNDLE9BQU8sR0FBR1IsSUFBSVMsWUFBWSxDQUFDLElBQUksQ0FBQ0MsaUJBQWlCLENBQUNDLElBQUksQ0FBQyxJQUFJO0lBQ2xFO0lBRUFELGtCQUFrQkUsTUFBTSxFQUFFO1FBQ3hCLE1BQU1DLG1CQUFtQixJQUFJVCxpQkFBaUI7WUFDNUNVLFFBQVFGO1lBQ1JHLFVBQVU7UUFDWjtRQUNBLE1BQU1DLGFBQWEsSUFBSWIsV0FBVztZQUFFYyxRQUFRSjtRQUFpQjtRQUM3RCxJQUFJLENBQUNLLElBQUksQ0FBQyxjQUFjRjtJQUMxQjtJQUVBRyxPQUFPQyxJQUFJLEVBQUU7UUFDWCxJQUFJLENBQUNDLEtBQUssR0FBR0Q7UUFDYixJQUFJLENBQUNaLE9BQU8sQ0FBQ1csTUFBTSxDQUFDRyxLQUFLLENBQUMsSUFBSSxDQUFDZCxPQUFPLEVBQUVlO1FBQ3hDLE9BQU8sSUFBSTtJQUNiO0lBRUFDLE1BQU1DLEVBQUUsRUFBRTtRQUNSLElBQUksQ0FBQ2pCLE9BQU8sQ0FBQ2dCLEtBQUssQ0FBQ0M7SUFDckI7QUFDRjtBQUVBQyxPQUFPQyxPQUFPLEdBQUd0QiIsInNvdXJjZXMiOlsid2VicGFjazovL2FjZWUtcHJvdG8tb25lLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvc2VydmVyLmpzP2JjOTIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBuZXQgPSByZXF1aXJlKCduZXQnKTtcbmNvbnN0IEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlcjtcblxuY29uc3QgQ29ubmVjdGlvbiA9IHJlcXVpcmUoJy4vY29ubmVjdGlvbicpO1xuY29uc3QgQ29ubmVjdGlvbkNvbmZpZyA9IHJlcXVpcmUoJy4vY29ubmVjdGlvbl9jb25maWcnKTtcblxuLy8gVE9ETzogaW5oZXJpdCBTZXJ2ZXIgZnJvbSBuZXQuU2VydmVyXG5jbGFzcyBTZXJ2ZXIgZXh0ZW5kcyBFdmVudEVtaXR0ZXIge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuY29ubmVjdGlvbnMgPSBbXTtcbiAgICB0aGlzLl9zZXJ2ZXIgPSBuZXQuY3JlYXRlU2VydmVyKHRoaXMuX2hhbmRsZUNvbm5lY3Rpb24uYmluZCh0aGlzKSk7XG4gIH1cblxuICBfaGFuZGxlQ29ubmVjdGlvbihzb2NrZXQpIHtcbiAgICBjb25zdCBjb25uZWN0aW9uQ29uZmlnID0gbmV3IENvbm5lY3Rpb25Db25maWcoe1xuICAgICAgc3RyZWFtOiBzb2NrZXQsXG4gICAgICBpc1NlcnZlcjogdHJ1ZVxuICAgIH0pO1xuICAgIGNvbnN0IGNvbm5lY3Rpb24gPSBuZXcgQ29ubmVjdGlvbih7IGNvbmZpZzogY29ubmVjdGlvbkNvbmZpZyB9KTtcbiAgICB0aGlzLmVtaXQoJ2Nvbm5lY3Rpb24nLCBjb25uZWN0aW9uKTtcbiAgfVxuXG4gIGxpc3Rlbihwb3J0KSB7XG4gICAgdGhpcy5fcG9ydCA9IHBvcnQ7XG4gICAgdGhpcy5fc2VydmVyLmxpc3Rlbi5hcHBseSh0aGlzLl9zZXJ2ZXIsIGFyZ3VtZW50cyk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBjbG9zZShjYikge1xuICAgIHRoaXMuX3NlcnZlci5jbG9zZShjYik7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBTZXJ2ZXI7XG4iXSwibmFtZXMiOlsibmV0IiwicmVxdWlyZSIsIkV2ZW50RW1pdHRlciIsIkNvbm5lY3Rpb24iLCJDb25uZWN0aW9uQ29uZmlnIiwiU2VydmVyIiwiY29uc3RydWN0b3IiLCJjb25uZWN0aW9ucyIsIl9zZXJ2ZXIiLCJjcmVhdGVTZXJ2ZXIiLCJfaGFuZGxlQ29ubmVjdGlvbiIsImJpbmQiLCJzb2NrZXQiLCJjb25uZWN0aW9uQ29uZmlnIiwic3RyZWFtIiwiaXNTZXJ2ZXIiLCJjb25uZWN0aW9uIiwiY29uZmlnIiwiZW1pdCIsImxpc3RlbiIsInBvcnQiLCJfcG9ydCIsImFwcGx5IiwiYXJndW1lbnRzIiwiY2xvc2UiLCJjYiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/server.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/promise.js":
/*!****************************************!*\
  !*** ./node_modules/mysql2/promise.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nconst core = __webpack_require__(/*! ./index.js */ \"(rsc)/./node_modules/mysql2/index.js\");\nconst EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter);\nconst parserCache = __webpack_require__(/*! ./lib/parsers/parser_cache.js */ \"(rsc)/./node_modules/mysql2/lib/parsers/parser_cache.js\");\nfunction makeDoneCb(resolve, reject, localErr) {\n    return function(err, rows, fields) {\n        if (err) {\n            localErr.message = err.message;\n            localErr.code = err.code;\n            localErr.errno = err.errno;\n            localErr.sql = err.sql;\n            localErr.sqlState = err.sqlState;\n            localErr.sqlMessage = err.sqlMessage;\n            reject(localErr);\n        } else {\n            resolve([\n                rows,\n                fields\n            ]);\n        }\n    };\n}\nfunction inheritEvents(source, target, events) {\n    const listeners = {};\n    target.on(\"newListener\", (eventName)=>{\n        if (events.indexOf(eventName) >= 0 && !target.listenerCount(eventName)) {\n            source.on(eventName, listeners[eventName] = function() {\n                const args = [].slice.call(arguments);\n                args.unshift(eventName);\n                target.emit.apply(target, args);\n            });\n        }\n    }).on(\"removeListener\", (eventName)=>{\n        if (events.indexOf(eventName) >= 0 && !target.listenerCount(eventName)) {\n            source.removeListener(eventName, listeners[eventName]);\n            delete listeners[eventName];\n        }\n    });\n}\nclass PromisePreparedStatementInfo {\n    constructor(statement, promiseImpl){\n        this.statement = statement;\n        this.Promise = promiseImpl;\n    }\n    execute(parameters) {\n        const s = this.statement;\n        const localErr = new Error();\n        return new this.Promise((resolve, reject)=>{\n            const done = makeDoneCb(resolve, reject, localErr);\n            if (parameters) {\n                s.execute(parameters, done);\n            } else {\n                s.execute(done);\n            }\n        });\n    }\n    close() {\n        return new this.Promise((resolve)=>{\n            this.statement.close();\n            resolve();\n        });\n    }\n}\nclass PromiseConnection extends EventEmitter {\n    constructor(connection, promiseImpl){\n        super();\n        this.connection = connection;\n        this.Promise = promiseImpl || Promise;\n        inheritEvents(connection, this, [\n            \"error\",\n            \"drain\",\n            \"connect\",\n            \"end\",\n            \"enqueue\"\n        ]);\n    }\n    release() {\n        this.connection.release();\n    }\n    query(query, params) {\n        const c = this.connection;\n        const localErr = new Error();\n        if (typeof params === \"function\") {\n            throw new Error(\"Callback function is not available with promise clients.\");\n        }\n        return new this.Promise((resolve, reject)=>{\n            const done = makeDoneCb(resolve, reject, localErr);\n            if (params !== undefined) {\n                c.query(query, params, done);\n            } else {\n                c.query(query, done);\n            }\n        });\n    }\n    execute(query, params) {\n        const c = this.connection;\n        const localErr = new Error();\n        if (typeof params === \"function\") {\n            throw new Error(\"Callback function is not available with promise clients.\");\n        }\n        return new this.Promise((resolve, reject)=>{\n            const done = makeDoneCb(resolve, reject, localErr);\n            if (params !== undefined) {\n                c.execute(query, params, done);\n            } else {\n                c.execute(query, done);\n            }\n        });\n    }\n    end() {\n        return new this.Promise((resolve)=>{\n            this.connection.end(resolve);\n        });\n    }\n    beginTransaction() {\n        const c = this.connection;\n        const localErr = new Error();\n        return new this.Promise((resolve, reject)=>{\n            const done = makeDoneCb(resolve, reject, localErr);\n            c.beginTransaction(done);\n        });\n    }\n    commit() {\n        const c = this.connection;\n        const localErr = new Error();\n        return new this.Promise((resolve, reject)=>{\n            const done = makeDoneCb(resolve, reject, localErr);\n            c.commit(done);\n        });\n    }\n    rollback() {\n        const c = this.connection;\n        const localErr = new Error();\n        return new this.Promise((resolve, reject)=>{\n            const done = makeDoneCb(resolve, reject, localErr);\n            c.rollback(done);\n        });\n    }\n    ping() {\n        const c = this.connection;\n        const localErr = new Error();\n        return new this.Promise((resolve, reject)=>{\n            c.ping((err)=>{\n                if (err) {\n                    localErr.message = err.message;\n                    localErr.code = err.code;\n                    localErr.errno = err.errno;\n                    localErr.sqlState = err.sqlState;\n                    localErr.sqlMessage = err.sqlMessage;\n                    reject(localErr);\n                } else {\n                    resolve(true);\n                }\n            });\n        });\n    }\n    connect() {\n        const c = this.connection;\n        const localErr = new Error();\n        return new this.Promise((resolve, reject)=>{\n            c.connect((err, param)=>{\n                if (err) {\n                    localErr.message = err.message;\n                    localErr.code = err.code;\n                    localErr.errno = err.errno;\n                    localErr.sqlState = err.sqlState;\n                    localErr.sqlMessage = err.sqlMessage;\n                    reject(localErr);\n                } else {\n                    resolve(param);\n                }\n            });\n        });\n    }\n    prepare(options) {\n        const c = this.connection;\n        const promiseImpl = this.Promise;\n        const localErr = new Error();\n        return new this.Promise((resolve, reject)=>{\n            c.prepare(options, (err, statement)=>{\n                if (err) {\n                    localErr.message = err.message;\n                    localErr.code = err.code;\n                    localErr.errno = err.errno;\n                    localErr.sqlState = err.sqlState;\n                    localErr.sqlMessage = err.sqlMessage;\n                    reject(localErr);\n                } else {\n                    const wrappedStatement = new PromisePreparedStatementInfo(statement, promiseImpl);\n                    resolve(wrappedStatement);\n                }\n            });\n        });\n    }\n    changeUser(options) {\n        const c = this.connection;\n        const localErr = new Error();\n        return new this.Promise((resolve, reject)=>{\n            c.changeUser(options, (err)=>{\n                if (err) {\n                    localErr.message = err.message;\n                    localErr.code = err.code;\n                    localErr.errno = err.errno;\n                    localErr.sqlState = err.sqlState;\n                    localErr.sqlMessage = err.sqlMessage;\n                    reject(localErr);\n                } else {\n                    resolve();\n                }\n            });\n        });\n    }\n    get config() {\n        return this.connection.config;\n    }\n    get threadId() {\n        return this.connection.threadId;\n    }\n}\nfunction createConnection(opts) {\n    const coreConnection = core.createConnection(opts);\n    const createConnectionErr = new Error();\n    const thePromise = opts.Promise || Promise;\n    if (!thePromise) {\n        throw new Error(\"no Promise implementation available.\" + \"Use promise-enabled node version or pass userland Promise\" + \" implementation as parameter, for example: { Promise: require('bluebird') }\");\n    }\n    return new thePromise((resolve, reject)=>{\n        coreConnection.once(\"connect\", ()=>{\n            resolve(new PromiseConnection(coreConnection, thePromise));\n        });\n        coreConnection.once(\"error\", (err)=>{\n            createConnectionErr.message = err.message;\n            createConnectionErr.code = err.code;\n            createConnectionErr.errno = err.errno;\n            createConnectionErr.sqlState = err.sqlState;\n            reject(createConnectionErr);\n        });\n    });\n}\n// note: the callback of \"changeUser\" is not called on success\n// hence there is no possibility to call \"resolve\"\n// patching PromiseConnection\n// create facade functions for prototype functions on \"Connection\" that are not yet\n// implemented with PromiseConnection\n// proxy synchronous functions only\n(function(functionsToWrap) {\n    for(let i = 0; functionsToWrap && i < functionsToWrap.length; i++){\n        const func = functionsToWrap[i];\n        if (typeof core.Connection.prototype[func] === \"function\" && PromiseConnection.prototype[func] === undefined) {\n            PromiseConnection.prototype[func] = function factory(funcName) {\n                return function() {\n                    return core.Connection.prototype[funcName].apply(this.connection, arguments);\n                };\n            }(func);\n        }\n    }\n})([\n    // synchronous functions\n    \"close\",\n    \"createBinlogStream\",\n    \"destroy\",\n    \"escape\",\n    \"escapeId\",\n    \"format\",\n    \"pause\",\n    \"pipe\",\n    \"resume\",\n    \"unprepare\"\n]);\nclass PromisePoolConnection extends PromiseConnection {\n    constructor(connection, promiseImpl){\n        super(connection, promiseImpl);\n    }\n    destroy() {\n        return core.PoolConnection.prototype.destroy.apply(this.connection, arguments);\n    }\n}\nclass PromisePool extends EventEmitter {\n    constructor(pool, thePromise){\n        super();\n        this.pool = pool;\n        this.Promise = thePromise || Promise;\n        inheritEvents(pool, this, [\n            \"acquire\",\n            \"connection\",\n            \"enqueue\",\n            \"release\"\n        ]);\n    }\n    getConnection() {\n        const corePool = this.pool;\n        return new this.Promise((resolve, reject)=>{\n            corePool.getConnection((err, coreConnection)=>{\n                if (err) {\n                    reject(err);\n                } else {\n                    resolve(new PromisePoolConnection(coreConnection, this.Promise));\n                }\n            });\n        });\n    }\n    releaseConnection(connection) {\n        if (connection instanceof PromisePoolConnection) connection.release();\n    }\n    query(sql, args) {\n        const corePool = this.pool;\n        const localErr = new Error();\n        if (typeof args === \"function\") {\n            throw new Error(\"Callback function is not available with promise clients.\");\n        }\n        return new this.Promise((resolve, reject)=>{\n            const done = makeDoneCb(resolve, reject, localErr);\n            if (args !== undefined) {\n                corePool.query(sql, args, done);\n            } else {\n                corePool.query(sql, done);\n            }\n        });\n    }\n    execute(sql, args) {\n        const corePool = this.pool;\n        const localErr = new Error();\n        if (typeof args === \"function\") {\n            throw new Error(\"Callback function is not available with promise clients.\");\n        }\n        return new this.Promise((resolve, reject)=>{\n            const done = makeDoneCb(resolve, reject, localErr);\n            if (args) {\n                corePool.execute(sql, args, done);\n            } else {\n                corePool.execute(sql, done);\n            }\n        });\n    }\n    end() {\n        const corePool = this.pool;\n        const localErr = new Error();\n        return new this.Promise((resolve, reject)=>{\n            corePool.end((err)=>{\n                if (err) {\n                    localErr.message = err.message;\n                    localErr.code = err.code;\n                    localErr.errno = err.errno;\n                    localErr.sqlState = err.sqlState;\n                    localErr.sqlMessage = err.sqlMessage;\n                    reject(localErr);\n                } else {\n                    resolve();\n                }\n            });\n        });\n    }\n}\nfunction createPool(opts) {\n    const corePool = core.createPool(opts);\n    const thePromise = opts.Promise || Promise;\n    if (!thePromise) {\n        throw new Error(\"no Promise implementation available.\" + \"Use promise-enabled node version or pass userland Promise\" + \" implementation as parameter, for example: { Promise: require('bluebird') }\");\n    }\n    return new PromisePool(corePool, thePromise);\n}\n(function(functionsToWrap) {\n    for(let i = 0; functionsToWrap && i < functionsToWrap.length; i++){\n        const func = functionsToWrap[i];\n        if (typeof core.Pool.prototype[func] === \"function\" && PromisePool.prototype[func] === undefined) {\n            PromisePool.prototype[func] = function factory(funcName) {\n                return function() {\n                    return core.Pool.prototype[funcName].apply(this.pool, arguments);\n                };\n            }(func);\n        }\n    }\n})([\n    // synchronous functions\n    \"escape\",\n    \"escapeId\",\n    \"format\"\n]);\nclass PromisePoolCluster extends EventEmitter {\n    constructor(poolCluster, thePromise){\n        super();\n        this.poolCluster = poolCluster;\n        this.Promise = thePromise || Promise;\n        inheritEvents(poolCluster, this, [\n            \"warn\",\n            \"remove\"\n        ]);\n    }\n    getConnection() {\n        const corePoolCluster = this.poolCluster;\n        return new this.Promise((resolve, reject)=>{\n            corePoolCluster.getConnection((err, coreConnection)=>{\n                if (err) {\n                    reject(err);\n                } else {\n                    resolve(new PromisePoolConnection(coreConnection, this.Promise));\n                }\n            });\n        });\n    }\n    query(sql, args) {\n        const corePoolCluster = this.poolCluster;\n        const localErr = new Error();\n        if (typeof args === \"function\") {\n            throw new Error(\"Callback function is not available with promise clients.\");\n        }\n        return new this.Promise((resolve, reject)=>{\n            const done = makeDoneCb(resolve, reject, localErr);\n            corePoolCluster.query(sql, args, done);\n        });\n    }\n    execute(sql, args) {\n        const corePoolCluster = this.poolCluster;\n        const localErr = new Error();\n        if (typeof args === \"function\") {\n            throw new Error(\"Callback function is not available with promise clients.\");\n        }\n        return new this.Promise((resolve, reject)=>{\n            const done = makeDoneCb(resolve, reject, localErr);\n            corePoolCluster.execute(sql, args, done);\n        });\n    }\n    of(pattern, selector) {\n        return new PromisePoolCluster(this.poolCluster.of(pattern, selector), this.Promise);\n    }\n    end() {\n        const corePoolCluster = this.poolCluster;\n        const localErr = new Error();\n        return new this.Promise((resolve, reject)=>{\n            corePoolCluster.end((err)=>{\n                if (err) {\n                    localErr.message = err.message;\n                    localErr.code = err.code;\n                    localErr.errno = err.errno;\n                    localErr.sqlState = err.sqlState;\n                    localErr.sqlMessage = err.sqlMessage;\n                    reject(localErr);\n                } else {\n                    resolve();\n                }\n            });\n        });\n    }\n}\n/**\n * proxy poolCluster synchronous functions\n */ (function(functionsToWrap) {\n    for(let i = 0; functionsToWrap && i < functionsToWrap.length; i++){\n        const func = functionsToWrap[i];\n        if (typeof core.PoolCluster.prototype[func] === \"function\" && PromisePoolCluster.prototype[func] === undefined) {\n            PromisePoolCluster.prototype[func] = function factory(funcName) {\n                return function() {\n                    return core.PoolCluster.prototype[funcName].apply(this.poolCluster, arguments);\n                };\n            }(func);\n        }\n    }\n})([\n    \"add\"\n]);\nfunction createPoolCluster(opts) {\n    const corePoolCluster = core.createPoolCluster(opts);\n    const thePromise = opts && opts.Promise || Promise;\n    if (!thePromise) {\n        throw new Error(\"no Promise implementation available.\" + \"Use promise-enabled node version or pass userland Promise\" + \" implementation as parameter, for example: { Promise: require('bluebird') }\");\n    }\n    return new PromisePoolCluster(corePoolCluster, thePromise);\n}\nexports.createConnection = createConnection;\nexports.createPool = createPool;\nexports.createPoolCluster = createPoolCluster;\nexports.escape = core.escape;\nexports.escapeId = core.escapeId;\nexports.format = core.format;\nexports.raw = core.raw;\nexports.PromisePool = PromisePool;\nexports.PromiseConnection = PromiseConnection;\nexports.PromisePoolConnection = PromisePoolConnection;\nexports.__defineGetter__(\"Types\", ()=>__webpack_require__(/*! ./lib/constants/types.js */ \"(rsc)/./node_modules/mysql2/lib/constants/types.js\"));\nexports.__defineGetter__(\"Charsets\", ()=>__webpack_require__(/*! ./lib/constants/charsets.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charsets.js\"));\nexports.__defineGetter__(\"CharsetToEncoding\", ()=>__webpack_require__(/*! ./lib/constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\"));\nexports.setMaxParserCache = function(max) {\n    parserCache.setMaxCache(max);\n};\nexports.clearParserCache = function() {\n    parserCache.clearCache();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/promise.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/node_modules/lru-cache/dist/cjs/index-cjs.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mysql2/node_modules/lru-cache/dist/cjs/index-cjs.js ***!
  \**************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("\nvar __importDefault = this && this.__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nconst index_js_1 = __importDefault(__webpack_require__(/*! ./index.js */ \"(rsc)/./node_modules/mysql2/node_modules/lru-cache/dist/cjs/index.js\"));\nmodule.exports = Object.assign(index_js_1.default, {\n    default: index_js_1.default,\n    LRUCache: index_js_1.default\n}); //# sourceMappingURL=index-cjs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL25vZGVfbW9kdWxlcy9scnUtY2FjaGUvZGlzdC9janMvaW5kZXgtY2pzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLElBQUssSUFBSSxJQUFJLENBQUNBLGVBQWUsSUFBSyxTQUFVQyxHQUFHO0lBQ2pFLE9BQU8sT0FBUUEsSUFBSUMsVUFBVSxHQUFJRCxNQUFNO1FBQUUsV0FBV0E7SUFBSTtBQUM1RDtBQUNBLE1BQU1FLGFBQWFILGdCQUFnQkksbUJBQU9BLENBQUMsd0ZBQVk7QUFDdkRDLE9BQU9DLE9BQU8sR0FBR0MsT0FBT0MsTUFBTSxDQUFDTCxXQUFXTSxPQUFPLEVBQUU7SUFBRUEsU0FBU04sV0FBV00sT0FBTztJQUFFQyxVQUFVUCxXQUFXTSxPQUFPO0FBQUMsSUFDL0cscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWNlZS1wcm90by1vbmUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL25vZGVfbW9kdWxlcy9scnUtY2FjaGUvZGlzdC9janMvaW5kZXgtY2pzLmpzP2UyNGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5jb25zdCBpbmRleF9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2luZGV4LmpzXCIpKTtcbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmFzc2lnbihpbmRleF9qc18xLmRlZmF1bHQsIHsgZGVmYXVsdDogaW5kZXhfanNfMS5kZWZhdWx0LCBMUlVDYWNoZTogaW5kZXhfanNfMS5kZWZhdWx0IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgtY2pzLmpzLm1hcCJdLCJuYW1lcyI6WyJfX2ltcG9ydERlZmF1bHQiLCJtb2QiLCJfX2VzTW9kdWxlIiwiaW5kZXhfanNfMSIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiT2JqZWN0IiwiYXNzaWduIiwiZGVmYXVsdCIsIkxSVUNhY2hlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/node_modules/lru-cache/dist/cjs/index-cjs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/node_modules/lru-cache/dist/cjs/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mysql2/node_modules/lru-cache/dist/cjs/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * @module LRUCache\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.LRUCache = void 0;\nconst perf = typeof performance === \"object\" && performance && typeof performance.now === \"function\" ? performance : Date;\nconst warned = new Set();\nconst emitWarning = (msg, type, code, fn)=>{\n    typeof process === \"object\" && process && typeof process.emitWarning === \"function\" ? process.emitWarning(msg, type, code, fn) : console.error(`[${code}] ${type}: ${msg}`);\n};\nconst shouldWarn = (code)=>!warned.has(code);\nconst TYPE = Symbol(\"type\");\nconst isPosInt = (n)=>n && n === Math.floor(n) && n > 0 && isFinite(n);\n/* c8 ignore start */ // This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max)=>!isPosInt(max) ? null : max <= Math.pow(2, 8) ? Uint8Array : max <= Math.pow(2, 16) ? Uint16Array : max <= Math.pow(2, 32) ? Uint32Array : max <= Number.MAX_SAFE_INTEGER ? ZeroArray : null;\n/* c8 ignore stop */ class ZeroArray extends Array {\n    constructor(size){\n        super(size);\n        this.fill(0);\n    }\n}\nclass Stack {\n    // private constructor\n    static #constructing = false;\n    static create(max) {\n        const HeapCls = getUintArray(max);\n        if (!HeapCls) return [];\n        Stack.#constructing = true;\n        const s = new Stack(max, HeapCls);\n        Stack.#constructing = false;\n        return s;\n    }\n    constructor(max, HeapCls){\n        /* c8 ignore start */ if (!Stack.#constructing) {\n            throw new TypeError(\"instantiate Stack using Stack.create(n)\");\n        }\n        /* c8 ignore stop */ this.heap = new HeapCls(max);\n        this.length = 0;\n    }\n    push(n) {\n        this.heap[this.length++] = n;\n    }\n    pop() {\n        return this.heap[--this.length];\n    }\n}\n/**\n * Default export, the thing you're using this module to get.\n *\n * All properties from the options object (with the exception of\n * {@link OptionsBase.max} and {@link OptionsBase.maxSize}) are added as\n * normal public members. (`max` and `maxBase` are read-only getters.)\n * Changing any of these will alter the defaults for subsequent method calls,\n * but is otherwise safe.\n */ class LRUCache {\n    // properties coming in from the options of these, only max and maxSize\n    // really *need* to be protected. The rest can be modified, as they just\n    // set defaults for various methods.\n    #max;\n    #maxSize;\n    #dispose;\n    #disposeAfter;\n    #fetchMethod;\n    // computed properties\n    #size;\n    #calculatedSize;\n    #keyMap;\n    #keyList;\n    #valList;\n    #next;\n    #prev;\n    #head;\n    #tail;\n    #free;\n    #disposed;\n    #sizes;\n    #starts;\n    #ttls;\n    #hasDispose;\n    #hasFetchMethod;\n    #hasDisposeAfter;\n    /**\n     * Do not call this method unless you need to inspect the\n     * inner workings of the cache.  If anything returned by this\n     * object is modified in any way, strange breakage may occur.\n     *\n     * These fields are private for a reason!\n     *\n     * @internal\n     */ static unsafeExposeInternals(c) {\n        return {\n            // properties\n            starts: c.#starts,\n            ttls: c.#ttls,\n            sizes: c.#sizes,\n            keyMap: c.#keyMap,\n            keyList: c.#keyList,\n            valList: c.#valList,\n            next: c.#next,\n            prev: c.#prev,\n            get head () {\n                return c.#head;\n            },\n            get tail () {\n                return c.#tail;\n            },\n            free: c.#free,\n            // methods\n            isBackgroundFetch: (p)=>c.#isBackgroundFetch(p),\n            backgroundFetch: (k, index, options, context)=>c.#backgroundFetch(k, index, options, context),\n            moveToTail: (index)=>c.#moveToTail(index),\n            indexes: (options)=>c.#indexes(options),\n            rindexes: (options)=>c.#rindexes(options),\n            isStale: (index)=>c.#isStale(index)\n        };\n    }\n    // Protected read-only members\n    /**\n     * {@link LRUCache.OptionsBase.max} (read-only)\n     */ get max() {\n        return this.#max;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.maxSize} (read-only)\n     */ get maxSize() {\n        return this.#maxSize;\n    }\n    /**\n     * The total computed size of items in the cache (read-only)\n     */ get calculatedSize() {\n        return this.#calculatedSize;\n    }\n    /**\n     * The number of items stored in the cache (read-only)\n     */ get size() {\n        return this.#size;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n     */ get fetchMethod() {\n        return this.#fetchMethod;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.dispose} (read-only)\n     */ get dispose() {\n        return this.#dispose;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n     */ get disposeAfter() {\n        return this.#disposeAfter;\n    }\n    constructor(options){\n        // conditionally set private methods related to TTL\n        this.#updateItemAge = ()=>{};\n        this.#statusTTL = ()=>{};\n        this.#setItemTTL = ()=>{};\n        /* c8 ignore stop */ this.#isStale = ()=>false;\n        this.#removeItemSize = (_i)=>{};\n        this.#addItemSize = (_i, _s, _st)=>{};\n        this.#requireSize = (_k, _v, size, sizeCalculation)=>{\n            if (size || sizeCalculation) {\n                throw new TypeError(\"cannot set size without setting maxSize or maxEntrySize on cache\");\n            }\n            return 0;\n        };\n        const { max = 0, ttl, ttlResolution = 1, ttlAutopurge, updateAgeOnGet, updateAgeOnHas, allowStale, dispose, disposeAfter, noDisposeOnSet, noUpdateTTL, maxSize = 0, maxEntrySize = 0, sizeCalculation, fetchMethod, noDeleteOnFetchRejection, noDeleteOnStaleGet, allowStaleOnFetchRejection, allowStaleOnFetchAbort, ignoreFetchAbort } = options;\n        if (max !== 0 && !isPosInt(max)) {\n            throw new TypeError(\"max option must be a nonnegative integer\");\n        }\n        const UintArray = max ? getUintArray(max) : Array;\n        if (!UintArray) {\n            throw new Error(\"invalid max value: \" + max);\n        }\n        this.#max = max;\n        this.#maxSize = maxSize;\n        this.maxEntrySize = maxEntrySize || this.#maxSize;\n        this.sizeCalculation = sizeCalculation;\n        if (this.sizeCalculation) {\n            if (!this.#maxSize && !this.maxEntrySize) {\n                throw new TypeError(\"cannot set sizeCalculation without setting maxSize or maxEntrySize\");\n            }\n            if (typeof this.sizeCalculation !== \"function\") {\n                throw new TypeError(\"sizeCalculation set to non-function\");\n            }\n        }\n        if (fetchMethod !== undefined && typeof fetchMethod !== \"function\") {\n            throw new TypeError(\"fetchMethod must be a function if specified\");\n        }\n        this.#fetchMethod = fetchMethod;\n        this.#hasFetchMethod = !!fetchMethod;\n        this.#keyMap = new Map();\n        this.#keyList = new Array(max).fill(undefined);\n        this.#valList = new Array(max).fill(undefined);\n        this.#next = new UintArray(max);\n        this.#prev = new UintArray(max);\n        this.#head = 0;\n        this.#tail = 0;\n        this.#free = Stack.create(max);\n        this.#size = 0;\n        this.#calculatedSize = 0;\n        if (typeof dispose === \"function\") {\n            this.#dispose = dispose;\n        }\n        if (typeof disposeAfter === \"function\") {\n            this.#disposeAfter = disposeAfter;\n            this.#disposed = [];\n        } else {\n            this.#disposeAfter = undefined;\n            this.#disposed = undefined;\n        }\n        this.#hasDispose = !!this.#dispose;\n        this.#hasDisposeAfter = !!this.#disposeAfter;\n        this.noDisposeOnSet = !!noDisposeOnSet;\n        this.noUpdateTTL = !!noUpdateTTL;\n        this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection;\n        this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection;\n        this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort;\n        this.ignoreFetchAbort = !!ignoreFetchAbort;\n        // NB: maxEntrySize is set to maxSize if it's set\n        if (this.maxEntrySize !== 0) {\n            if (this.#maxSize !== 0) {\n                if (!isPosInt(this.#maxSize)) {\n                    throw new TypeError(\"maxSize must be a positive integer if specified\");\n                }\n            }\n            if (!isPosInt(this.maxEntrySize)) {\n                throw new TypeError(\"maxEntrySize must be a positive integer if specified\");\n            }\n            this.#initializeSizeTracking();\n        }\n        this.allowStale = !!allowStale;\n        this.noDeleteOnStaleGet = !!noDeleteOnStaleGet;\n        this.updateAgeOnGet = !!updateAgeOnGet;\n        this.updateAgeOnHas = !!updateAgeOnHas;\n        this.ttlResolution = isPosInt(ttlResolution) || ttlResolution === 0 ? ttlResolution : 1;\n        this.ttlAutopurge = !!ttlAutopurge;\n        this.ttl = ttl || 0;\n        if (this.ttl) {\n            if (!isPosInt(this.ttl)) {\n                throw new TypeError(\"ttl must be a positive integer if specified\");\n            }\n            this.#initializeTTLTracking();\n        }\n        // do not allow completely unbounded caches\n        if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n            throw new TypeError(\"At least one of max, maxSize, or ttl is required\");\n        }\n        if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n            const code = \"LRU_CACHE_UNBOUNDED\";\n            if (shouldWarn(code)) {\n                warned.add(code);\n                const msg = \"TTL caching without ttlAutopurge, max, or maxSize can \" + \"result in unbounded memory consumption.\";\n                emitWarning(msg, \"UnboundedCacheWarning\", code, LRUCache);\n            }\n        }\n    }\n    /**\n     * Return the remaining TTL time for a given entry key\n     */ getRemainingTTL(key) {\n        return this.#keyMap.has(key) ? Infinity : 0;\n    }\n    #initializeTTLTracking() {\n        const ttls = new ZeroArray(this.#max);\n        const starts = new ZeroArray(this.#max);\n        this.#ttls = ttls;\n        this.#starts = starts;\n        this.#setItemTTL = (index, ttl, start = perf.now())=>{\n            starts[index] = ttl !== 0 ? start : 0;\n            ttls[index] = ttl;\n            if (ttl !== 0 && this.ttlAutopurge) {\n                const t = setTimeout(()=>{\n                    if (this.#isStale(index)) {\n                        this.delete(this.#keyList[index]);\n                    }\n                }, ttl + 1);\n                // unref() not supported on all platforms\n                /* c8 ignore start */ if (t.unref) {\n                    t.unref();\n                }\n            /* c8 ignore stop */ }\n        };\n        this.#updateItemAge = (index)=>{\n            starts[index] = ttls[index] !== 0 ? perf.now() : 0;\n        };\n        this.#statusTTL = (status, index)=>{\n            if (ttls[index]) {\n                const ttl = ttls[index];\n                const start = starts[index];\n                status.ttl = ttl;\n                status.start = start;\n                status.now = cachedNow || getNow();\n                status.remainingTTL = status.now + ttl - start;\n            }\n        };\n        // debounce calls to perf.now() to 1s so we're not hitting\n        // that costly call repeatedly.\n        let cachedNow = 0;\n        const getNow = ()=>{\n            const n = perf.now();\n            if (this.ttlResolution > 0) {\n                cachedNow = n;\n                const t = setTimeout(()=>cachedNow = 0, this.ttlResolution);\n                // not available on all platforms\n                /* c8 ignore start */ if (t.unref) {\n                    t.unref();\n                }\n            /* c8 ignore stop */ }\n            return n;\n        };\n        this.getRemainingTTL = (key)=>{\n            const index = this.#keyMap.get(key);\n            if (index === undefined) {\n                return 0;\n            }\n            return ttls[index] === 0 || starts[index] === 0 ? Infinity : starts[index] + ttls[index] - (cachedNow || getNow());\n        };\n        this.#isStale = (index)=>{\n            return ttls[index] !== 0 && starts[index] !== 0 && (cachedNow || getNow()) - starts[index] > ttls[index];\n        };\n    }\n    #updateItemAge;\n    #statusTTL;\n    #setItemTTL;\n    #isStale;\n    #initializeSizeTracking() {\n        const sizes = new ZeroArray(this.#max);\n        this.#calculatedSize = 0;\n        this.#sizes = sizes;\n        this.#removeItemSize = (index)=>{\n            this.#calculatedSize -= sizes[index];\n            sizes[index] = 0;\n        };\n        this.#requireSize = (k, v, size, sizeCalculation)=>{\n            // provisionally accept background fetches.\n            // actual value size will be checked when they return.\n            if (this.#isBackgroundFetch(v)) {\n                return 0;\n            }\n            if (!isPosInt(size)) {\n                if (sizeCalculation) {\n                    if (typeof sizeCalculation !== \"function\") {\n                        throw new TypeError(\"sizeCalculation must be a function\");\n                    }\n                    size = sizeCalculation(v, k);\n                    if (!isPosInt(size)) {\n                        throw new TypeError(\"sizeCalculation return invalid (expect positive integer)\");\n                    }\n                } else {\n                    throw new TypeError(\"invalid size value (must be positive integer). \" + \"When maxSize or maxEntrySize is used, sizeCalculation \" + \"or size must be set.\");\n                }\n            }\n            return size;\n        };\n        this.#addItemSize = (index, size, status)=>{\n            sizes[index] = size;\n            if (this.#maxSize) {\n                const maxSize = this.#maxSize - sizes[index];\n                while(this.#calculatedSize > maxSize){\n                    this.#evict(true);\n                }\n            }\n            this.#calculatedSize += sizes[index];\n            if (status) {\n                status.entrySize = size;\n                status.totalCalculatedSize = this.#calculatedSize;\n            }\n        };\n    }\n    #removeItemSize;\n    #addItemSize;\n    #requireSize;\n    *#indexes({ allowStale = this.allowStale } = {}) {\n        if (this.#size) {\n            for(let i = this.#tail; true;){\n                if (!this.#isValidIndex(i)) {\n                    break;\n                }\n                if (allowStale || !this.#isStale(i)) {\n                    yield i;\n                }\n                if (i === this.#head) {\n                    break;\n                } else {\n                    i = this.#prev[i];\n                }\n            }\n        }\n    }\n    *#rindexes({ allowStale = this.allowStale } = {}) {\n        if (this.#size) {\n            for(let i = this.#head; true;){\n                if (!this.#isValidIndex(i)) {\n                    break;\n                }\n                if (allowStale || !this.#isStale(i)) {\n                    yield i;\n                }\n                if (i === this.#tail) {\n                    break;\n                } else {\n                    i = this.#next[i];\n                }\n            }\n        }\n    }\n    #isValidIndex(index) {\n        return index !== undefined && this.#keyMap.get(this.#keyList[index]) === index;\n    }\n    /**\n     * Return a generator yielding `[key, value]` pairs,\n     * in order from most recently used to least recently used.\n     */ *entries() {\n        for (const i of this.#indexes()){\n            if (this.#valList[i] !== undefined && this.#keyList[i] !== undefined && !this.#isBackgroundFetch(this.#valList[i])) {\n                yield [\n                    this.#keyList[i],\n                    this.#valList[i]\n                ];\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.entries}\n     *\n     * Return a generator yielding `[key, value]` pairs,\n     * in order from least recently used to most recently used.\n     */ *rentries() {\n        for (const i of this.#rindexes()){\n            if (this.#valList[i] !== undefined && this.#keyList[i] !== undefined && !this.#isBackgroundFetch(this.#valList[i])) {\n                yield [\n                    this.#keyList[i],\n                    this.#valList[i]\n                ];\n            }\n        }\n    }\n    /**\n     * Return a generator yielding the keys in the cache,\n     * in order from most recently used to least recently used.\n     */ *keys() {\n        for (const i of this.#indexes()){\n            const k = this.#keyList[i];\n            if (k !== undefined && !this.#isBackgroundFetch(this.#valList[i])) {\n                yield k;\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.keys}\n     *\n     * Return a generator yielding the keys in the cache,\n     * in order from least recently used to most recently used.\n     */ *rkeys() {\n        for (const i of this.#rindexes()){\n            const k = this.#keyList[i];\n            if (k !== undefined && !this.#isBackgroundFetch(this.#valList[i])) {\n                yield k;\n            }\n        }\n    }\n    /**\n     * Return a generator yielding the values in the cache,\n     * in order from most recently used to least recently used.\n     */ *values() {\n        for (const i of this.#indexes()){\n            const v = this.#valList[i];\n            if (v !== undefined && !this.#isBackgroundFetch(this.#valList[i])) {\n                yield this.#valList[i];\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.values}\n     *\n     * Return a generator yielding the values in the cache,\n     * in order from least recently used to most recently used.\n     */ *rvalues() {\n        for (const i of this.#rindexes()){\n            const v = this.#valList[i];\n            if (v !== undefined && !this.#isBackgroundFetch(this.#valList[i])) {\n                yield this.#valList[i];\n            }\n        }\n    }\n    /**\n     * Iterating over the cache itself yields the same results as\n     * {@link LRUCache.entries}\n     */ [Symbol.iterator]() {\n        return this.entries();\n    }\n    /**\n     * Find a value for which the supplied fn method returns a truthy value,\n     * similar to Array.find().  fn is called as fn(value, key, cache).\n     */ find(fn, getOptions = {}) {\n        for (const i of this.#indexes()){\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n            if (value === undefined) continue;\n            if (fn(value, this.#keyList[i], this)) {\n                return this.get(this.#keyList[i], getOptions);\n            }\n        }\n    }\n    /**\n     * Call the supplied function on each item in the cache, in order from\n     * most recently used to least recently used.  fn is called as\n     * fn(value, key, cache).  Does not update age or recenty of use.\n     * Does not iterate over stale values.\n     */ forEach(fn, thisp = this) {\n        for (const i of this.#indexes()){\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n            if (value === undefined) continue;\n            fn.call(thisp, value, this.#keyList[i], this);\n        }\n    }\n    /**\n     * The same as {@link LRUCache.forEach} but items are iterated over in\n     * reverse order.  (ie, less recently used items are iterated over first.)\n     */ rforEach(fn, thisp = this) {\n        for (const i of this.#rindexes()){\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n            if (value === undefined) continue;\n            fn.call(thisp, value, this.#keyList[i], this);\n        }\n    }\n    /**\n     * Delete any stale entries. Returns true if anything was removed,\n     * false otherwise.\n     */ purgeStale() {\n        let deleted = false;\n        for (const i of this.#rindexes({\n            allowStale: true\n        })){\n            if (this.#isStale(i)) {\n                this.delete(this.#keyList[i]);\n                deleted = true;\n            }\n        }\n        return deleted;\n    }\n    /**\n     * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n     * passed to cache.load()\n     */ dump() {\n        const arr = [];\n        for (const i of this.#indexes({\n            allowStale: true\n        })){\n            const key = this.#keyList[i];\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n            if (value === undefined || key === undefined) continue;\n            const entry = {\n                value\n            };\n            if (this.#ttls && this.#starts) {\n                entry.ttl = this.#ttls[i];\n                // always dump the start relative to a portable timestamp\n                // it's ok for this to be a bit slow, it's a rare operation.\n                const age = perf.now() - this.#starts[i];\n                entry.start = Math.floor(Date.now() - age);\n            }\n            if (this.#sizes) {\n                entry.size = this.#sizes[i];\n            }\n            arr.unshift([\n                key,\n                entry\n            ]);\n        }\n        return arr;\n    }\n    /**\n     * Reset the cache and load in the items in entries in the order listed.\n     * Note that the shape of the resulting cache may be different if the\n     * same options are not used in both caches.\n     */ load(arr) {\n        this.clear();\n        for (const [key, entry] of arr){\n            if (entry.start) {\n                // entry.start is a portable timestamp, but we may be using\n                // node's performance.now(), so calculate the offset, so that\n                // we get the intended remaining TTL, no matter how long it's\n                // been on ice.\n                //\n                // it's ok for this to be a bit slow, it's a rare operation.\n                const age = Date.now() - entry.start;\n                entry.start = perf.now() - age;\n            }\n            this.set(key, entry.value, entry);\n        }\n    }\n    /**\n     * Add a value to the cache.\n     */ set(k, v, setOptions = {}) {\n        const { ttl = this.ttl, start, noDisposeOnSet = this.noDisposeOnSet, sizeCalculation = this.sizeCalculation, status } = setOptions;\n        let { noUpdateTTL = this.noUpdateTTL } = setOptions;\n        const size = this.#requireSize(k, v, setOptions.size || 0, sizeCalculation);\n        // if the item doesn't fit, don't do anything\n        // NB: maxEntrySize set to maxSize by default\n        if (this.maxEntrySize && size > this.maxEntrySize) {\n            if (status) {\n                status.set = \"miss\";\n                status.maxEntrySizeExceeded = true;\n            }\n            // have to delete, in case something is there already.\n            this.delete(k);\n            return this;\n        }\n        let index = this.#size === 0 ? undefined : this.#keyMap.get(k);\n        if (index === undefined) {\n            // addition\n            index = this.#size === 0 ? this.#tail : this.#free.length !== 0 ? this.#free.pop() : this.#size === this.#max ? this.#evict(false) : this.#size;\n            this.#keyList[index] = k;\n            this.#valList[index] = v;\n            this.#keyMap.set(k, index);\n            this.#next[this.#tail] = index;\n            this.#prev[index] = this.#tail;\n            this.#tail = index;\n            this.#size++;\n            this.#addItemSize(index, size, status);\n            if (status) status.set = \"add\";\n            noUpdateTTL = false;\n        } else {\n            // update\n            this.#moveToTail(index);\n            const oldVal = this.#valList[index];\n            if (v !== oldVal) {\n                if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n                    oldVal.__abortController.abort(new Error(\"replaced\"));\n                } else if (!noDisposeOnSet) {\n                    if (this.#hasDispose) {\n                        this.#dispose?.(oldVal, k, \"set\");\n                    }\n                    if (this.#hasDisposeAfter) {\n                        this.#disposed?.push([\n                            oldVal,\n                            k,\n                            \"set\"\n                        ]);\n                    }\n                }\n                this.#removeItemSize(index);\n                this.#addItemSize(index, size, status);\n                this.#valList[index] = v;\n                if (status) {\n                    status.set = \"replace\";\n                    const oldValue = oldVal && this.#isBackgroundFetch(oldVal) ? oldVal.__staleWhileFetching : oldVal;\n                    if (oldValue !== undefined) status.oldValue = oldValue;\n                }\n            } else if (status) {\n                status.set = \"update\";\n            }\n        }\n        if (ttl !== 0 && !this.#ttls) {\n            this.#initializeTTLTracking();\n        }\n        if (this.#ttls) {\n            if (!noUpdateTTL) {\n                this.#setItemTTL(index, ttl, start);\n            }\n            if (status) this.#statusTTL(status, index);\n        }\n        if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n            const dt = this.#disposed;\n            let task;\n            while(task = dt?.shift()){\n                this.#disposeAfter?.(...task);\n            }\n        }\n        return this;\n    }\n    /**\n     * Evict the least recently used item, returning its value or\n     * `undefined` if cache is empty.\n     */ pop() {\n        try {\n            while(this.#size){\n                const val = this.#valList[this.#head];\n                this.#evict(true);\n                if (this.#isBackgroundFetch(val)) {\n                    if (val.__staleWhileFetching) {\n                        return val.__staleWhileFetching;\n                    }\n                } else if (val !== undefined) {\n                    return val;\n                }\n            }\n        } finally{\n            if (this.#hasDisposeAfter && this.#disposed) {\n                const dt = this.#disposed;\n                let task;\n                while(task = dt?.shift()){\n                    this.#disposeAfter?.(...task);\n                }\n            }\n        }\n    }\n    #evict(free) {\n        const head = this.#head;\n        const k = this.#keyList[head];\n        const v = this.#valList[head];\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error(\"evicted\"));\n        } else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n                this.#dispose?.(v, k, \"evict\");\n            }\n            if (this.#hasDisposeAfter) {\n                this.#disposed?.push([\n                    v,\n                    k,\n                    \"evict\"\n                ]);\n            }\n        }\n        this.#removeItemSize(head);\n        // if we aren't about to use the index, then null these out\n        if (free) {\n            this.#keyList[head] = undefined;\n            this.#valList[head] = undefined;\n            this.#free.push(head);\n        }\n        if (this.#size === 1) {\n            this.#head = this.#tail = 0;\n            this.#free.length = 0;\n        } else {\n            this.#head = this.#next[head];\n        }\n        this.#keyMap.delete(k);\n        this.#size--;\n        return head;\n    }\n    /**\n     * Check if a key is in the cache, without updating the recency of use.\n     * Will return false if the item is stale, even though it is technically\n     * in the cache.\n     *\n     * Will not update item age unless\n     * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n     */ has(k, hasOptions = {}) {\n        const { updateAgeOnHas = this.updateAgeOnHas, status } = hasOptions;\n        const index = this.#keyMap.get(k);\n        if (index !== undefined) {\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v) && v.__staleWhileFetching === undefined) {\n                return false;\n            }\n            if (!this.#isStale(index)) {\n                if (updateAgeOnHas) {\n                    this.#updateItemAge(index);\n                }\n                if (status) {\n                    status.has = \"hit\";\n                    this.#statusTTL(status, index);\n                }\n                return true;\n            } else if (status) {\n                status.has = \"stale\";\n                this.#statusTTL(status, index);\n            }\n        } else if (status) {\n            status.has = \"miss\";\n        }\n        return false;\n    }\n    /**\n     * Like {@link LRUCache#get} but doesn't update recency or delete stale\n     * items.\n     *\n     * Returns `undefined` if the item is stale, unless\n     * {@link LRUCache.OptionsBase.allowStale} is set.\n     */ peek(k, peekOptions = {}) {\n        const { allowStale = this.allowStale } = peekOptions;\n        const index = this.#keyMap.get(k);\n        if (index !== undefined && (allowStale || !this.#isStale(index))) {\n            const v = this.#valList[index];\n            // either stale and allowed, or forcing a refresh of non-stale value\n            return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n        }\n    }\n    #backgroundFetch(k, index, options, context) {\n        const v = index === undefined ? undefined : this.#valList[index];\n        if (this.#isBackgroundFetch(v)) {\n            return v;\n        }\n        const ac = new AbortController();\n        const { signal } = options;\n        // when/if our AC signals, then stop listening to theirs.\n        signal?.addEventListener(\"abort\", ()=>ac.abort(signal.reason), {\n            signal: ac.signal\n        });\n        const fetchOpts = {\n            signal: ac.signal,\n            options,\n            context\n        };\n        const cb = (v, updateCache = false)=>{\n            const { aborted } = ac.signal;\n            const ignoreAbort = options.ignoreFetchAbort && v !== undefined;\n            if (options.status) {\n                if (aborted && !updateCache) {\n                    options.status.fetchAborted = true;\n                    options.status.fetchError = ac.signal.reason;\n                    if (ignoreAbort) options.status.fetchAbortIgnored = true;\n                } else {\n                    options.status.fetchResolved = true;\n                }\n            }\n            if (aborted && !ignoreAbort && !updateCache) {\n                return fetchFail(ac.signal.reason);\n            }\n            // either we didn't abort, and are still here, or we did, and ignored\n            const bf = p;\n            if (this.#valList[index] === p) {\n                if (v === undefined) {\n                    if (bf.__staleWhileFetching) {\n                        this.#valList[index] = bf.__staleWhileFetching;\n                    } else {\n                        this.delete(k);\n                    }\n                } else {\n                    if (options.status) options.status.fetchUpdated = true;\n                    this.set(k, v, fetchOpts.options);\n                }\n            }\n            return v;\n        };\n        const eb = (er)=>{\n            if (options.status) {\n                options.status.fetchRejected = true;\n                options.status.fetchError = er;\n            }\n            return fetchFail(er);\n        };\n        const fetchFail = (er)=>{\n            const { aborted } = ac.signal;\n            const allowStaleAborted = aborted && options.allowStaleOnFetchAbort;\n            const allowStale = allowStaleAborted || options.allowStaleOnFetchRejection;\n            const noDelete = allowStale || options.noDeleteOnFetchRejection;\n            const bf = p;\n            if (this.#valList[index] === p) {\n                // if we allow stale on fetch rejections, then we need to ensure that\n                // the stale value is not removed from the cache when the fetch fails.\n                const del = !noDelete || bf.__staleWhileFetching === undefined;\n                if (del) {\n                    this.delete(k);\n                } else if (!allowStaleAborted) {\n                    // still replace the *promise* with the stale value,\n                    // since we are done with the promise at this point.\n                    // leave it untouched if we're still waiting for an\n                    // aborted background fetch that hasn't yet returned.\n                    this.#valList[index] = bf.__staleWhileFetching;\n                }\n            }\n            if (allowStale) {\n                if (options.status && bf.__staleWhileFetching !== undefined) {\n                    options.status.returnedStale = true;\n                }\n                return bf.__staleWhileFetching;\n            } else if (bf.__returned === bf) {\n                throw er;\n            }\n        };\n        const pcall = (res, rej)=>{\n            const fmp = this.#fetchMethod?.(k, v, fetchOpts);\n            if (fmp && fmp instanceof Promise) {\n                fmp.then((v)=>res(v), rej);\n            }\n            // ignored, we go until we finish, regardless.\n            // defer check until we are actually aborting,\n            // so fetchMethod can override.\n            ac.signal.addEventListener(\"abort\", ()=>{\n                if (!options.ignoreFetchAbort || options.allowStaleOnFetchAbort) {\n                    res();\n                    // when it eventually resolves, update the cache.\n                    if (options.allowStaleOnFetchAbort) {\n                        res = (v)=>cb(v, true);\n                    }\n                }\n            });\n        };\n        if (options.status) options.status.fetchDispatched = true;\n        const p = new Promise(pcall).then(cb, eb);\n        const bf = Object.assign(p, {\n            __abortController: ac,\n            __staleWhileFetching: v,\n            __returned: undefined\n        });\n        if (index === undefined) {\n            // internal, don't expose status.\n            this.set(k, bf, {\n                ...fetchOpts.options,\n                status: undefined\n            });\n            index = this.#keyMap.get(k);\n        } else {\n            this.#valList[index] = bf;\n        }\n        return bf;\n    }\n    #isBackgroundFetch(p) {\n        if (!this.#hasFetchMethod) return false;\n        const b = p;\n        return !!b && b instanceof Promise && b.hasOwnProperty(\"__staleWhileFetching\") && b.__abortController instanceof AbortController;\n    }\n    async fetch(k, fetchOptions = {}) {\n        const { // get options\n        allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, // set options\n        ttl = this.ttl, noDisposeOnSet = this.noDisposeOnSet, size = 0, sizeCalculation = this.sizeCalculation, noUpdateTTL = this.noUpdateTTL, // fetch exclusive options\n        noDeleteOnFetchRejection = this.noDeleteOnFetchRejection, allowStaleOnFetchRejection = this.allowStaleOnFetchRejection, ignoreFetchAbort = this.ignoreFetchAbort, allowStaleOnFetchAbort = this.allowStaleOnFetchAbort, context, forceRefresh = false, status, signal } = fetchOptions;\n        if (!this.#hasFetchMethod) {\n            if (status) status.fetch = \"get\";\n            return this.get(k, {\n                allowStale,\n                updateAgeOnGet,\n                noDeleteOnStaleGet,\n                status\n            });\n        }\n        const options = {\n            allowStale,\n            updateAgeOnGet,\n            noDeleteOnStaleGet,\n            ttl,\n            noDisposeOnSet,\n            size,\n            sizeCalculation,\n            noUpdateTTL,\n            noDeleteOnFetchRejection,\n            allowStaleOnFetchRejection,\n            allowStaleOnFetchAbort,\n            ignoreFetchAbort,\n            status,\n            signal\n        };\n        let index = this.#keyMap.get(k);\n        if (index === undefined) {\n            if (status) status.fetch = \"miss\";\n            const p = this.#backgroundFetch(k, index, options, context);\n            return p.__returned = p;\n        } else {\n            // in cache, maybe already fetching\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v)) {\n                const stale = allowStale && v.__staleWhileFetching !== undefined;\n                if (status) {\n                    status.fetch = \"inflight\";\n                    if (stale) status.returnedStale = true;\n                }\n                return stale ? v.__staleWhileFetching : v.__returned = v;\n            }\n            // if we force a refresh, that means do NOT serve the cached value,\n            // unless we are already in the process of refreshing the cache.\n            const isStale = this.#isStale(index);\n            if (!forceRefresh && !isStale) {\n                if (status) status.fetch = \"hit\";\n                this.#moveToTail(index);\n                if (updateAgeOnGet) {\n                    this.#updateItemAge(index);\n                }\n                if (status) this.#statusTTL(status, index);\n                return v;\n            }\n            // ok, it is stale or a forced refresh, and not already fetching.\n            // refresh the cache.\n            const p = this.#backgroundFetch(k, index, options, context);\n            const hasStale = p.__staleWhileFetching !== undefined;\n            const staleVal = hasStale && allowStale;\n            if (status) {\n                status.fetch = isStale ? \"stale\" : \"refresh\";\n                if (staleVal && isStale) status.returnedStale = true;\n            }\n            return staleVal ? p.__staleWhileFetching : p.__returned = p;\n        }\n    }\n    /**\n     * Return a value from the cache. Will update the recency of the cache\n     * entry found.\n     *\n     * If the key is not found, get() will return `undefined`.\n     */ get(k, getOptions = {}) {\n        const { allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, status } = getOptions;\n        const index = this.#keyMap.get(k);\n        if (index !== undefined) {\n            const value = this.#valList[index];\n            const fetching = this.#isBackgroundFetch(value);\n            if (status) this.#statusTTL(status, index);\n            if (this.#isStale(index)) {\n                if (status) status.get = \"stale\";\n                // delete only if not an in-flight background fetch\n                if (!fetching) {\n                    if (!noDeleteOnStaleGet) {\n                        this.delete(k);\n                    }\n                    if (status && allowStale) status.returnedStale = true;\n                    return allowStale ? value : undefined;\n                } else {\n                    if (status && allowStale && value.__staleWhileFetching !== undefined) {\n                        status.returnedStale = true;\n                    }\n                    return allowStale ? value.__staleWhileFetching : undefined;\n                }\n            } else {\n                if (status) status.get = \"hit\";\n                // if we're currently fetching it, we don't actually have it yet\n                // it's not stale, which means this isn't a staleWhileRefetching.\n                // If it's not stale, and fetching, AND has a __staleWhileFetching\n                // value, then that means the user fetched with {forceRefresh:true},\n                // so it's safe to return that value.\n                if (fetching) {\n                    return value.__staleWhileFetching;\n                }\n                this.#moveToTail(index);\n                if (updateAgeOnGet) {\n                    this.#updateItemAge(index);\n                }\n                return value;\n            }\n        } else if (status) {\n            status.get = \"miss\";\n        }\n    }\n    #connect(p, n) {\n        this.#prev[n] = p;\n        this.#next[p] = n;\n    }\n    #moveToTail(index) {\n        // if tail already, nothing to do\n        // if head, move head to next[index]\n        // else\n        //   move next[prev[index]] to next[index] (head has no prev)\n        //   move prev[next[index]] to prev[index]\n        // prev[index] = tail\n        // next[tail] = index\n        // tail = index\n        if (index !== this.#tail) {\n            if (index === this.#head) {\n                this.#head = this.#next[index];\n            } else {\n                this.#connect(this.#prev[index], this.#next[index]);\n            }\n            this.#connect(this.#tail, index);\n            this.#tail = index;\n        }\n    }\n    /**\n     * Deletes a key out of the cache.\n     * Returns true if the key was deleted, false otherwise.\n     */ delete(k) {\n        let deleted = false;\n        if (this.#size !== 0) {\n            const index = this.#keyMap.get(k);\n            if (index !== undefined) {\n                deleted = true;\n                if (this.#size === 1) {\n                    this.clear();\n                } else {\n                    this.#removeItemSize(index);\n                    const v = this.#valList[index];\n                    if (this.#isBackgroundFetch(v)) {\n                        v.__abortController.abort(new Error(\"deleted\"));\n                    } else if (this.#hasDispose || this.#hasDisposeAfter) {\n                        if (this.#hasDispose) {\n                            this.#dispose?.(v, k, \"delete\");\n                        }\n                        if (this.#hasDisposeAfter) {\n                            this.#disposed?.push([\n                                v,\n                                k,\n                                \"delete\"\n                            ]);\n                        }\n                    }\n                    this.#keyMap.delete(k);\n                    this.#keyList[index] = undefined;\n                    this.#valList[index] = undefined;\n                    if (index === this.#tail) {\n                        this.#tail = this.#prev[index];\n                    } else if (index === this.#head) {\n                        this.#head = this.#next[index];\n                    } else {\n                        this.#next[this.#prev[index]] = this.#next[index];\n                        this.#prev[this.#next[index]] = this.#prev[index];\n                    }\n                    this.#size--;\n                    this.#free.push(index);\n                }\n            }\n        }\n        if (this.#hasDisposeAfter && this.#disposed?.length) {\n            const dt = this.#disposed;\n            let task;\n            while(task = dt?.shift()){\n                this.#disposeAfter?.(...task);\n            }\n        }\n        return deleted;\n    }\n    /**\n     * Clear the cache entirely, throwing away all values.\n     */ clear() {\n        for (const index of this.#rindexes({\n            allowStale: true\n        })){\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v)) {\n                v.__abortController.abort(new Error(\"deleted\"));\n            } else {\n                const k = this.#keyList[index];\n                if (this.#hasDispose) {\n                    this.#dispose?.(v, k, \"delete\");\n                }\n                if (this.#hasDisposeAfter) {\n                    this.#disposed?.push([\n                        v,\n                        k,\n                        \"delete\"\n                    ]);\n                }\n            }\n        }\n        this.#keyMap.clear();\n        this.#valList.fill(undefined);\n        this.#keyList.fill(undefined);\n        if (this.#ttls && this.#starts) {\n            this.#ttls.fill(0);\n            this.#starts.fill(0);\n        }\n        if (this.#sizes) {\n            this.#sizes.fill(0);\n        }\n        this.#head = 0;\n        this.#tail = 0;\n        this.#free.length = 0;\n        this.#calculatedSize = 0;\n        this.#size = 0;\n        if (this.#hasDisposeAfter && this.#disposed) {\n            const dt = this.#disposed;\n            let task;\n            while(task = dt?.shift()){\n                this.#disposeAfter?.(...task);\n            }\n        }\n    }\n}\nexports.LRUCache = LRUCache;\nexports[\"default\"] = LRUCache; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/node_modules/lru-cache/dist/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/package.json":
/*!******************************************!*\
  !*** ./node_modules/mysql2/package.json ***!
  \******************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"name":"mysql2","version":"3.7.0","description":"fast mysql driver. Implements core protocol, prepared statements, ssl and compression in native JS","main":"index.js","typings":"typings/mysql/index","scripts":{"lint":"npm run lint:docs && npm run lint:code","lint:code":"eslint index.js promise.js index.d.ts promise.d.ts \\"typings/**/*.ts\\" \\"lib/**/*.js\\" \\"test/**/*.{js,ts}\\" \\"benchmarks/**/*.js\\"","lint:docs":"eslint Contributing.md README.md","test":"node ./test/run.js","test:builtin-node-runner":"NODE_V8_COVERAGE=./coverage node --test --experimental-test-coverage test/builtin-runner","test:tsc-build":"cd \\"test/tsc-build\\" && npx tsc -p \\"tsconfig.json\\"","coverage-test":"c8 -r cobertura -r lcov -r text node ./test/run.js","benchmark":"node ./benchmarks/benchmark.js","prettier":"prettier --single-quote --trailing-comma none --write \\"{lib,test}/**/*.js\\"","prettier:docs":"prettier --single-quote --trailing-comma none --write README.md","precommit":"lint-staged","eslint-check":"eslint --print-config .eslintrc | eslint-config-prettier-check","wait-port":"wait-on"},"lint-staged":{"*.js":["prettier --single-quote --trailing-comma none --write","git add"]},"repository":{"type":"git","url":"https://github.com/sidorares/node-mysql2"},"homepage":"https://sidorares.github.io/node-mysql2/docs","keywords":["mysql","client","server"],"files":["lib","typings/mysql","index.js","index.d.ts","promise.js","promise.d.ts"],"exports":{".":"./index.js","./package.json":"./package.json","./promise":"./promise.js","./promise.js":"./promise.js"},"engines":{"node":">= 8.0"},"author":"Andrey Sidorov <andrey.sidorov@gmail.com>","license":"MIT","dependencies":{"denque":"^2.1.0","generate-function":"^2.3.1","iconv-lite":"^0.6.3","long":"^5.2.1","lru-cache":"^8.0.0","named-placeholders":"^1.1.3","seq-queue":"^0.0.5","sqlstring":"^2.3.2"},"devDependencies":{"@types/node":"^20.0.0","@typescript-eslint/eslint-plugin":"^5.42.1","@typescript-eslint/parser":"^5.42.1","assert-diff":"^3.0.2","benchmark":"^2.1.4","c8":"^8.0.0","error-stack-parser":"^2.0.3","eslint":"^8.27.0","eslint-config-prettier":"^9.0.0","eslint-plugin-async-await":"0.0.0","eslint-plugin-markdown":"^3.0.0","husky":"^8.0.2","lint-staged":"^15.0.1","portfinder":"^1.0.28","prettier":"^3.0.0","progress":"^2.0.3","typescript":"^5.0.2","urun":"0.0.8","utest":"0.0.8"}}');

/***/ })

};
;